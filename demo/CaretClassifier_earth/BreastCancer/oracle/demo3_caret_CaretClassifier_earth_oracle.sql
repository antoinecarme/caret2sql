-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretClassifier_earth
-- Dataset : BreastCancer
-- Database : oracle


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH earth_input AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS BINARY_DOUBLE) AS "Feature_0", CAST("ADS"."Feature_1" AS BINARY_DOUBLE) AS "Feature_1", CAST("ADS"."Feature_2" AS BINARY_DOUBLE) AS "Feature_2", CAST("ADS"."Feature_3" AS BINARY_DOUBLE) AS "Feature_3", CAST("ADS"."Feature_4" AS BINARY_DOUBLE) AS "Feature_4", CAST("ADS"."Feature_5" AS BINARY_DOUBLE) AS "Feature_5", CAST("ADS"."Feature_6" AS BINARY_DOUBLE) AS "Feature_6", CAST("ADS"."Feature_7" AS BINARY_DOUBLE) AS "Feature_7", CAST("ADS"."Feature_8" AS BINARY_DOUBLE) AS "Feature_8", CAST("ADS"."Feature_9" AS BINARY_DOUBLE) AS "Feature_9", CAST("ADS"."Feature_10" AS BINARY_DOUBLE) AS "Feature_10", CAST("ADS"."Feature_11" AS BINARY_DOUBLE) AS "Feature_11", CAST("ADS"."Feature_12" AS BINARY_DOUBLE) AS "Feature_12", CAST("ADS"."Feature_13" AS BINARY_DOUBLE) AS "Feature_13", CAST("ADS"."Feature_14" AS BINARY_DOUBLE) AS "Feature_14", CAST("ADS"."Feature_15" AS BINARY_DOUBLE) AS "Feature_15", CAST("ADS"."Feature_16" AS BINARY_DOUBLE) AS "Feature_16", CAST("ADS"."Feature_17" AS BINARY_DOUBLE) AS "Feature_17", CAST("ADS"."Feature_18" AS BINARY_DOUBLE) AS "Feature_18", CAST("ADS"."Feature_19" AS BINARY_DOUBLE) AS "Feature_19", CAST("ADS"."Feature_20" AS BINARY_DOUBLE) AS "Feature_20", CAST("ADS"."Feature_21" AS BINARY_DOUBLE) AS "Feature_21", CAST("ADS"."Feature_22" AS BINARY_DOUBLE) AS "Feature_22", CAST("ADS"."Feature_23" AS BINARY_DOUBLE) AS "Feature_23", CAST("ADS"."Feature_24" AS BINARY_DOUBLE) AS "Feature_24", CAST("ADS"."Feature_25" AS BINARY_DOUBLE) AS "Feature_25", CAST("ADS"."Feature_26" AS BINARY_DOUBLE) AS "Feature_26", CAST("ADS"."Feature_27" AS BINARY_DOUBLE) AS "Feature_27", CAST("ADS"."Feature_28" AS BINARY_DOUBLE) AS "Feature_28", CAST("ADS"."Feature_29" AS BINARY_DOUBLE) AS "Feature_29" 
FROM "BREASTCANCER" "ADS"), 
earth_cte AS 
(SELECT earth_input."KEY" AS "KEY", -20276.6860699524 * greatest(earth_input."Feature_7" - 0.09431, 0) + 12218.88993541963 * greatest(0.09431 - earth_input."Feature_7", 0) + -2.380924151983417 * greatest(earth_input."Feature_23" - 1269.0, 0) + 0.8668634524124131 * greatest(1269.0 - earth_input."Feature_23", 0) + 412.90118461426016 * greatest(earth_input."Feature_27" - 0.09594, 0) + -1746.160659578372 * greatest(0.09594 - earth_input."Feature_27", 0) + 190.51083729253182 * greatest(earth_input."Feature_0" - 17.68, 0) + -207.88664437327117 * greatest(17.68 - earth_input."Feature_0", 0) + 7.36935004246159 * greatest(earth_input."Feature_1" - 23.29, 0) + -856.3179077971361 * greatest(earth_input."Feature_28" - 0.2226, 0) + -3195.2534672226648 * greatest(0.2226 - earth_input."Feature_28", 0) + -4.570803216789019 * greatest(158.8 - earth_input."Feature_22", 0) + 819.6893984092267 * greatest(earth_input."Feature_16" - 0.05554, 0) + 2268.774345428007 * greatest(0.05554 - earth_input."Feature_16", 0) + 397.06434654544563 * greatest(earth_input."Feature_27" - 0.1674, 0) + -1048.494561328608 * greatest(earth_input."Feature_27" - 0.1181, 0) + 22616.719784892462 * greatest(0.01096 - earth_input."Feature_18", 0) + -0.7862756286049772 * greatest(674.5 - earth_input."Feature_3", 0) + 2.5291940005518643 * greatest(earth_input."Feature_23" - 1175.0, 0) + -3247.063924841283 * greatest(0.1479 - earth_input."Feature_5", 0) + 20175.91910112512 * greatest(earth_input."Feature_7" - 0.07488, 0) + -10775.18163906298 * greatest(0.05892000000000001 - earth_input."Feature_6", 0) + 1270.585189556399 * greatest(0.2687 - earth_input."Feature_26", 0) + 198.7727796283102 * greatest(0.5391 - earth_input."Feature_11", 0) + -8.557613585377194 * greatest(earth_input."Feature_1" - 19.22, 0) + 1.336414986853243 * greatest(earth_input."Feature_22" - 128.7, 0) + -3.456761071624524 * greatest(earth_input."Feature_22" - 97.58, 0) + 31.847631901572647 * greatest(91.12 - earth_input."Feature_2", 0) + -208.4114979295069 * greatest(earth_input."Feature_0" - 14.22, 0) + 4763.523437576098 * greatest(earth_input."Feature_24" - 0.1782, 0) + 286.8939053683233 * greatest(0.1782 - earth_input."Feature_24", 0) + 96.79812750730221 * greatest(earth_input."Feature_25" - 0.611, 0) + 260.26228755048453 AS earth 
FROM earth_input), 
dot_prod_logistic AS 
(SELECT earth_cte."KEY" AS "KEY", earth_cte.earth AS dot_prod, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -earth_cte.earth)))) AS logistic 
FROM earth_cte)
 SELECT dot_prod_logistic."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", 1.0 - dot_prod_logistic.logistic AS "Proba_0", dot_prod_logistic.logistic AS "Proba_1", CASE WHEN (1.0 - dot_prod_logistic.logistic IS NULL OR 1.0 - dot_prod_logistic.logistic > 0.0) THEN ln(1.0 - dot_prod_logistic.logistic) ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CASE WHEN (dot_prod_logistic.logistic IS NULL OR dot_prod_logistic.logistic > 0.0) THEN ln(dot_prod_logistic.logistic) ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CASE WHEN (dot_prod_logistic.dot_prod > 0.0) THEN 1 ELSE 0 END AS "Decision", greatest(1.0 - dot_prod_logistic.logistic, dot_prod_logistic.logistic) AS "DecisionProba" 
FROM dot_prod_logistic