-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretClassifier_nnet
-- Dataset : digits
-- Database : mysql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH `IL` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CAST(`ADS`.`Feature_0` AS DOUBLE) AS `Feature_0`, CAST(`ADS`.`Feature_1` AS DOUBLE) AS `Feature_1`, CAST(`ADS`.`Feature_2` AS DOUBLE) AS `Feature_2`, CAST(`ADS`.`Feature_3` AS DOUBLE) AS `Feature_3`, CAST(`ADS`.`Feature_4` AS DOUBLE) AS `Feature_4`, CAST(`ADS`.`Feature_5` AS DOUBLE) AS `Feature_5`, CAST(`ADS`.`Feature_6` AS DOUBLE) AS `Feature_6`, CAST(`ADS`.`Feature_7` AS DOUBLE) AS `Feature_7`, CAST(`ADS`.`Feature_8` AS DOUBLE) AS `Feature_8`, CAST(`ADS`.`Feature_9` AS DOUBLE) AS `Feature_9`, CAST(`ADS`.`Feature_10` AS DOUBLE) AS `Feature_10`, CAST(`ADS`.`Feature_11` AS DOUBLE) AS `Feature_11`, CAST(`ADS`.`Feature_12` AS DOUBLE) AS `Feature_12`, CAST(`ADS`.`Feature_13` AS DOUBLE) AS `Feature_13`, CAST(`ADS`.`Feature_14` AS DOUBLE) AS `Feature_14`, CAST(`ADS`.`Feature_15` AS DOUBLE) AS `Feature_15`, CAST(`ADS`.`Feature_16` AS DOUBLE) AS `Feature_16`, CAST(`ADS`.`Feature_17` AS DOUBLE) AS `Feature_17`, CAST(`ADS`.`Feature_18` AS DOUBLE) AS `Feature_18`, CAST(`ADS`.`Feature_19` AS DOUBLE) AS `Feature_19`, CAST(`ADS`.`Feature_20` AS DOUBLE) AS `Feature_20`, CAST(`ADS`.`Feature_21` AS DOUBLE) AS `Feature_21`, CAST(`ADS`.`Feature_22` AS DOUBLE) AS `Feature_22`, CAST(`ADS`.`Feature_23` AS DOUBLE) AS `Feature_23`, CAST(`ADS`.`Feature_24` AS DOUBLE) AS `Feature_24`, CAST(`ADS`.`Feature_25` AS DOUBLE) AS `Feature_25`, CAST(`ADS`.`Feature_26` AS DOUBLE) AS `Feature_26`, CAST(`ADS`.`Feature_27` AS DOUBLE) AS `Feature_27`, CAST(`ADS`.`Feature_28` AS DOUBLE) AS `Feature_28`, CAST(`ADS`.`Feature_29` AS DOUBLE) AS `Feature_29`, CAST(`ADS`.`Feature_30` AS DOUBLE) AS `Feature_30`, CAST(`ADS`.`Feature_31` AS DOUBLE) AS `Feature_31`, CAST(`ADS`.`Feature_32` AS DOUBLE) AS `Feature_32`, CAST(`ADS`.`Feature_33` AS DOUBLE) AS `Feature_33`, CAST(`ADS`.`Feature_34` AS DOUBLE) AS `Feature_34`, CAST(`ADS`.`Feature_35` AS DOUBLE) AS `Feature_35`, CAST(`ADS`.`Feature_36` AS DOUBLE) AS `Feature_36`, CAST(`ADS`.`Feature_37` AS DOUBLE) AS `Feature_37`, CAST(`ADS`.`Feature_38` AS DOUBLE) AS `Feature_38`, CAST(`ADS`.`Feature_39` AS DOUBLE) AS `Feature_39`, CAST(`ADS`.`Feature_40` AS DOUBLE) AS `Feature_40`, CAST(`ADS`.`Feature_41` AS DOUBLE) AS `Feature_41`, CAST(`ADS`.`Feature_42` AS DOUBLE) AS `Feature_42`, CAST(`ADS`.`Feature_43` AS DOUBLE) AS `Feature_43`, CAST(`ADS`.`Feature_44` AS DOUBLE) AS `Feature_44`, CAST(`ADS`.`Feature_45` AS DOUBLE) AS `Feature_45`, CAST(`ADS`.`Feature_46` AS DOUBLE) AS `Feature_46`, CAST(`ADS`.`Feature_47` AS DOUBLE) AS `Feature_47`, CAST(`ADS`.`Feature_48` AS DOUBLE) AS `Feature_48`, CAST(`ADS`.`Feature_49` AS DOUBLE) AS `Feature_49`, CAST(`ADS`.`Feature_50` AS DOUBLE) AS `Feature_50`, CAST(`ADS`.`Feature_51` AS DOUBLE) AS `Feature_51`, CAST(`ADS`.`Feature_52` AS DOUBLE) AS `Feature_52`, CAST(`ADS`.`Feature_53` AS DOUBLE) AS `Feature_53`, CAST(`ADS`.`Feature_54` AS DOUBLE) AS `Feature_54`, CAST(`ADS`.`Feature_55` AS DOUBLE) AS `Feature_55`, CAST(`ADS`.`Feature_56` AS DOUBLE) AS `Feature_56`, CAST(`ADS`.`Feature_57` AS DOUBLE) AS `Feature_57`, CAST(`ADS`.`Feature_58` AS DOUBLE) AS `Feature_58`, CAST(`ADS`.`Feature_59` AS DOUBLE) AS `Feature_59`, CAST(`ADS`.`Feature_60` AS DOUBLE) AS `Feature_60`, CAST(`ADS`.`Feature_61` AS DOUBLE) AS `Feature_61`, CAST(`ADS`.`Feature_62` AS DOUBLE) AS `Feature_62`, CAST(`ADS`.`Feature_63` AS DOUBLE) AS `Feature_63` 
FROM digits AS `ADS`), 
`HL_BA_1` AS 
(SELECT `IL`.`KEY` AS `KEY`, -0.07297647 * `IL`.`Feature_0` + -0.02940895 * `IL`.`Feature_1` + -0.8465083 * `IL`.`Feature_2` + -1.471514 * `IL`.`Feature_3` + 0.2784627 * `IL`.`Feature_4` + 0.688572 * `IL`.`Feature_5` + -2.882763 * `IL`.`Feature_6` + 0.3291401 * `IL`.`Feature_7` + -0.05476826 * `IL`.`Feature_8` + 0.8871497 * `IL`.`Feature_9` + -1.384215 * `IL`.`Feature_10` + -3.129292 * `IL`.`Feature_11` + -1.653917 * `IL`.`Feature_12` + 0.5804477 * `IL`.`Feature_13` + 1.201955 * `IL`.`Feature_14` + 0.4333293 * `IL`.`Feature_15` + -0.1159616 * `IL`.`Feature_16` + -0.8068 * `IL`.`Feature_17` + -4.339417 * `IL`.`Feature_18` + -0.504011 * `IL`.`Feature_19` + 6.734813 * `IL`.`Feature_20` + -0.09589252 * `IL`.`Feature_21` + 2.12853 * `IL`.`Feature_22` + 0.752635 * `IL`.`Feature_23` + 0.03293492 * `IL`.`Feature_24` + -0.6769373 * `IL`.`Feature_25` + -3.828566 * `IL`.`Feature_26` + -2.183679 * `IL`.`Feature_27` + 0.3727259 * `IL`.`Feature_28` + -2.023166 * `IL`.`Feature_29` + 0.7002059 * `IL`.`Feature_30` + 0.1642422 * `IL`.`Feature_31` + -0.03246853 * `IL`.`Feature_32` + 0.02269854 * `IL`.`Feature_33` + -1.180018 * `IL`.`Feature_34` + 2.74432 * `IL`.`Feature_35` + 5.25663 * `IL`.`Feature_36` + 0.544596 * `IL`.`Feature_37` + -1.533624 * `IL`.`Feature_38` + -0.008563548 * `IL`.`Feature_39` + -0.08045738 * `IL`.`Feature_40` + 1.592226 * `IL`.`Feature_41` + 4.124448 * `IL`.`Feature_42` + 3.022139 * `IL`.`Feature_43` + 1.38638 * `IL`.`Feature_44` + 0.1575602 * `IL`.`Feature_45` + -0.8032892 * `IL`.`Feature_46` + -0.2307303 * `IL`.`Feature_47` + -0.06955763 * `IL`.`Feature_48` + -0.4184122 * `IL`.`Feature_49` + -0.1962014 * `IL`.`Feature_50` + -0.3365664 * `IL`.`Feature_51` + 1.004751 * `IL`.`Feature_52` + 2.685678 * `IL`.`Feature_53` + -0.5337542 * `IL`.`Feature_54` + -0.1996587 * `IL`.`Feature_55` + -0.0130574 * `IL`.`Feature_56` + -0.6114819 * `IL`.`Feature_57` + -0.2078294 * `IL`.`Feature_58` + 0.8009583 * `IL`.`Feature_59` + 0.1325785 * `IL`.`Feature_60` + 1.995831 * `IL`.`Feature_61` + 1.311451 * `IL`.`Feature_62` + 1.026404 * `IL`.`Feature_63` + 0.0636794 AS `NEUR_1_1`, 0.01158028 * `IL`.`Feature_0` + 0.09806946 * `IL`.`Feature_1` + 2.752247 * `IL`.`Feature_2` + 2.395697 * `IL`.`Feature_3` + 2.913204 * `IL`.`Feature_4` + 3.598129 * `IL`.`Feature_5` + 2.757279 * `IL`.`Feature_6` + -0.005684362 * `IL`.`Feature_7` + 0.05782645 * `IL`.`Feature_8` + 3.633796 * `IL`.`Feature_9` + 5.136937 * `IL`.`Feature_10` + 4.204503 * `IL`.`Feature_11` + 2.40558 * `IL`.`Feature_12` + 1.524421 * `IL`.`Feature_13` + 2.440135 * `IL`.`Feature_14` + -0.8483394 * `IL`.`Feature_15` + -0.02960102 * `IL`.`Feature_16` + 3.164843 * `IL`.`Feature_17` + -2.36022 * `IL`.`Feature_18` + -2.875341 * `IL`.`Feature_19` + -5.510356 * `IL`.`Feature_20` + 3.55684 * `IL`.`Feature_21` + -0.6161442 * `IL`.`Feature_22` + -0.7928414 * `IL`.`Feature_23` + -0.09380248 * `IL`.`Feature_24` + -1.271173 * `IL`.`Feature_25` + -3.481984 * `IL`.`Feature_26` + 0.3638617 * `IL`.`Feature_27` + 1.554598 * `IL`.`Feature_28` + 2.036123 * `IL`.`Feature_29` + 0.8937102 * `IL`.`Feature_30` + 0.006893054 * `IL`.`Feature_31` + 0.01543753 * `IL`.`Feature_32` + -3.155821 * `IL`.`Feature_33` + 0.4486142 * `IL`.`Feature_34` + -0.4256432 * `IL`.`Feature_35` + -2.088866 * `IL`.`Feature_36` + -4.025431 * `IL`.`Feature_37` + 1.871564 * `IL`.`Feature_38` + 0.008619759 * `IL`.`Feature_39` + -0.01424091 * `IL`.`Feature_40` + 1.669886 * `IL`.`Feature_41` + -1.988719 * `IL`.`Feature_42` + -3.577377 * `IL`.`Feature_43` + -6.848536 * `IL`.`Feature_44` + -0.460508 * `IL`.`Feature_45` + -0.2262695 * `IL`.`Feature_46` + -0.2480627 * `IL`.`Feature_47` + 0.041012 * `IL`.`Feature_48` + -0.07967419 * `IL`.`Feature_49` + -0.3218689 * `IL`.`Feature_50` + -1.03756 * `IL`.`Feature_51` + 0.6132614 * `IL`.`Feature_52` + 2.664204 * `IL`.`Feature_53` + 1.606357 * `IL`.`Feature_54` + -0.08180218 * `IL`.`Feature_55` + -0.02320736 * `IL`.`Feature_56` + 0.302982 * `IL`.`Feature_57` + 2.857308 * `IL`.`Feature_58` + 1.849926 * `IL`.`Feature_59` + -3.935981 * `IL`.`Feature_60` + -0.05241701 * `IL`.`Feature_61` + 0.7614188 * `IL`.`Feature_62` + -1.896875 * `IL`.`Feature_63` + 0.5087191 AS `NEUR_1_2`, -0.08726925 * `IL`.`Feature_0` + 0.5606608 * `IL`.`Feature_1` + -2.301654 * `IL`.`Feature_2` + 1.261614 * `IL`.`Feature_3` + -1.352572 * `IL`.`Feature_4` + -5.44105 * `IL`.`Feature_5` + -5.703569 * `IL`.`Feature_6` + -0.1628502 * `IL`.`Feature_7` + -0.1311775 * `IL`.`Feature_8` + -1.193953 * `IL`.`Feature_9` + 0.5243427 * `IL`.`Feature_10` + -1.56012 * `IL`.`Feature_11` + -2.516212 * `IL`.`Feature_12` + 3.514296 * `IL`.`Feature_13` + 1.671184 * `IL`.`Feature_14` + -0.3417576 * `IL`.`Feature_15` + 0.1094258 * `IL`.`Feature_16` + 1.925729 * `IL`.`Feature_17` + 0.053726 * `IL`.`Feature_18` + -2.630265 * `IL`.`Feature_19` + -0.9988388 * `IL`.`Feature_20` + 4.173068 * `IL`.`Feature_21` + 2.235532 * `IL`.`Feature_22` + -0.1463873 * `IL`.`Feature_23` + -0.04444005 * `IL`.`Feature_24` + -2.568938 * `IL`.`Feature_25` + -3.151227 * `IL`.`Feature_26` + -1.161184 * `IL`.`Feature_27` + -0.7892513 * `IL`.`Feature_28` + -0.3477674 * `IL`.`Feature_29` + -3.275393 * `IL`.`Feature_30` + -0.1523314 * `IL`.`Feature_31` + 0.007954293 * `IL`.`Feature_32` + -2.255013 * `IL`.`Feature_33` + -1.115848 * `IL`.`Feature_34` + 3.627459 * `IL`.`Feature_35` + -1.745391 * `IL`.`Feature_36` + -3.799756 * `IL`.`Feature_37` + -4.861864 * `IL`.`Feature_38` + -0.03604655 * `IL`.`Feature_39` + -0.1624637 * `IL`.`Feature_40` + -0.6844504 * `IL`.`Feature_41` + 3.374236 * `IL`.`Feature_42` + -1.952234 * `IL`.`Feature_43` + -1.507531 * `IL`.`Feature_44` + 1.192728 * `IL`.`Feature_45` + 2.188157 * `IL`.`Feature_46` + 0.05902353 * `IL`.`Feature_47` + -0.9379079 * `IL`.`Feature_48` + -3.054197 * `IL`.`Feature_49` + 3.992363 * `IL`.`Feature_50` + -0.1261598 * `IL`.`Feature_51` + 2.165062 * `IL`.`Feature_52` + 4.335574 * `IL`.`Feature_53` + 2.823186 * `IL`.`Feature_54` + 0.1103382 * `IL`.`Feature_55` + 0.1234973 * `IL`.`Feature_56` + 0.7635132 * `IL`.`Feature_57` + -1.124117 * `IL`.`Feature_58` + 1.818536 * `IL`.`Feature_59` + 2.661553 * `IL`.`Feature_60` + 1.74523 * `IL`.`Feature_61` + 0.9646158 * `IL`.`Feature_62` + 0.04465887 * `IL`.`Feature_63` + -0.2698425 AS `NEUR_1_3`, 0.0519448 * `IL`.`Feature_0` + -1.059834 * `IL`.`Feature_1` + -0.4912576 * `IL`.`Feature_2` + -2.055728 * `IL`.`Feature_3` + -2.963176 * `IL`.`Feature_4` + 0.2658333 * `IL`.`Feature_5` + 1.666689 * `IL`.`Feature_6` + 1.501304 * `IL`.`Feature_7` + 0.3157402 * `IL`.`Feature_8` + -0.7547238 * `IL`.`Feature_9` + 2.10937 * `IL`.`Feature_10` + -0.05188087 * `IL`.`Feature_11` + 2.846999 * `IL`.`Feature_12` + -0.8986572 * `IL`.`Feature_13` + 1.465798 * `IL`.`Feature_14` + 0.8402014 * `IL`.`Feature_15` + 0.009552978 * `IL`.`Feature_16` + -1.30072 * `IL`.`Feature_17` + 3.539045 * `IL`.`Feature_18` + -0.355877 * `IL`.`Feature_19` + -0.2990581 * `IL`.`Feature_20` + 1.278127 * `IL`.`Feature_21` + 1.337266 * `IL`.`Feature_22` + -0.3901737 * `IL`.`Feature_23` + -0.04655534 * `IL`.`Feature_24` + -3.61637 * `IL`.`Feature_25` + -1.730688 * `IL`.`Feature_26` + 4.146639 * `IL`.`Feature_27` + 2.093463 * `IL`.`Feature_28` + 3.522362 * `IL`.`Feature_29` + -2.919585 * `IL`.`Feature_30` + -0.1071243 * `IL`.`Feature_31` + 0.1233398 * `IL`.`Feature_32` + -4.895947 * `IL`.`Feature_33` + -3.058654 * `IL`.`Feature_34` + 1.909053 * `IL`.`Feature_35` + -0.592363 * `IL`.`Feature_36` + -2.440694 * `IL`.`Feature_37` + -3.541918 * `IL`.`Feature_38` + -0.005995123 * `IL`.`Feature_39` + -0.008574044 * `IL`.`Feature_40` + -3.181835 * `IL`.`Feature_41` + 2.270054 * `IL`.`Feature_42` + 2.306003 * `IL`.`Feature_43` + -0.3956271 * `IL`.`Feature_44` + -3.416666 * `IL`.`Feature_45` + -3.939235 * `IL`.`Feature_46` + -0.02779702 * `IL`.`Feature_47` + -0.08140161 * `IL`.`Feature_48` + -0.396353 * `IL`.`Feature_49` + -1.079385 * `IL`.`Feature_50` + -1.755412 * `IL`.`Feature_51` + -0.5817576 * `IL`.`Feature_52` + -0.5769252 * `IL`.`Feature_53` + -2.598616 * `IL`.`Feature_54` + 1.210999 * `IL`.`Feature_55` + -0.05325859 * `IL`.`Feature_56` + -1.084854 * `IL`.`Feature_57` + -5.786024 * `IL`.`Feature_58` + -0.1314116 * `IL`.`Feature_59` + 0.5202513 * `IL`.`Feature_60` + 2.827972 * `IL`.`Feature_61` + 1.006915 * `IL`.`Feature_62` + 1.56915 * `IL`.`Feature_63` + -0.4838222 AS `NEUR_1_4`, -0.09961146 * `IL`.`Feature_0` + -1.193191 * `IL`.`Feature_1` + 0.4539745 * `IL`.`Feature_2` + -5.537499 * `IL`.`Feature_3` + 2.529968 * `IL`.`Feature_4` + -0.5613414 * `IL`.`Feature_5` + -0.7077805 * `IL`.`Feature_6` + -0.7704215 * `IL`.`Feature_7` + -0.08217787 * `IL`.`Feature_8` + -0.8112671 * `IL`.`Feature_9` + 2.893725 * `IL`.`Feature_10` + -3.333883 * `IL`.`Feature_11` + -1.44695 * `IL`.`Feature_12` + 7.039351 * `IL`.`Feature_13` + 1.471171 * `IL`.`Feature_14` + 0.08615275 * `IL`.`Feature_15` + -0.01171711 * `IL`.`Feature_16` + -3.085499 * `IL`.`Feature_17` + 0.2349459 * `IL`.`Feature_18` + 0.8926272 * `IL`.`Feature_19` + -0.8789294 * `IL`.`Feature_20` + -4.553557 * `IL`.`Feature_21` + -4.968027 * `IL`.`Feature_22` + 0.2421679 * `IL`.`Feature_23` + -0.03409476 * `IL`.`Feature_24` + -3.230732 * `IL`.`Feature_25` + 2.433761 * `IL`.`Feature_26` + 2.510551 * `IL`.`Feature_27` + 4.327272 * `IL`.`Feature_28` + -1.318801 * `IL`.`Feature_29` + -9.404944 * `IL`.`Feature_30` + -0.08198326 * `IL`.`Feature_31` + -0.0255703 * `IL`.`Feature_32` + -2.567872 * `IL`.`Feature_33` + 0.188733 * `IL`.`Feature_34` + 2.73429 * `IL`.`Feature_35` + 0.1327099 * `IL`.`Feature_36` + 1.99434 * `IL`.`Feature_37` + -2.866843 * `IL`.`Feature_38` + -0.07494867 * `IL`.`Feature_39` + 0.06254787 * `IL`.`Feature_40` + 0.05150211 * `IL`.`Feature_41` + -2.696821 * `IL`.`Feature_42` + -4.190907 * `IL`.`Feature_43` + 5.472959 * `IL`.`Feature_44` + 3.446159 * `IL`.`Feature_45` + 9.422171 * `IL`.`Feature_46` + 0.2009676 * `IL`.`Feature_47` + 0.0692941 * `IL`.`Feature_48` + -2.772247 * `IL`.`Feature_49` + 2.680244 * `IL`.`Feature_50` + -4.367858 * `IL`.`Feature_51` + -5.383067 * `IL`.`Feature_52` + -3.706679 * `IL`.`Feature_53` + -0.1434384 * `IL`.`Feature_54` + -4.12608 * `IL`.`Feature_55` + -0.06575359 * `IL`.`Feature_56` + -0.5863948 * `IL`.`Feature_57` + -0.1923624 * `IL`.`Feature_58` + -1.588958 * `IL`.`Feature_59` + 6.568266 * `IL`.`Feature_60` + 1.160636 * `IL`.`Feature_61` + -6.35157 * `IL`.`Feature_62` + -3.921522 * `IL`.`Feature_63` + -0.09780436 AS `NEUR_1_5` 
FROM `IL`), 
`HL_1_logistic` AS 
(SELECT `HL_BA_1`.`KEY` AS `KEY`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_1`)))) AS `NEUR_1_1`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_2`)))) AS `NEUR_1_2`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_3`)))) AS `NEUR_1_3`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_4`)))) AS `NEUR_1_4`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_5`)))) AS `NEUR_1_5` 
FROM `HL_BA_1`), 
`HL_1_logistic_1` AS 
(SELECT `HL_1_logistic`.`KEY` AS `KEY`, `HL_1_logistic`.`NEUR_1_1` AS `NEUR_1_1`, `HL_1_logistic`.`NEUR_1_2` AS `NEUR_1_2`, `HL_1_logistic`.`NEUR_1_3` AS `NEUR_1_3`, `HL_1_logistic`.`NEUR_1_4` AS `NEUR_1_4`, `HL_1_logistic`.`NEUR_1_5` AS `NEUR_1_5` 
FROM `HL_1_logistic`), 
`OL_BA` AS 
(SELECT `HL_1_logistic_1`.`KEY` AS `KEY`, -8.268788 * `HL_1_logistic_1`.`NEUR_1_1` + 1.500514 * `HL_1_logistic_1`.`NEUR_1_2` + 5.123951 * `HL_1_logistic_1`.`NEUR_1_3` + -2.431254 * `HL_1_logistic_1`.`NEUR_1_4` + -6.270674 * `HL_1_logistic_1`.`NEUR_1_5` + 2.022186 AS `NEUR_2_1`, 3.049821 * `HL_1_logistic_1`.`NEUR_1_1` + -7.023551 * `HL_1_logistic_1`.`NEUR_1_2` + -1.373869 * `HL_1_logistic_1`.`NEUR_1_3` + 5.640145 * `HL_1_logistic_1`.`NEUR_1_4` + 1.005871 * `HL_1_logistic_1`.`NEUR_1_5` + 1.24847 AS `NEUR_2_2`, 4.919232 * `HL_1_logistic_1`.`NEUR_1_1` + 1.456438 * `HL_1_logistic_1`.`NEUR_1_2` + 3.772607 * `HL_1_logistic_1`.`NEUR_1_3` + 1.226651 * `HL_1_logistic_1`.`NEUR_1_4` + -7.64974 * `HL_1_logistic_1`.`NEUR_1_5` + -3.948121 AS `NEUR_2_3`, 5.037787 * `HL_1_logistic_1`.`NEUR_1_1` + 2.45062 * `HL_1_logistic_1`.`NEUR_1_2` + -0.117986 * `HL_1_logistic_1`.`NEUR_1_3` + -1.175956 * `HL_1_logistic_1`.`NEUR_1_4` + 3.269398 * `HL_1_logistic_1`.`NEUR_1_5` + -4.365463 AS `NEUR_2_4`, 1.682469 * `HL_1_logistic_1`.`NEUR_1_1` + -2.533684 * `HL_1_logistic_1`.`NEUR_1_2` + -6.585076 * `HL_1_logistic_1`.`NEUR_1_3` + -0.8910904 * `HL_1_logistic_1`.`NEUR_1_4` + 1.114583 * `HL_1_logistic_1`.`NEUR_1_5` + 5.149854 AS `NEUR_2_5`, -7.797728 * `HL_1_logistic_1`.`NEUR_1_1` + 5.381343 * `HL_1_logistic_1`.`NEUR_1_2` + -7.204694 * `HL_1_logistic_1`.`NEUR_1_3` + -4.779472 * `HL_1_logistic_1`.`NEUR_1_4` + 2.573028 * `HL_1_logistic_1`.`NEUR_1_5` + 2.123014 AS `NEUR_2_6`, 0.07274559 * `HL_1_logistic_1`.`NEUR_1_1` + -5.743684 * `HL_1_logistic_1`.`NEUR_1_2` + 5.863392 * `HL_1_logistic_1`.`NEUR_1_3` + -1.352719 * `HL_1_logistic_1`.`NEUR_1_4` + 1.85769 * `HL_1_logistic_1`.`NEUR_1_5` + 0.8954277 AS `NEUR_2_7`, 2.853831 * `HL_1_logistic_1`.`NEUR_1_1` + 3.566593 * `HL_1_logistic_1`.`NEUR_1_2` + -6.11901 * `HL_1_logistic_1`.`NEUR_1_3` + -2.329528 * `HL_1_logistic_1`.`NEUR_1_4` + -1.525617 * `HL_1_logistic_1`.`NEUR_1_5` + 2.18834 AS `NEUR_2_8`, 1.732334 * `HL_1_logistic_1`.`NEUR_1_1` + -1.225041 * `HL_1_logistic_1`.`NEUR_1_2` + 4.542045 * `HL_1_logistic_1`.`NEUR_1_3` + 4.352853 * `HL_1_logistic_1`.`NEUR_1_4` + 3.854075 * `HL_1_logistic_1`.`NEUR_1_5` + -5.073546 AS `NEUR_2_9`, -3.186869 * `HL_1_logistic_1`.`NEUR_1_1` + 2.397354 * `HL_1_logistic_1`.`NEUR_1_2` + 2.278297 * `HL_1_logistic_1`.`NEUR_1_3` + 1.733447 * `HL_1_logistic_1`.`NEUR_1_4` + 2.397456 * `HL_1_logistic_1`.`NEUR_1_5` + -0.5376867 AS `NEUR_2_10` 
FROM `HL_1_logistic_1`), 
`OL_softmax` AS 
(SELECT `OL_BA`.`KEY` AS `KEY`, `OL_BA`.`NEUR_2_1` AS `NEUR_2_1`, `OL_BA`.`NEUR_2_2` AS `NEUR_2_2`, `OL_BA`.`NEUR_2_3` AS `NEUR_2_3`, `OL_BA`.`NEUR_2_4` AS `NEUR_2_4`, `OL_BA`.`NEUR_2_5` AS `NEUR_2_5`, `OL_BA`.`NEUR_2_6` AS `NEUR_2_6`, `OL_BA`.`NEUR_2_7` AS `NEUR_2_7`, `OL_BA`.`NEUR_2_8` AS `NEUR_2_8`, `OL_BA`.`NEUR_2_9` AS `NEUR_2_9`, `OL_BA`.`NEUR_2_10` AS `NEUR_2_10` 
FROM `OL_BA`), 
`OL_softmax_1` AS 
(SELECT `OL_softmax`.`KEY` AS `KEY`, `OL_softmax`.`NEUR_2_1` AS `NEUR_2_1`, `OL_softmax`.`NEUR_2_2` AS `NEUR_2_2`, `OL_softmax`.`NEUR_2_3` AS `NEUR_2_3`, `OL_softmax`.`NEUR_2_4` AS `NEUR_2_4`, `OL_softmax`.`NEUR_2_5` AS `NEUR_2_5`, `OL_softmax`.`NEUR_2_6` AS `NEUR_2_6`, `OL_softmax`.`NEUR_2_7` AS `NEUR_2_7`, `OL_softmax`.`NEUR_2_8` AS `NEUR_2_8`, `OL_softmax`.`NEUR_2_9` AS `NEUR_2_9`, `OL_softmax`.`NEUR_2_10` AS `NEUR_2_10` 
FROM `OL_softmax`), 
orig_cte AS 
(SELECT `OL_softmax_1`.`KEY` AS `KEY`, `OL_softmax_1`.`NEUR_2_1` AS `Score_0`, `OL_softmax_1`.`NEUR_2_2` AS `Score_1`, `OL_softmax_1`.`NEUR_2_3` AS `Score_2`, `OL_softmax_1`.`NEUR_2_4` AS `Score_3`, `OL_softmax_1`.`NEUR_2_5` AS `Score_4`, `OL_softmax_1`.`NEUR_2_6` AS `Score_5`, `OL_softmax_1`.`NEUR_2_7` AS `Score_6`, `OL_softmax_1`.`NEUR_2_8` AS `Score_7`, `OL_softmax_1`.`NEUR_2_9` AS `Score_8`, `OL_softmax_1`.`NEUR_2_10` AS `Score_9`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `Proba_2`, NULL AS `Proba_3`, NULL AS `Proba_4`, NULL AS `Proba_5`, NULL AS `Proba_6`, NULL AS `Proba_7`, NULL AS `Proba_8`, NULL AS `Proba_9`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `LogProba_2`, NULL AS `LogProba_3`, NULL AS `LogProba_4`, NULL AS `LogProba_5`, NULL AS `LogProba_6`, NULL AS `LogProba_7`, NULL AS `LogProba_8`, NULL AS `LogProba_9`, CAST(NULL AS SIGNED INTEGER) AS `Decision`, NULL AS `DecisionProba` 
FROM `OL_softmax_1`), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 4 AS class, orig_cte.`LogProba_4` AS `LogProba`, orig_cte.`Proba_4` AS `Proba`, orig_cte.`Score_4` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 5 AS class, orig_cte.`LogProba_5` AS `LogProba`, orig_cte.`Proba_5` AS `Proba`, orig_cte.`Score_5` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 6 AS class, orig_cte.`LogProba_6` AS `LogProba`, orig_cte.`Proba_6` AS `Proba`, orig_cte.`Score_6` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 7 AS class, orig_cte.`LogProba_7` AS `LogProba`, orig_cte.`Proba_7` AS `Proba`, orig_cte.`Score_7` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 8 AS class, orig_cte.`LogProba_8` AS `LogProba`, orig_cte.`Proba_8` AS `Proba`, orig_cte.`Score_8` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 9 AS class, orig_cte.`LogProba_9` AS `LogProba`, orig_cte.`Proba_9` AS `Proba`, orig_cte.`Score_9` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Score_4` AS `Score_4`, orig_cte.`Score_5` AS `Score_5`, orig_cte.`Score_6` AS `Score_6`, orig_cte.`Score_7` AS `Score_7`, orig_cte.`Score_8` AS `Score_8`, orig_cte.`Score_9` AS `Score_9`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`Proba_4` AS `Proba_4`, orig_cte.`Proba_5` AS `Proba_5`, orig_cte.`Proba_6` AS `Proba_6`, orig_cte.`Proba_7` AS `Proba_7`, orig_cte.`Proba_8` AS `Proba_8`, orig_cte.`Proba_9` AS `Proba_9`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`LogProba_4` AS `LogProba_4`, orig_cte.`LogProba_5` AS `LogProba_5`, orig_cte.`LogProba_6` AS `LogProba_6`, orig_cte.`LogProba_7` AS `LogProba_7`, orig_cte.`LogProba_8` AS `LogProba_8`, orig_cte.`LogProba_9` AS `LogProba_9`, orig_cte.`Decision` AS `Decision`, orig_cte.`DecisionProba` AS `DecisionProba`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_Score` AS `max_Score` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`Score`) AS `max_Score` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
score_soft_max_deltas AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Score_4` AS `Score_4`, score_max.`Score_5` AS `Score_5`, score_max.`Score_6` AS `Score_6`, score_max.`Score_7` AS `Score_7`, score_max.`Score_8` AS `Score_8`, score_max.`Score_9` AS `Score_9`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`Proba_4` AS `Proba_4`, score_max.`Proba_5` AS `Proba_5`, score_max.`Proba_6` AS `Proba_6`, score_max.`Proba_7` AS `Proba_7`, score_max.`Proba_8` AS `Proba_8`, score_max.`Proba_9` AS `Proba_9`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`LogProba_4` AS `LogProba_4`, score_max.`LogProba_5` AS `LogProba_5`, score_max.`LogProba_6` AS `LogProba_6`, score_max.`LogProba_7` AS `LogProba_7`, score_max.`LogProba_8` AS `LogProba_8`, score_max.`LogProba_9` AS `LogProba_9`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Score` AS `max_Score`, exp(greatest(-100.0, score_max.`Score_0` - score_max.`max_Score`)) AS `exp_delta_Score_0`, exp(greatest(-100.0, score_max.`Score_1` - score_max.`max_Score`)) AS `exp_delta_Score_1`, exp(greatest(-100.0, score_max.`Score_2` - score_max.`max_Score`)) AS `exp_delta_Score_2`, exp(greatest(-100.0, score_max.`Score_3` - score_max.`max_Score`)) AS `exp_delta_Score_3`, exp(greatest(-100.0, score_max.`Score_4` - score_max.`max_Score`)) AS `exp_delta_Score_4`, exp(greatest(-100.0, score_max.`Score_5` - score_max.`max_Score`)) AS `exp_delta_Score_5`, exp(greatest(-100.0, score_max.`Score_6` - score_max.`max_Score`)) AS `exp_delta_Score_6`, exp(greatest(-100.0, score_max.`Score_7` - score_max.`max_Score`)) AS `exp_delta_Score_7`, exp(greatest(-100.0, score_max.`Score_8` - score_max.`max_Score`)) AS `exp_delta_Score_8`, exp(greatest(-100.0, score_max.`Score_9` - score_max.`max_Score`)) AS `exp_delta_Score_9` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_deltas.`KEY` AS `KEY`, 0 AS class, score_soft_max_deltas.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 1 AS class, score_soft_max_deltas.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 2 AS class, score_soft_max_deltas.`exp_delta_Score_2` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 3 AS class, score_soft_max_deltas.`exp_delta_Score_3` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 4 AS class, score_soft_max_deltas.`exp_delta_Score_4` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 5 AS class, score_soft_max_deltas.`exp_delta_Score_5` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 6 AS class, score_soft_max_deltas.`exp_delta_Score_6` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 7 AS class, score_soft_max_deltas.`exp_delta_Score_7` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 8 AS class, score_soft_max_deltas.`exp_delta_Score_8` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 9 AS class, score_soft_max_deltas.`exp_delta_Score_9` AS `exp_delta_Score` 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas.`KEY` AS `KEY`, score_soft_max_deltas.`Score_0` AS `Score_0`, score_soft_max_deltas.`Score_1` AS `Score_1`, score_soft_max_deltas.`Score_2` AS `Score_2`, score_soft_max_deltas.`Score_3` AS `Score_3`, score_soft_max_deltas.`Score_4` AS `Score_4`, score_soft_max_deltas.`Score_5` AS `Score_5`, score_soft_max_deltas.`Score_6` AS `Score_6`, score_soft_max_deltas.`Score_7` AS `Score_7`, score_soft_max_deltas.`Score_8` AS `Score_8`, score_soft_max_deltas.`Score_9` AS `Score_9`, score_soft_max_deltas.`Proba_0` AS `Proba_0`, score_soft_max_deltas.`Proba_1` AS `Proba_1`, score_soft_max_deltas.`Proba_2` AS `Proba_2`, score_soft_max_deltas.`Proba_3` AS `Proba_3`, score_soft_max_deltas.`Proba_4` AS `Proba_4`, score_soft_max_deltas.`Proba_5` AS `Proba_5`, score_soft_max_deltas.`Proba_6` AS `Proba_6`, score_soft_max_deltas.`Proba_7` AS `Proba_7`, score_soft_max_deltas.`Proba_8` AS `Proba_8`, score_soft_max_deltas.`Proba_9` AS `Proba_9`, score_soft_max_deltas.`LogProba_0` AS `LogProba_0`, score_soft_max_deltas.`LogProba_1` AS `LogProba_1`, score_soft_max_deltas.`LogProba_2` AS `LogProba_2`, score_soft_max_deltas.`LogProba_3` AS `LogProba_3`, score_soft_max_deltas.`LogProba_4` AS `LogProba_4`, score_soft_max_deltas.`LogProba_5` AS `LogProba_5`, score_soft_max_deltas.`LogProba_6` AS `LogProba_6`, score_soft_max_deltas.`LogProba_7` AS `LogProba_7`, score_soft_max_deltas.`LogProba_8` AS `LogProba_8`, score_soft_max_deltas.`LogProba_9` AS `LogProba_9`, score_soft_max_deltas.`Decision` AS `Decision`, score_soft_max_deltas.`DecisionProba` AS `DecisionProba`, score_soft_max_deltas.`KEY_m` AS `KEY_m`, score_soft_max_deltas.`max_Score` AS `max_Score`, score_soft_max_deltas.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_deltas.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max_deltas.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max_deltas.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max_deltas.`exp_delta_Score_4` AS `exp_delta_Score_4`, score_soft_max_deltas.`exp_delta_Score_5` AS `exp_delta_Score_5`, score_soft_max_deltas.`exp_delta_Score_6` AS `exp_delta_Score_6`, score_soft_max_deltas.`exp_delta_Score_7` AS `exp_delta_Score_7`, score_soft_max_deltas.`exp_delta_Score_8` AS `exp_delta_Score_8`, score_soft_max_deltas.`exp_delta_Score_9` AS `exp_delta_Score_9`, sum_exp_t.`KEY_sum` AS `KEY_sum`, sum_exp_t.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft.`KEY` AS `KEY_sum`, sum(score_class_union_soft.`exp_delta_Score`) AS `sum_ExpDeltaScore` 
FROM score_class_union_soft GROUP BY score_class_union_soft.`KEY`) AS sum_exp_t ON score_soft_max_deltas.`KEY` = sum_exp_t.`KEY_sum`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.class AS class, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Score_4` AS `Score_4`, score_soft_max.`Score_5` AS `Score_5`, score_soft_max.`Score_6` AS `Score_6`, score_soft_max.`Score_7` AS `Score_7`, score_soft_max.`Score_8` AS `Score_8`, score_soft_max.`Score_9` AS `Score_9`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`Proba_4` AS `Proba_4`, score_soft_max.`Proba_5` AS `Proba_5`, score_soft_max.`Proba_6` AS `Proba_6`, score_soft_max.`Proba_7` AS `Proba_7`, score_soft_max.`Proba_8` AS `Proba_8`, score_soft_max.`Proba_9` AS `Proba_9`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`LogProba_4` AS `LogProba_4`, score_soft_max.`LogProba_5` AS `LogProba_5`, score_soft_max.`LogProba_6` AS `LogProba_6`, score_soft_max.`LogProba_7` AS `LogProba_7`, score_soft_max.`LogProba_8` AS `LogProba_8`, score_soft_max.`LogProba_9` AS `LogProba_9`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`DecisionProba` AS `DecisionProba`, score_soft_max.`KEY_m` AS `KEY_m`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`exp_delta_Score_4` AS `exp_delta_Score_4`, score_soft_max.`exp_delta_Score_5` AS `exp_delta_Score_5`, score_soft_max.`exp_delta_Score_6` AS `exp_delta_Score_6`, score_soft_max.`exp_delta_Score_7` AS `exp_delta_Score_7`, score_soft_max.`exp_delta_Score_8` AS `exp_delta_Score_8`, score_soft_max.`exp_delta_Score_9` AS `exp_delta_Score_9`, score_soft_max.`KEY_sum` AS `KEY_sum`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union.`KEY_u` = score_soft_max.`KEY`), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Score_4` AS `Score_4`, score_soft_max.`Score_5` AS `Score_5`, score_soft_max.`Score_6` AS `Score_6`, score_soft_max.`Score_7` AS `Score_7`, score_soft_max.`Score_8` AS `Score_8`, score_soft_max.`Score_9` AS `Score_9`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`Proba_4` AS `Proba_4`, score_soft_max.`Proba_5` AS `Proba_5`, score_soft_max.`Proba_6` AS `Proba_6`, score_soft_max.`Proba_7` AS `Proba_7`, score_soft_max.`Proba_8` AS `Proba_8`, score_soft_max.`Proba_9` AS `Proba_9`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`LogProba_4` AS `LogProba_4`, score_soft_max.`LogProba_5` AS `LogProba_5`, score_soft_max.`LogProba_6` AS `LogProba_6`, score_soft_max.`LogProba_7` AS `LogProba_7`, score_soft_max.`LogProba_8` AS `LogProba_8`, score_soft_max.`LogProba_9` AS `LogProba_9`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`DecisionProba` AS `DecisionProba`, score_soft_max.`KEY_m` AS `KEY_m`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`exp_delta_Score_4` AS `exp_delta_Score_4`, score_soft_max.`exp_delta_Score_5` AS `exp_delta_Score_5`, score_soft_max.`exp_delta_Score_6` AS `exp_delta_Score_6`, score_soft_max.`exp_delta_Score_7` AS `exp_delta_Score_7`, score_soft_max.`exp_delta_Score_8` AS `exp_delta_Score_8`, score_soft_max.`exp_delta_Score_9` AS `exp_delta_Score_9`, score_soft_max.`KEY_sum` AS `KEY_sum`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, `arg_max_t_Score`.`KEY_Score` AS `KEY_Score`, `arg_max_t_Score`.`arg_max_Score` AS `arg_max_Score`, soft_max_comp.`KEY_softmax` AS `KEY_softmax`, soft_max_comp.`SoftProba_0` AS `SoftProba_0`, soft_max_comp.`SoftProba_1` AS `SoftProba_1`, soft_max_comp.`SoftProba_2` AS `SoftProba_2`, soft_max_comp.`SoftProba_3` AS `SoftProba_3`, soft_max_comp.`SoftProba_4` AS `SoftProba_4`, soft_max_comp.`SoftProba_5` AS `SoftProba_5`, soft_max_comp.`SoftProba_6` AS `SoftProba_6`, soft_max_comp.`SoftProba_7` AS `SoftProba_7`, soft_max_comp.`SoftProba_8` AS `SoftProba_8`, soft_max_comp.`SoftProba_9` AS `SoftProba_9` 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Score`, max(union_with_max.class) AS `arg_max_Score` 
FROM union_with_max 
WHERE union_with_max.`max_Score` <= union_with_max.`Score` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Score` ON score_soft_max.`KEY` = `arg_max_t_Score`.`KEY_Score` LEFT OUTER JOIN (SELECT score_soft_max.`KEY` AS `KEY_softmax`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1`, score_soft_max.`exp_delta_Score_2` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_2`, score_soft_max.`exp_delta_Score_3` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_3`, score_soft_max.`exp_delta_Score_4` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_4`, score_soft_max.`exp_delta_Score_5` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_5`, score_soft_max.`exp_delta_Score_6` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_6`, score_soft_max.`exp_delta_Score_7` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_7`, score_soft_max.`exp_delta_Score_8` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_8`, score_soft_max.`exp_delta_Score_9` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_9` 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp.`KEY_softmax` = `arg_max_t_Score`.`KEY_Score`)
 SELECT arg_max_cte.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, NULL AS `Score_2`, NULL AS `Score_3`, NULL AS `Score_4`, NULL AS `Score_5`, NULL AS `Score_6`, NULL AS `Score_7`, NULL AS `Score_8`, NULL AS `Score_9`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, arg_max_cte.`SoftProba_2` AS `Proba_2`, arg_max_cte.`SoftProba_3` AS `Proba_3`, arg_max_cte.`SoftProba_4` AS `Proba_4`, arg_max_cte.`SoftProba_5` AS `Proba_5`, arg_max_cte.`SoftProba_6` AS `Proba_6`, arg_max_cte.`SoftProba_7` AS `Proba_7`, arg_max_cte.`SoftProba_8` AS `Proba_8`, arg_max_cte.`SoftProba_9` AS `Proba_9`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`SoftProba_2` IS NULL OR arg_max_cte.`SoftProba_2` > 0.0) THEN ln(arg_max_cte.`SoftProba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`SoftProba_3` IS NULL OR arg_max_cte.`SoftProba_3` > 0.0) THEN ln(arg_max_cte.`SoftProba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, CASE WHEN (arg_max_cte.`SoftProba_4` IS NULL OR arg_max_cte.`SoftProba_4` > 0.0) THEN ln(arg_max_cte.`SoftProba_4`) ELSE -1.79769313486231e+308 END AS `LogProba_4`, CASE WHEN (arg_max_cte.`SoftProba_5` IS NULL OR arg_max_cte.`SoftProba_5` > 0.0) THEN ln(arg_max_cte.`SoftProba_5`) ELSE -1.79769313486231e+308 END AS `LogProba_5`, CASE WHEN (arg_max_cte.`SoftProba_6` IS NULL OR arg_max_cte.`SoftProba_6` > 0.0) THEN ln(arg_max_cte.`SoftProba_6`) ELSE -1.79769313486231e+308 END AS `LogProba_6`, CASE WHEN (arg_max_cte.`SoftProba_7` IS NULL OR arg_max_cte.`SoftProba_7` > 0.0) THEN ln(arg_max_cte.`SoftProba_7`) ELSE -1.79769313486231e+308 END AS `LogProba_7`, CASE WHEN (arg_max_cte.`SoftProba_8` IS NULL OR arg_max_cte.`SoftProba_8` > 0.0) THEN ln(arg_max_cte.`SoftProba_8`) ELSE -1.79769313486231e+308 END AS `LogProba_8`, CASE WHEN (arg_max_cte.`SoftProba_9` IS NULL OR arg_max_cte.`SoftProba_9` > 0.0) THEN ln(arg_max_cte.`SoftProba_9`) ELSE -1.79769313486231e+308 END AS `LogProba_9`, arg_max_cte.`arg_max_Score` AS `Decision`, greatest(arg_max_cte.`SoftProba_0`, arg_max_cte.`SoftProba_1`, arg_max_cte.`SoftProba_2`, arg_max_cte.`SoftProba_3`, arg_max_cte.`SoftProba_4`, arg_max_cte.`SoftProba_5`, arg_max_cte.`SoftProba_6`, arg_max_cte.`SoftProba_7`, arg_max_cte.`SoftProba_8`, arg_max_cte.`SoftProba_9`) AS `DecisionProba` 
FROM arg_max_cte