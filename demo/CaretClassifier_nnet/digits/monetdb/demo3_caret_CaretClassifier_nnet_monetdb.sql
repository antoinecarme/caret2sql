-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretClassifier_nnet
-- Dataset : digits
-- Database : monetdb


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS DOUBLE) AS "Feature_0", CAST("ADS"."Feature_1" AS DOUBLE) AS "Feature_1", CAST("ADS"."Feature_2" AS DOUBLE) AS "Feature_2", CAST("ADS"."Feature_3" AS DOUBLE) AS "Feature_3", CAST("ADS"."Feature_4" AS DOUBLE) AS "Feature_4", CAST("ADS"."Feature_5" AS DOUBLE) AS "Feature_5", CAST("ADS"."Feature_6" AS DOUBLE) AS "Feature_6", CAST("ADS"."Feature_7" AS DOUBLE) AS "Feature_7", CAST("ADS"."Feature_8" AS DOUBLE) AS "Feature_8", CAST("ADS"."Feature_9" AS DOUBLE) AS "Feature_9", CAST("ADS"."Feature_10" AS DOUBLE) AS "Feature_10", CAST("ADS"."Feature_11" AS DOUBLE) AS "Feature_11", CAST("ADS"."Feature_12" AS DOUBLE) AS "Feature_12", CAST("ADS"."Feature_13" AS DOUBLE) AS "Feature_13", CAST("ADS"."Feature_14" AS DOUBLE) AS "Feature_14", CAST("ADS"."Feature_15" AS DOUBLE) AS "Feature_15", CAST("ADS"."Feature_16" AS DOUBLE) AS "Feature_16", CAST("ADS"."Feature_17" AS DOUBLE) AS "Feature_17", CAST("ADS"."Feature_18" AS DOUBLE) AS "Feature_18", CAST("ADS"."Feature_19" AS DOUBLE) AS "Feature_19", CAST("ADS"."Feature_20" AS DOUBLE) AS "Feature_20", CAST("ADS"."Feature_21" AS DOUBLE) AS "Feature_21", CAST("ADS"."Feature_22" AS DOUBLE) AS "Feature_22", CAST("ADS"."Feature_23" AS DOUBLE) AS "Feature_23", CAST("ADS"."Feature_24" AS DOUBLE) AS "Feature_24", CAST("ADS"."Feature_25" AS DOUBLE) AS "Feature_25", CAST("ADS"."Feature_26" AS DOUBLE) AS "Feature_26", CAST("ADS"."Feature_27" AS DOUBLE) AS "Feature_27", CAST("ADS"."Feature_28" AS DOUBLE) AS "Feature_28", CAST("ADS"."Feature_29" AS DOUBLE) AS "Feature_29", CAST("ADS"."Feature_30" AS DOUBLE) AS "Feature_30", CAST("ADS"."Feature_31" AS DOUBLE) AS "Feature_31", CAST("ADS"."Feature_32" AS DOUBLE) AS "Feature_32", CAST("ADS"."Feature_33" AS DOUBLE) AS "Feature_33", CAST("ADS"."Feature_34" AS DOUBLE) AS "Feature_34", CAST("ADS"."Feature_35" AS DOUBLE) AS "Feature_35", CAST("ADS"."Feature_36" AS DOUBLE) AS "Feature_36", CAST("ADS"."Feature_37" AS DOUBLE) AS "Feature_37", CAST("ADS"."Feature_38" AS DOUBLE) AS "Feature_38", CAST("ADS"."Feature_39" AS DOUBLE) AS "Feature_39", CAST("ADS"."Feature_40" AS DOUBLE) AS "Feature_40", CAST("ADS"."Feature_41" AS DOUBLE) AS "Feature_41", CAST("ADS"."Feature_42" AS DOUBLE) AS "Feature_42", CAST("ADS"."Feature_43" AS DOUBLE) AS "Feature_43", CAST("ADS"."Feature_44" AS DOUBLE) AS "Feature_44", CAST("ADS"."Feature_45" AS DOUBLE) AS "Feature_45", CAST("ADS"."Feature_46" AS DOUBLE) AS "Feature_46", CAST("ADS"."Feature_47" AS DOUBLE) AS "Feature_47", CAST("ADS"."Feature_48" AS DOUBLE) AS "Feature_48", CAST("ADS"."Feature_49" AS DOUBLE) AS "Feature_49", CAST("ADS"."Feature_50" AS DOUBLE) AS "Feature_50", CAST("ADS"."Feature_51" AS DOUBLE) AS "Feature_51", CAST("ADS"."Feature_52" AS DOUBLE) AS "Feature_52", CAST("ADS"."Feature_53" AS DOUBLE) AS "Feature_53", CAST("ADS"."Feature_54" AS DOUBLE) AS "Feature_54", CAST("ADS"."Feature_55" AS DOUBLE) AS "Feature_55", CAST("ADS"."Feature_56" AS DOUBLE) AS "Feature_56", CAST("ADS"."Feature_57" AS DOUBLE) AS "Feature_57", CAST("ADS"."Feature_58" AS DOUBLE) AS "Feature_58", CAST("ADS"."Feature_59" AS DOUBLE) AS "Feature_59", CAST("ADS"."Feature_60" AS DOUBLE) AS "Feature_60", CAST("ADS"."Feature_61" AS DOUBLE) AS "Feature_61", CAST("ADS"."Feature_62" AS DOUBLE) AS "Feature_62", CAST("ADS"."Feature_63" AS DOUBLE) AS "Feature_63" 
FROM digits AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.01951371 * "IL"."Feature_0" + 0.3878408 * "IL"."Feature_1" + 1.165656 * "IL"."Feature_2" + 1.378105 * "IL"."Feature_3" + 0.6532521 * "IL"."Feature_4" + 0.3688813 * "IL"."Feature_5" + -0.3006226 * "IL"."Feature_6" + -0.02993453 * "IL"."Feature_7" + 0.602085 * "IL"."Feature_8" + 0.06582364 * "IL"."Feature_9" + 1.849407 * "IL"."Feature_10" + 0.67903 * "IL"."Feature_11" + 0.5022003 * "IL"."Feature_12" + 0.2909653 * "IL"."Feature_13" + 0.5177906 * "IL"."Feature_14" + -0.08647324 * "IL"."Feature_15" + 0.02014876 * "IL"."Feature_16" + -0.05096516 * "IL"."Feature_17" + 1.713659 * "IL"."Feature_18" + -0.3460905 * "IL"."Feature_19" + -0.1792853 * "IL"."Feature_20" + 0.5425021 * "IL"."Feature_21" + 0.6744379 * "IL"."Feature_22" + -0.4414879 * "IL"."Feature_23" + -0.6628202 * "IL"."Feature_24" + 0.3035608 * "IL"."Feature_25" + 0.9682296 * "IL"."Feature_26" + 1.186556 * "IL"."Feature_27" + 0.5041613 * "IL"."Feature_28" + -0.1982312 * "IL"."Feature_29" + 0.6176716 * "IL"."Feature_30" + 0.1702364 * "IL"."Feature_31" + -0.190732 * "IL"."Feature_32" + 0.8885117 * "IL"."Feature_33" + 0.7244694 * "IL"."Feature_34" + 0.7939946 * "IL"."Feature_35" + 0.5176391 * "IL"."Feature_36" + 0.4897893 * "IL"."Feature_37" + 0.3653974 * "IL"."Feature_38" + 0.1665061 * "IL"."Feature_39" + -0.2309697 * "IL"."Feature_40" + -0.3534805 * "IL"."Feature_41" + 0.9578253 * "IL"."Feature_42" + 0.09836661 * "IL"."Feature_43" + -0.3463252 * "IL"."Feature_44" + 0.414554 * "IL"."Feature_45" + 0.7676223 * "IL"."Feature_46" + 0.001994966 * "IL"."Feature_47" + 0.491814 * "IL"."Feature_48" + 0.03894199 * "IL"."Feature_49" + 1.047792 * "IL"."Feature_50" + 0.07376093 * "IL"."Feature_51" + 1.301599 * "IL"."Feature_52" + 0.5818782 * "IL"."Feature_53" + -0.524537 * "IL"."Feature_54" + 0.3904051 * "IL"."Feature_55" + 0.502823 * "IL"."Feature_56" + -0.4770825 * "IL"."Feature_57" + 0.2276299 * "IL"."Feature_58" + 1.783436 * "IL"."Feature_59" + 0.5876428 * "IL"."Feature_60" + 0.504754 * "IL"."Feature_61" + 0.4909576 * "IL"."Feature_62" + 0.02033095 * "IL"."Feature_63" + -0.1156322 AS "NEUR_1_1", 0.3908245 * "IL"."Feature_0" + -0.6215842 * "IL"."Feature_1" + -1.156658 * "IL"."Feature_2" + 2.081127 * "IL"."Feature_3" + 3.026741 * "IL"."Feature_4" + -0.6657789 * "IL"."Feature_5" + 1.601405 * "IL"."Feature_6" + 0.5823051 * "IL"."Feature_7" + -0.5702542 * "IL"."Feature_8" + 2.709346 * "IL"."Feature_9" + 4.031162 * "IL"."Feature_10" + -0.0875017 * "IL"."Feature_11" + 0.6926299 * "IL"."Feature_12" + 0.438156 * "IL"."Feature_13" + 1.983885 * "IL"."Feature_14" + 0.9054095 * "IL"."Feature_15" + 0.454522 * "IL"."Feature_16" + 1.710136 * "IL"."Feature_17" + -3.842008 * "IL"."Feature_18" + -5.904386 * "IL"."Feature_19" + 1.589254 * "IL"."Feature_20" + -2.865793 * "IL"."Feature_21" + 0.6988437 * "IL"."Feature_22" + 0.3138145 * "IL"."Feature_23" + -0.2954424 * "IL"."Feature_24" + -1.331988 * "IL"."Feature_25" + -3.547193 * "IL"."Feature_26" + -2.726365 * "IL"."Feature_27" + -3.256204 * "IL"."Feature_28" + -6.971422 * "IL"."Feature_29" + -2.935546 * "IL"."Feature_30" + 0.6007142 * "IL"."Feature_31" + -0.1356411 * "IL"."Feature_32" + 1.983332 * "IL"."Feature_33" + -0.6668183 * "IL"."Feature_34" + -1.177169 * "IL"."Feature_35" + -0.05845962 * "IL"."Feature_36" + -1.181841 * "IL"."Feature_37" + -3.23728 * "IL"."Feature_38" + 0.2399219 * "IL"."Feature_39" + 0.4039822 * "IL"."Feature_40" + 0.8093329 * "IL"."Feature_41" + 2.177133 * "IL"."Feature_42" + -0.09846356 * "IL"."Feature_43" + -1.92495 * "IL"."Feature_44" + 1.50366 * "IL"."Feature_45" + 2.047556 * "IL"."Feature_46" + -0.1260967 * "IL"."Feature_47" + 0.342222 * "IL"."Feature_48" + 0.3858662 * "IL"."Feature_49" + 0.8548821 * "IL"."Feature_50" + 1.125114 * "IL"."Feature_51" + 3.462938 * "IL"."Feature_52" + 1.422299 * "IL"."Feature_53" + 4.039056 * "IL"."Feature_54" + -1.307983 * "IL"."Feature_55" + 0.3037061 * "IL"."Feature_56" + -0.2119493 * "IL"."Feature_57" + -0.2453908 * "IL"."Feature_58" + 0.5023666 * "IL"."Feature_59" + 1.362544 * "IL"."Feature_60" + 1.300332 * "IL"."Feature_61" + -1.573216 * "IL"."Feature_62" + -3.911307 * "IL"."Feature_63" + -0.07333376 AS "NEUR_1_2", 0.4401056 * "IL"."Feature_0" + 0.3559492 * "IL"."Feature_1" + -0.2762527 * "IL"."Feature_2" + 1.066764 * "IL"."Feature_3" + 3.070925 * "IL"."Feature_4" + 2.909615 * "IL"."Feature_5" + 2.113158 * "IL"."Feature_6" + 0.523521 * "IL"."Feature_7" + 0.462099 * "IL"."Feature_8" + 0.1796254 * "IL"."Feature_9" + 1.944691 * "IL"."Feature_10" + -0.2986886 * "IL"."Feature_11" + 4.775882 * "IL"."Feature_12" + -1.493266 * "IL"."Feature_13" + 1.124529 * "IL"."Feature_14" + 0.7582069 * "IL"."Feature_15" + 0.3446862 * "IL"."Feature_16" + -2.739467 * "IL"."Feature_17" + -4.958903 * "IL"."Feature_18" + -5.413807 * "IL"."Feature_19" + 4.80875 * "IL"."Feature_20" + 0.9766383 * "IL"."Feature_21" + 1.4224 * "IL"."Feature_22" + 0.04101652 * "IL"."Feature_23" + 0.1255906 * "IL"."Feature_24" + -2.721676 * "IL"."Feature_25" + -1.802037 * "IL"."Feature_26" + -2.130279 * "IL"."Feature_27" + 1.921935 * "IL"."Feature_28" + -0.149413 * "IL"."Feature_29" + -2.719812 * "IL"."Feature_30" + -0.08981295 * "IL"."Feature_31" + -0.2693399 * "IL"."Feature_32" + -0.09290105 * "IL"."Feature_33" + -2.775778 * "IL"."Feature_34" + -1.759973 * "IL"."Feature_35" + 2.560332 * "IL"."Feature_36" + 3.217833 * "IL"."Feature_37" + 0.9291403 * "IL"."Feature_38" + 0.6607256 * "IL"."Feature_39" + -0.5722389 * "IL"."Feature_40" + 1.815474 * "IL"."Feature_41" + -0.5646791 * "IL"."Feature_42" + -4.006297 * "IL"."Feature_43" + 0.2522369 * "IL"."Feature_44" + -1.755895 * "IL"."Feature_45" + 0.838313 * "IL"."Feature_46" + 0.3437339 * "IL"."Feature_47" + 0.6331468 * "IL"."Feature_48" + 1.516952 * "IL"."Feature_49" + -2.892205 * "IL"."Feature_50" + -0.7363812 * "IL"."Feature_51" + -3.004101 * "IL"."Feature_52" + -3.158148 * "IL"."Feature_53" + 0.8145624 * "IL"."Feature_54" + -0.3500428 * "IL"."Feature_55" + 0.02138209 * "IL"."Feature_56" + -1.058066 * "IL"."Feature_57" + -0.0161313 * "IL"."Feature_58" + 0.718603 * "IL"."Feature_59" + -2.345385 * "IL"."Feature_60" + 2.288336 * "IL"."Feature_61" + -1.001368 * "IL"."Feature_62" + -0.7418976 * "IL"."Feature_63" + -0.3239663 AS "NEUR_1_3", 0.5304312 * "IL"."Feature_0" + -0.518215 * "IL"."Feature_1" + -1.278507 * "IL"."Feature_2" + 1.067404 * "IL"."Feature_3" + -1.830905 * "IL"."Feature_4" + 1.688737 * "IL"."Feature_5" + 0.9622947 * "IL"."Feature_6" + 0.1616896 * "IL"."Feature_7" + 0.1947068 * "IL"."Feature_8" + -4.020922 * "IL"."Feature_9" + -3.465817 * "IL"."Feature_10" + -4.450835 * "IL"."Feature_11" + -4.422699 * "IL"."Feature_12" + -0.7514632 * "IL"."Feature_13" + -3.354652 * "IL"."Feature_14" + 0.03129887 * "IL"."Feature_15" + 0.5274341 * "IL"."Feature_16" + -0.3392152 * "IL"."Feature_17" + 2.551226 * "IL"."Feature_18" + 3.311389 * "IL"."Feature_19" + 3.876162 * "IL"."Feature_20" + -8.046196 * "IL"."Feature_21" + -1.38266 * "IL"."Feature_22" + 0.4692186 * "IL"."Feature_23" + 0.3066553 * "IL"."Feature_24" + 5.834966 * "IL"."Feature_25" + -0.1543496 * "IL"."Feature_26" + -0.3954949 * "IL"."Feature_27" + -0.3819257 * "IL"."Feature_28" + 0.3413478 * "IL"."Feature_29" + -3.319455 * "IL"."Feature_30" + 0.6007788 * "IL"."Feature_31" + -0.09702151 * "IL"."Feature_32" + -0.3201096 * "IL"."Feature_33" + 4.462124 * "IL"."Feature_34" + -2.164085 * "IL"."Feature_35" + 3.178481 * "IL"."Feature_36" + 5.870376 * "IL"."Feature_37" + -0.09077653 * "IL"."Feature_38" + 0.6657887 * "IL"."Feature_39" + 0.5145064 * "IL"."Feature_40" + -1.752321 * "IL"."Feature_41" + 0.4150224 * "IL"."Feature_42" + 2.336977 * "IL"."Feature_43" + 3.353581 * "IL"."Feature_44" + -0.1407384 * "IL"."Feature_45" + 0.09708067 * "IL"."Feature_46" + 0.406152 * "IL"."Feature_47" + -0.8196124 * "IL"."Feature_48" + -0.46776 * "IL"."Feature_49" + -1.456265 * "IL"."Feature_50" + 1.362194 * "IL"."Feature_51" + 0.9844219 * "IL"."Feature_52" + -3.806314 * "IL"."Feature_53" + -0.4314972 * "IL"."Feature_54" + -0.1067857 * "IL"."Feature_55" + 0.4368425 * "IL"."Feature_56" + -0.2681275 * "IL"."Feature_57" + -3.475814 * "IL"."Feature_58" + 1.758454 * "IL"."Feature_59" + -0.7196354 * "IL"."Feature_60" + 0.8467895 * "IL"."Feature_61" + -0.7561205 * "IL"."Feature_62" + -0.0553241 * "IL"."Feature_63" + -0.1065841 AS "NEUR_1_4", -0.5718957 * "IL"."Feature_0" + 0.1422793 * "IL"."Feature_1" + -0.8631228 * "IL"."Feature_2" + -0.2133344 * "IL"."Feature_3" + -0.2376637 * "IL"."Feature_4" + -1.362894 * "IL"."Feature_5" + 0.5146303 * "IL"."Feature_6" + -0.03306422 * "IL"."Feature_7" + 0.6710985 * "IL"."Feature_8" + -0.2775184 * "IL"."Feature_9" + -0.2346768 * "IL"."Feature_10" + -0.329372 * "IL"."Feature_11" + 0.1731947 * "IL"."Feature_12" + -0.1748782 * "IL"."Feature_13" + -0.4217245 * "IL"."Feature_14" + -0.1026734 * "IL"."Feature_15" + -0.1141566 * "IL"."Feature_16" + -0.1293427 * "IL"."Feature_17" + -0.8818303 * "IL"."Feature_18" + -0.3352731 * "IL"."Feature_19" + -0.1695619 * "IL"."Feature_20" + 0.8731881 * "IL"."Feature_21" + -0.3706261 * "IL"."Feature_22" + 0.4840491 * "IL"."Feature_23" + -0.1675478 * "IL"."Feature_24" + 0.03854025 * "IL"."Feature_25" + -0.6548067 * "IL"."Feature_26" + -1.183391 * "IL"."Feature_27" + 0.1820111 * "IL"."Feature_28" + 0.6062812 * "IL"."Feature_29" + 0.3273823 * "IL"."Feature_30" + -0.445678 * "IL"."Feature_31" + 0.5235512 * "IL"."Feature_32" + -0.8647174 * "IL"."Feature_33" + -1.190554 * "IL"."Feature_34" + -0.478507 * "IL"."Feature_35" + -0.9811284 * "IL"."Feature_36" + -0.5227222 * "IL"."Feature_37" + 0.3313591 * "IL"."Feature_38" + 0.4288208 * "IL"."Feature_39" + -0.3910724 * "IL"."Feature_40" + 0.486657 * "IL"."Feature_41" + -0.9881801 * "IL"."Feature_42" + -0.29047 * "IL"."Feature_43" + -0.6065105 * "IL"."Feature_44" + 0.3447875 * "IL"."Feature_45" + 0.6763632 * "IL"."Feature_46" + -0.3235416 * "IL"."Feature_47" + -0.3723855 * "IL"."Feature_48" + 0.6072024 * "IL"."Feature_49" + -0.4329032 * "IL"."Feature_50" + -1.17617 * "IL"."Feature_51" + -1.509334 * "IL"."Feature_52" + 0.8550094 * "IL"."Feature_53" + 0.6577406 * "IL"."Feature_54" + 0.3285973 * "IL"."Feature_55" + -0.5689845 * "IL"."Feature_56" + -0.1372923 * "IL"."Feature_57" + -0.1236626 * "IL"."Feature_58" + -1.116695 * "IL"."Feature_59" + -0.7922531 * "IL"."Feature_60" + 0.5312133 * "IL"."Feature_61" + 0.8104385 * "IL"."Feature_62" + -0.4232404 * "IL"."Feature_63" + 0.2448333 AS "NEUR_1_5", -0.6328788 * "IL"."Feature_0" + -0.4069628 * "IL"."Feature_1" + 0.2224198 * "IL"."Feature_2" + -0.4542985 * "IL"."Feature_3" + 0.1553756 * "IL"."Feature_4" + -0.4039514 * "IL"."Feature_5" + 0.5213111 * "IL"."Feature_6" + -0.6279761 * "IL"."Feature_7" + -0.2822344 * "IL"."Feature_8" + 0.1993366 * "IL"."Feature_9" + -0.6696046 * "IL"."Feature_10" + 0.2633472 * "IL"."Feature_11" + -0.6613185 * "IL"."Feature_12" + -0.6387056 * "IL"."Feature_13" + 0.666793 * "IL"."Feature_14" + 0.3418211 * "IL"."Feature_15" + 0.1662333 * "IL"."Feature_16" + 0.1452369 * "IL"."Feature_17" + 0.432473 * "IL"."Feature_18" + -0.5003261 * "IL"."Feature_19" + -0.2871622 * "IL"."Feature_20" + -0.6903583 * "IL"."Feature_21" + 0.3359683 * "IL"."Feature_22" + 0.4171136 * "IL"."Feature_23" + 0.3377542 * "IL"."Feature_24" + 0.2416533 * "IL"."Feature_25" + 0.484239 * "IL"."Feature_26" + -0.2784729 * "IL"."Feature_27" + 0.3684713 * "IL"."Feature_28" + 0.1743793 * "IL"."Feature_29" + -0.4308166 * "IL"."Feature_30" + 0.07489386 * "IL"."Feature_31" + 0.415866 * "IL"."Feature_32" + 0.1276836 * "IL"."Feature_33" + -0.2465451 * "IL"."Feature_34" + -0.1100633 * "IL"."Feature_35" + 0.2967366 * "IL"."Feature_36" + -0.5180666 * "IL"."Feature_37" + -0.4002729 * "IL"."Feature_38" + 0.06670109 * "IL"."Feature_39" + 0.5635464 * "IL"."Feature_40" + -0.04807987 * "IL"."Feature_41" + -0.546931 * "IL"."Feature_42" + -0.139105 * "IL"."Feature_43" + -0.4170451 * "IL"."Feature_44" + -0.4293432 * "IL"."Feature_45" + -0.1417153 * "IL"."Feature_46" + -0.2389242 * "IL"."Feature_47" + -0.5959968 * "IL"."Feature_48" + -0.03605892 * "IL"."Feature_49" + 0.1016794 * "IL"."Feature_50" + -0.2668422 * "IL"."Feature_51" + -0.2998692 * "IL"."Feature_52" + -0.6672774 * "IL"."Feature_53" + 0.1835254 * "IL"."Feature_54" + -0.1856446 * "IL"."Feature_55" + -0.4200997 * "IL"."Feature_56" + 0.2917147 * "IL"."Feature_57" + -0.4789848 * "IL"."Feature_58" + -0.5758122 * "IL"."Feature_59" + 0.4812969 * "IL"."Feature_60" + 0.002290179 * "IL"."Feature_61" + -0.6505699 * "IL"."Feature_62" + 0.6698001 * "IL"."Feature_63" + 0.4227959 AS "NEUR_1_6", -0.5428317 * "IL"."Feature_0" + -0.8661043 * "IL"."Feature_1" + -1.965811 * "IL"."Feature_2" + 1.282922 * "IL"."Feature_3" + 0.07657 * "IL"."Feature_4" + -0.6602264 * "IL"."Feature_5" + -2.66421 * "IL"."Feature_6" + -1.031123 * "IL"."Feature_7" + -0.03025706 * "IL"."Feature_8" + -0.7864395 * "IL"."Feature_9" + -0.448951 * "IL"."Feature_10" + -0.8459345 * "IL"."Feature_11" + -3.120581 * "IL"."Feature_12" + 2.70022 * "IL"."Feature_13" + 1.5422 * "IL"."Feature_14" + -1.048394 * "IL"."Feature_15" + 0.4631814 * "IL"."Feature_16" + -1.066555 * "IL"."Feature_17" + 1.155392 * "IL"."Feature_18" + 2.094577 * "IL"."Feature_19" + 0.913842 * "IL"."Feature_20" + 2.649767 * "IL"."Feature_21" + 0.8917656 * "IL"."Feature_22" + 0.5967826 * "IL"."Feature_23" + 0.1146515 * "IL"."Feature_24" + 0.09973358 * "IL"."Feature_25" + -1.90749 * "IL"."Feature_26" + 2.219072 * "IL"."Feature_27" + 0.8604523 * "IL"."Feature_28" + -1.491955 * "IL"."Feature_29" + -4.053806 * "IL"."Feature_30" + 0.4609851 * "IL"."Feature_31" + 0.6494987 * "IL"."Feature_32" + -0.88559 * "IL"."Feature_33" + -2.289265 * "IL"."Feature_34" + -0.3485491 * "IL"."Feature_35" + -0.9241166 * "IL"."Feature_36" + -2.080178 * "IL"."Feature_37" + -2.409565 * "IL"."Feature_38" + -0.4967684 * "IL"."Feature_39" + -0.1204333 * "IL"."Feature_40" + -2.404793 * "IL"."Feature_41" + 1.864929 * "IL"."Feature_42" + -1.71841 * "IL"."Feature_43" + -2.678151 * "IL"."Feature_44" + -1.507339 * "IL"."Feature_45" + 0.2143736 * "IL"."Feature_46" + -0.4152252 * "IL"."Feature_47" + -0.1443267 * "IL"."Feature_48" + -2.981402 * "IL"."Feature_49" + 0.6236349 * "IL"."Feature_50" + -1.799903 * "IL"."Feature_51" + 0.98222 * "IL"."Feature_52" + 4.059174 * "IL"."Feature_53" + 0.2730959 * "IL"."Feature_54" + -0.5104116 * "IL"."Feature_55" + 0.1099602 * "IL"."Feature_56" + -0.7977204 * "IL"."Feature_57" + -2.793181 * "IL"."Feature_58" + 3.273735 * "IL"."Feature_59" + 4.656605 * "IL"."Feature_60" + 3.900651 * "IL"."Feature_61" + 0.9173429 * "IL"."Feature_62" + 0.4726818 * "IL"."Feature_63" + -0.07272722 AS "NEUR_1_7", 0.6547813 * "IL"."Feature_0" + 1.152914 * "IL"."Feature_1" + -0.7924021 * "IL"."Feature_2" + 1.518163 * "IL"."Feature_3" + 2.710074 * "IL"."Feature_4" + 0.049249 * "IL"."Feature_5" + 1.292839 * "IL"."Feature_6" + -0.5554497 * "IL"."Feature_7" + -0.3787329 * "IL"."Feature_8" + 1.38754 * "IL"."Feature_9" + 1.138589 * "IL"."Feature_10" + 0.9818435 * "IL"."Feature_11" + -0.8454945 * "IL"."Feature_12" + 0.6877696 * "IL"."Feature_13" + -0.01193685 * "IL"."Feature_14" + -0.4513916 * "IL"."Feature_15" + 0.4451321 * "IL"."Feature_16" + 1.494793 * "IL"."Feature_17" + -0.1311239 * "IL"."Feature_18" + 0.1816266 * "IL"."Feature_19" + -0.3694399 * "IL"."Feature_20" + 1.828661 * "IL"."Feature_21" + -1.131085 * "IL"."Feature_22" + -0.4435502 * "IL"."Feature_23" + -0.08790231 * "IL"."Feature_24" + 3.557251 * "IL"."Feature_25" + 1.992868 * "IL"."Feature_26" + 1.00931 * "IL"."Feature_27" + 1.199777 * "IL"."Feature_28" + 1.832841 * "IL"."Feature_29" + -0.2021904 * "IL"."Feature_30" + -0.6601906 * "IL"."Feature_31" + 0.489796 * "IL"."Feature_32" + 1.441453 * "IL"."Feature_33" + 2.35713 * "IL"."Feature_34" + 1.047899 * "IL"."Feature_35" + 0.1550658 * "IL"."Feature_36" + 0.3892104 * "IL"."Feature_37" + 1.569972 * "IL"."Feature_38" + 0.08972921 * "IL"."Feature_39" + -0.2211028 * "IL"."Feature_40" + 0.3173201 * "IL"."Feature_41" + 1.697613 * "IL"."Feature_42" + -2.006633 * "IL"."Feature_43" + 2.011225 * "IL"."Feature_44" + 4.856783 * "IL"."Feature_45" + -0.6118796 * "IL"."Feature_46" + 0.4225926 * "IL"."Feature_47" + 0.06517873 * "IL"."Feature_48" + -2.363064 * "IL"."Feature_49" + -0.9620702 * "IL"."Feature_50" + -3.333851 * "IL"."Feature_51" + -3.928234 * "IL"."Feature_52" + -1.909243 * "IL"."Feature_53" + -1.835219 * "IL"."Feature_54" + -1.166144 * "IL"."Feature_55" + -0.3710178 * "IL"."Feature_56" + -0.03029238 * "IL"."Feature_57" + 0.5456503 * "IL"."Feature_58" + -0.4673795 * "IL"."Feature_59" + -1.816193 * "IL"."Feature_60" + -2.844919 * "IL"."Feature_61" + -2.477384 * "IL"."Feature_62" + -1.598781 * "IL"."Feature_63" + 0.7110645 AS "NEUR_1_8", -0.3215003 * "IL"."Feature_0" + -0.4652266 * "IL"."Feature_1" + 1.063006 * "IL"."Feature_2" + 2.032027 * "IL"."Feature_3" + -0.3238607 * "IL"."Feature_4" + 4.002213 * "IL"."Feature_5" + 5.342207 * "IL"."Feature_6" + -0.1106673 * "IL"."Feature_7" + 0.6288176 * "IL"."Feature_8" + 0.9751006 * "IL"."Feature_9" + 1.540799 * "IL"."Feature_10" + 2.058111 * "IL"."Feature_11" + 2.131267 * "IL"."Feature_12" + 1.229787 * "IL"."Feature_13" + -0.4554443 * "IL"."Feature_14" + 0.3273874 * "IL"."Feature_15" + -0.5098178 * "IL"."Feature_16" + -0.2387073 * "IL"."Feature_17" + -1.510432 * "IL"."Feature_18" + -2.438425 * "IL"."Feature_19" + 0.5991139 * "IL"."Feature_20" + 1.357583 * "IL"."Feature_21" + -2.382524 * "IL"."Feature_22" + -0.5574797 * "IL"."Feature_23" + -0.07778145 * "IL"."Feature_24" + -2.50549 * "IL"."Feature_25" + -1.214832 * "IL"."Feature_26" + 1.222148 * "IL"."Feature_27" + 3.30222 * "IL"."Feature_28" + 0.1481909 * "IL"."Feature_29" + -0.8095877 * "IL"."Feature_30" + -0.04807714 * "IL"."Feature_31" + 0.3278356 * "IL"."Feature_32" + -2.325482 * "IL"."Feature_33" + -2.478545 * "IL"."Feature_34" + 1.27074 * "IL"."Feature_35" + 1.353424 * "IL"."Feature_36" + -2.493171 * "IL"."Feature_37" + -2.940703 * "IL"."Feature_38" + 0.5796149 * "IL"."Feature_39" + -0.5765398 * "IL"."Feature_40" + -1.314119 * "IL"."Feature_41" + -2.688854 * "IL"."Feature_42" + -2.496698 * "IL"."Feature_43" + -1.099147 * "IL"."Feature_44" + -0.3383079 * "IL"."Feature_45" + -0.763143 * "IL"."Feature_46" + 0.2019388 * "IL"."Feature_47" + -0.653709 * "IL"."Feature_48" + 1.102168 * "IL"."Feature_49" + -2.295683 * "IL"."Feature_50" + -0.07676055 * "IL"."Feature_51" + -0.1873319 * "IL"."Feature_52" + -0.4799056 * "IL"."Feature_53" + 0.5244873 * "IL"."Feature_54" + -0.1847612 * "IL"."Feature_55" + 0.5745639 * "IL"."Feature_56" + -0.1123449 * "IL"."Feature_57" + 1.359194 * "IL"."Feature_58" + 3.125946 * "IL"."Feature_59" + -0.7490722 * "IL"."Feature_60" + 0.3686997 * "IL"."Feature_61" + 1.149994 * "IL"."Feature_62" + 2.032656 * "IL"."Feature_63" + -0.5289571 AS "NEUR_1_9", -0.3072894 * "IL"."Feature_0" + 0.1991391 * "IL"."Feature_1" + 0.7922015 * "IL"."Feature_2" + -1.524081 * "IL"."Feature_3" + -1.161776 * "IL"."Feature_4" + 1.9721 * "IL"."Feature_5" + -2.911395 * "IL"."Feature_6" + 0.4827836 * "IL"."Feature_7" + -0.5628719 * "IL"."Feature_8" + 0.4849691 * "IL"."Feature_9" + -0.2669845 * "IL"."Feature_10" + -1.341906 * "IL"."Feature_11" + 2.131612 * "IL"."Feature_12" + 2.011655 * "IL"."Feature_13" + 1.556976 * "IL"."Feature_14" + 0.04481881 * "IL"."Feature_15" + 0.1575876 * "IL"."Feature_16" + -0.6126813 * "IL"."Feature_17" + -1.266842 * "IL"."Feature_18" + 3.142237 * "IL"."Feature_19" + -0.2697688 * "IL"."Feature_20" + -2.116662 * "IL"."Feature_21" + -0.3907152 * "IL"."Feature_22" + -0.2527356 * "IL"."Feature_23" + 0.1473674 * "IL"."Feature_24" + -1.856075 * "IL"."Feature_25" + -5.651058 * "IL"."Feature_26" + 2.183709 * "IL"."Feature_27" + -1.255098 * "IL"."Feature_28" + -0.931372 * "IL"."Feature_29" + -0.3881724 * "IL"."Feature_30" + 0.5220347 * "IL"."Feature_31" + 0.3261326 * "IL"."Feature_32" + -1.182645 * "IL"."Feature_33" + -1.988685 * "IL"."Feature_34" + 4.338569 * "IL"."Feature_35" + 1.723163 * "IL"."Feature_36" + -3.531484 * "IL"."Feature_37" + -2.920562 * "IL"."Feature_38" + -0.5159294 * "IL"."Feature_39" + 0.01825992 * "IL"."Feature_40" + -0.1473727 * "IL"."Feature_41" + 3.032631 * "IL"."Feature_42" + 6.797158 * "IL"."Feature_43" + 2.55387 * "IL"."Feature_44" + 0.2798268 * "IL"."Feature_45" + -1.920795 * "IL"."Feature_46" + -0.7392632 * "IL"."Feature_47" + -0.3377571 * "IL"."Feature_48" + -0.1606868 * "IL"."Feature_49" + 0.007003212 * "IL"."Feature_50" + -1.200661 * "IL"."Feature_51" + -1.723601 * "IL"."Feature_52" + 3.260705 * "IL"."Feature_53" + 0.1501448 * "IL"."Feature_54" + -0.3825829 * "IL"."Feature_55" + 0.7109968 * "IL"."Feature_56" + 0.6924696 * "IL"."Feature_57" + -0.3785202 * "IL"."Feature_58" + 0.8093074 * "IL"."Feature_59" + 0.02858729 * "IL"."Feature_60" + -0.6036165 * "IL"."Feature_61" + 2.069094 * "IL"."Feature_62" + 2.551772 * "IL"."Feature_63" + 0.05397239 AS "NEUR_1_10", 0.2089302 * "IL"."Feature_0" + 0.5830259 * "IL"."Feature_1" + 1.164987 * "IL"."Feature_2" + -0.6511021 * "IL"."Feature_3" + 2.803178 * "IL"."Feature_4" + 3.840669 * "IL"."Feature_5" + -1.902196 * "IL"."Feature_6" + -0.6787035 * "IL"."Feature_7" + 0.5918229 * "IL"."Feature_8" + -0.2998067 * "IL"."Feature_9" + 0.4287776 * "IL"."Feature_10" + 2.215375 * "IL"."Feature_11" + 0.2978919 * "IL"."Feature_12" + 0.340404 * "IL"."Feature_13" + 1.213824 * "IL"."Feature_14" + 0.360242 * "IL"."Feature_15" + 0.1749984 * "IL"."Feature_16" + -0.3204472 * "IL"."Feature_17" + -0.7580765 * "IL"."Feature_18" + -1.553063 * "IL"."Feature_19" + -0.6922642 * "IL"."Feature_20" + -6.175932 * "IL"."Feature_21" + -2.895158 * "IL"."Feature_22" + -0.5626098 * "IL"."Feature_23" + -0.3313306 * "IL"."Feature_24" + -0.2747631 * "IL"."Feature_25" + -1.759302 * "IL"."Feature_26" + 1.911462 * "IL"."Feature_27" + 1.20329 * "IL"."Feature_28" + -0.9092122 * "IL"."Feature_29" + -2.583045 * "IL"."Feature_30" + 0.505303 * "IL"."Feature_31" + 0.3260756 * "IL"."Feature_32" + 1.730497 * "IL"."Feature_33" + -0.4542043 * "IL"."Feature_34" + -2.263831 * "IL"."Feature_35" + 0.2362518 * "IL"."Feature_36" + -2.920563 * "IL"."Feature_37" + 0.1063797 * "IL"."Feature_38" + -0.219254 * "IL"."Feature_39" + -0.1591428 * "IL"."Feature_40" + -0.6267329 * "IL"."Feature_41" + -4.732156 * "IL"."Feature_42" + -4.660391 * "IL"."Feature_43" + 0.2060576 * "IL"."Feature_44" + 3.319821 * "IL"."Feature_45" + 2.030229 * "IL"."Feature_46" + 0.5780943 * "IL"."Feature_47" + -0.191331 * "IL"."Feature_48" + 0.8766869 * "IL"."Feature_49" + 0.3130933 * "IL"."Feature_50" + 0.7894481 * "IL"."Feature_51" + -1.224614 * "IL"."Feature_52" + -0.829886 * "IL"."Feature_53" + -0.02444882 * "IL"."Feature_54" + 0.07320212 * "IL"."Feature_55" + -0.5976718 * "IL"."Feature_56" + 1.583938 * "IL"."Feature_57" + 1.202984 * "IL"."Feature_58" + 2.618487 * "IL"."Feature_59" + -3.080139 * "IL"."Feature_60" + -0.2574041 * "IL"."Feature_61" + -2.068187 * "IL"."Feature_62" + -2.186388 * "IL"."Feature_63" + 0.2123034 AS "NEUR_1_11", -0.5768216 * "IL"."Feature_0" + -0.5665175 * "IL"."Feature_1" + -0.4439983 * "IL"."Feature_2" + 0.01309235 * "IL"."Feature_3" + 0.4601961 * "IL"."Feature_4" + 0.6221508 * "IL"."Feature_5" + 1.170688 * "IL"."Feature_6" + -0.5563281 * "IL"."Feature_7" + 0.333173 * "IL"."Feature_8" + -0.7807141 * "IL"."Feature_9" + 0.2515078 * "IL"."Feature_10" + 0.8514137 * "IL"."Feature_11" + -0.4101181 * "IL"."Feature_12" + -0.5995359 * "IL"."Feature_13" + -0.06010174 * "IL"."Feature_14" + -0.4591539 * "IL"."Feature_15" + 0.1279518 * "IL"."Feature_16" + -0.6750115 * "IL"."Feature_17" + 1.059671 * "IL"."Feature_18" + -0.264791 * "IL"."Feature_19" + -2.522466 * "IL"."Feature_20" + -1.548047 * "IL"."Feature_21" + -0.9854772 * "IL"."Feature_22" + 0.08352618 * "IL"."Feature_23" + -0.2168024 * "IL"."Feature_24" + 0.2392769 * "IL"."Feature_25" + 0.8710448 * "IL"."Feature_26" + -0.2515878 * "IL"."Feature_27" + -1.25337 * "IL"."Feature_28" + -1.472078 * "IL"."Feature_29" + 0.3142015 * "IL"."Feature_30" + -0.6733663 * "IL"."Feature_31" + -0.6754552 * "IL"."Feature_32" + 0.2420203 * "IL"."Feature_33" + -0.05100433 * "IL"."Feature_34" + 0.00881092 * "IL"."Feature_35" + -1.982212 * "IL"."Feature_36" + -0.1088226 * "IL"."Feature_37" + 0.2974082 * "IL"."Feature_38" + -0.05495163 * "IL"."Feature_39" + 0.4533121 * "IL"."Feature_40" + 0.3865451 * "IL"."Feature_41" + 0.2655257 * "IL"."Feature_42" + -0.4333413 * "IL"."Feature_43" + -0.05223507 * "IL"."Feature_44" + -0.1989532 * "IL"."Feature_45" + 0.5125781 * "IL"."Feature_46" + 0.2940957 * "IL"."Feature_47" + -0.4596417 * "IL"."Feature_48" + 0.5729962 * "IL"."Feature_49" + 0.9590949 * "IL"."Feature_50" + -0.1278273 * "IL"."Feature_51" + -0.2051397 * "IL"."Feature_52" + 0.9662837 * "IL"."Feature_53" + -0.2255851 * "IL"."Feature_54" + 0.5947291 * "IL"."Feature_55" + 0.0697162 * "IL"."Feature_56" + 0.5393464 * "IL"."Feature_57" + -0.1364074 * "IL"."Feature_58" + 0.1220268 * "IL"."Feature_59" + 1.673417 * "IL"."Feature_60" + 0.04377357 * "IL"."Feature_61" + 0.211893 * "IL"."Feature_62" + -0.3191219 * "IL"."Feature_63" + -0.5484172 AS "NEUR_1_12" 
FROM "IL"), 
"HL_1_logistic" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_1") THEN -"HL_BA_1"."NEUR_1_1" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_1") THEN -"HL_BA_1"."NEUR_1_1" ELSE -100.0 END END)) AS "NEUR_1_1", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_2") THEN -"HL_BA_1"."NEUR_1_2" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_2") THEN -"HL_BA_1"."NEUR_1_2" ELSE -100.0 END END)) AS "NEUR_1_2", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_3") THEN -"HL_BA_1"."NEUR_1_3" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_3") THEN -"HL_BA_1"."NEUR_1_3" ELSE -100.0 END END)) AS "NEUR_1_3", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_4") THEN -"HL_BA_1"."NEUR_1_4" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_4") THEN -"HL_BA_1"."NEUR_1_4" ELSE -100.0 END END)) AS "NEUR_1_4", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_5") THEN -"HL_BA_1"."NEUR_1_5" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_5") THEN -"HL_BA_1"."NEUR_1_5" ELSE -100.0 END END)) AS "NEUR_1_5", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_6") THEN -"HL_BA_1"."NEUR_1_6" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_6") THEN -"HL_BA_1"."NEUR_1_6" ELSE -100.0 END END)) AS "NEUR_1_6", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_7") THEN -"HL_BA_1"."NEUR_1_7" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_7") THEN -"HL_BA_1"."NEUR_1_7" ELSE -100.0 END END)) AS "NEUR_1_7", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_8") THEN -"HL_BA_1"."NEUR_1_8" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_8") THEN -"HL_BA_1"."NEUR_1_8" ELSE -100.0 END END)) AS "NEUR_1_8", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_9") THEN -"HL_BA_1"."NEUR_1_9" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_9") THEN -"HL_BA_1"."NEUR_1_9" ELSE -100.0 END END)) AS "NEUR_1_9", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_10") THEN -"HL_BA_1"."NEUR_1_10" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_10") THEN -"HL_BA_1"."NEUR_1_10" ELSE -100.0 END END)) AS "NEUR_1_10", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_11") THEN -"HL_BA_1"."NEUR_1_11" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_11") THEN -"HL_BA_1"."NEUR_1_11" ELSE -100.0 END END)) AS "NEUR_1_11", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_12") THEN -"HL_BA_1"."NEUR_1_12" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_12") THEN -"HL_BA_1"."NEUR_1_12" ELSE -100.0 END END)) AS "NEUR_1_12" 
FROM "HL_BA_1"), 
"HL_1_logistic_1" AS 
(SELECT "HL_1_logistic"."KEY" AS "KEY", "HL_1_logistic"."NEUR_1_1" AS "NEUR_1_1", "HL_1_logistic"."NEUR_1_2" AS "NEUR_1_2", "HL_1_logistic"."NEUR_1_3" AS "NEUR_1_3", "HL_1_logistic"."NEUR_1_4" AS "NEUR_1_4", "HL_1_logistic"."NEUR_1_5" AS "NEUR_1_5", "HL_1_logistic"."NEUR_1_6" AS "NEUR_1_6", "HL_1_logistic"."NEUR_1_7" AS "NEUR_1_7", "HL_1_logistic"."NEUR_1_8" AS "NEUR_1_8", "HL_1_logistic"."NEUR_1_9" AS "NEUR_1_9", "HL_1_logistic"."NEUR_1_10" AS "NEUR_1_10", "HL_1_logistic"."NEUR_1_11" AS "NEUR_1_11", "HL_1_logistic"."NEUR_1_12" AS "NEUR_1_12" 
FROM "HL_1_logistic"), 
"OL_BA" AS 
(SELECT "HL_1_logistic_1"."KEY" AS "KEY", 3.601407 * "HL_1_logistic_1"."NEUR_1_1" + 3.117079 * "HL_1_logistic_1"."NEUR_1_2" + -3.357421 * "HL_1_logistic_1"."NEUR_1_3" + -7.459874 * "HL_1_logistic_1"."NEUR_1_4" + -0.7339235 * "HL_1_logistic_1"."NEUR_1_5" + -0.5922934 * "HL_1_logistic_1"."NEUR_1_6" + -2.951932 * "HL_1_logistic_1"."NEUR_1_7" + 3.613489 * "HL_1_logistic_1"."NEUR_1_8" + -8.683574 * "HL_1_logistic_1"."NEUR_1_9" + -2.344973 * "HL_1_logistic_1"."NEUR_1_10" + 1.803202 * "HL_1_logistic_1"."NEUR_1_11" + 2.273299 * "HL_1_logistic_1"."NEUR_1_12" + 3.925984 AS "NEUR_2_1", -1.926983 * "HL_1_logistic_1"."NEUR_1_1" + -7.677443 * "HL_1_logistic_1"."NEUR_1_2" + 0.3702169 * "HL_1_logistic_1"."NEUR_1_3" + 4.747473 * "HL_1_logistic_1"."NEUR_1_4" + 1.911818 * "HL_1_logistic_1"."NEUR_1_5" + -0.333343 * "HL_1_logistic_1"."NEUR_1_6" + 3.476955 * "HL_1_logistic_1"."NEUR_1_7" + -0.9509703 * "HL_1_logistic_1"."NEUR_1_8" + 5.303023 * "HL_1_logistic_1"."NEUR_1_9" + 1.025239 * "HL_1_logistic_1"."NEUR_1_10" + -4.833452 * "HL_1_logistic_1"."NEUR_1_11" + -1.403395 * "HL_1_logistic_1"."NEUR_1_12" + -1.372961 AS "NEUR_2_2", 1.26289 * "HL_1_logistic_1"."NEUR_1_1" + 2.749368 * "HL_1_logistic_1"."NEUR_1_2" + -0.5368699 * "HL_1_logistic_1"."NEUR_1_3" + -4.699792 * "HL_1_logistic_1"."NEUR_1_4" + 0.404294 * "HL_1_logistic_1"."NEUR_1_5" + -0.1801041 * "HL_1_logistic_1"."NEUR_1_6" + 3.586795 * "HL_1_logistic_1"."NEUR_1_7" + -8.867539 * "HL_1_logistic_1"."NEUR_1_8" + 0.2138309 * "HL_1_logistic_1"."NEUR_1_9" + 4.062001 * "HL_1_logistic_1"."NEUR_1_10" + -1.317715 * "HL_1_logistic_1"."NEUR_1_11" + -1.064039 * "HL_1_logistic_1"."NEUR_1_12" + 1.633819 AS "NEUR_2_3", -1.781197 * "HL_1_logistic_1"."NEUR_1_1" + 5.526102 * "HL_1_logistic_1"."NEUR_1_2" + 3.159288 * "HL_1_logistic_1"."NEUR_1_3" + -2.058615 * "HL_1_logistic_1"."NEUR_1_4" + -0.4134949 * "HL_1_logistic_1"."NEUR_1_5" + 0.1268939 * "HL_1_logistic_1"."NEUR_1_6" + 1.467214 * "HL_1_logistic_1"."NEUR_1_7" + 0.3811354 * "HL_1_logistic_1"."NEUR_1_8" + 1.939422 * "HL_1_logistic_1"."NEUR_1_9" + -1.520259 * "HL_1_logistic_1"."NEUR_1_10" + 5.709524 * "HL_1_logistic_1"."NEUR_1_11" + -0.5928259 * "HL_1_logistic_1"."NEUR_1_12" + -1.281478 AS "NEUR_2_4", 2.244591 * "HL_1_logistic_1"."NEUR_1_1" + -1.437964 * "HL_1_logistic_1"."NEUR_1_2" + -2.498093 * "HL_1_logistic_1"."NEUR_1_3" + 1.951861 * "HL_1_logistic_1"."NEUR_1_4" + 0.7529829 * "HL_1_logistic_1"."NEUR_1_5" + -0.6413188 * "HL_1_logistic_1"."NEUR_1_6" + -4.470242 * "HL_1_logistic_1"."NEUR_1_7" + 3.259294 * "HL_1_logistic_1"."NEUR_1_8" + -1.951324 * "HL_1_logistic_1"."NEUR_1_9" + 0.3409975 * "HL_1_logistic_1"."NEUR_1_10" + -3.120935 * "HL_1_logistic_1"."NEUR_1_11" + -0.8489849 * "HL_1_logistic_1"."NEUR_1_12" + 2.935695 AS "NEUR_2_5", -0.5726353 * "HL_1_logistic_1"."NEUR_1_1" + 2.217535 * "HL_1_logistic_1"."NEUR_1_2" + -2.415134 * "HL_1_logistic_1"."NEUR_1_3" + -0.8041726 * "HL_1_logistic_1"."NEUR_1_4" + -0.8664079 * "HL_1_logistic_1"."NEUR_1_5" + -0.4060739 * "HL_1_logistic_1"."NEUR_1_6" + -3.305079 * "HL_1_logistic_1"."NEUR_1_7" + 2.102438 * "HL_1_logistic_1"."NEUR_1_8" + 4.340138 * "HL_1_logistic_1"."NEUR_1_9" + -3.288519 * "HL_1_logistic_1"."NEUR_1_10" + 7.742191 * "HL_1_logistic_1"."NEUR_1_11" + 4.039308 * "HL_1_logistic_1"."NEUR_1_12" + -1.056113 AS "NEUR_2_6", -2.844116 * "HL_1_logistic_1"."NEUR_1_1" + 0.1378364 * "HL_1_logistic_1"."NEUR_1_2" + 1.272233 * "HL_1_logistic_1"."NEUR_1_3" + 10.69874 * "HL_1_logistic_1"."NEUR_1_4" + -1.558126 * "HL_1_logistic_1"."NEUR_1_5" + 0.5287389 * "HL_1_logistic_1"."NEUR_1_6" + 7.281513 * "HL_1_logistic_1"."NEUR_1_7" + -2.635917 * "HL_1_logistic_1"."NEUR_1_8" + -10.58971 * "HL_1_logistic_1"."NEUR_1_9" + 0.4929028 * "HL_1_logistic_1"."NEUR_1_10" + -3.392504 * "HL_1_logistic_1"."NEUR_1_11" + 2.291761 * "HL_1_logistic_1"."NEUR_1_12" + -3.762014 AS "NEUR_2_7", 1.05236 * "HL_1_logistic_1"."NEUR_1_1" + -1.818582 * "HL_1_logistic_1"."NEUR_1_2" + 5.172026 * "HL_1_logistic_1"."NEUR_1_3" + -0.6684396 * "HL_1_logistic_1"."NEUR_1_4" + 0.7175898 * "HL_1_logistic_1"."NEUR_1_5" + -0.4097602 * "HL_1_logistic_1"."NEUR_1_6" + -8.810497 * "HL_1_logistic_1"."NEUR_1_7" + 0.9563599 * "HL_1_logistic_1"."NEUR_1_8" + 2.611356 * "HL_1_logistic_1"."NEUR_1_9" + 1.280642 * "HL_1_logistic_1"."NEUR_1_10" + -2.540315 * "HL_1_logistic_1"."NEUR_1_11" + -0.848639 * "HL_1_logistic_1"."NEUR_1_12" + 2.047871 AS "NEUR_2_8", -1.79723 * "HL_1_logistic_1"."NEUR_1_1" + -0.07606313 * "HL_1_logistic_1"."NEUR_1_2" + -2.718045 * "HL_1_logistic_1"."NEUR_1_3" + -1.717269 * "HL_1_logistic_1"."NEUR_1_4" + -0.5408934 * "HL_1_logistic_1"."NEUR_1_5" + 0.2816078 * "HL_1_logistic_1"."NEUR_1_6" + 4.537476 * "HL_1_logistic_1"."NEUR_1_7" + 1.389188 * "HL_1_logistic_1"."NEUR_1_8" + 1.394827 * "HL_1_logistic_1"."NEUR_1_9" + 5.280138 * "HL_1_logistic_1"."NEUR_1_10" + -3.496587 * "HL_1_logistic_1"."NEUR_1_11" + -1.701968 * "HL_1_logistic_1"."NEUR_1_12" + -2.096866 AS "NEUR_2_9", 0.5580017 * "HL_1_logistic_1"."NEUR_1_1" + -3.453584 * "HL_1_logistic_1"."NEUR_1_2" + 0.7631517 * "HL_1_logistic_1"."NEUR_1_3" + -0.9497662 * "HL_1_logistic_1"."NEUR_1_4" + 0.2415387 * "HL_1_logistic_1"."NEUR_1_5" + -0.2316102 * "HL_1_logistic_1"."NEUR_1_6" + -0.5969423 * "HL_1_logistic_1"."NEUR_1_7" + -0.1204698 * "HL_1_logistic_1"."NEUR_1_8" + 7.796012 * "HL_1_logistic_1"."NEUR_1_9" + -4.573162 * "HL_1_logistic_1"."NEUR_1_10" + 1.432061 * "HL_1_logistic_1"."NEUR_1_11" + -1.290802 * "HL_1_logistic_1"."NEUR_1_12" + 0.6580635 AS "NEUR_2_10" 
FROM "HL_1_logistic_1"), 
"OL_softmax" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_2_1" AS "NEUR_2_1", "OL_BA"."NEUR_2_2" AS "NEUR_2_2", "OL_BA"."NEUR_2_3" AS "NEUR_2_3", "OL_BA"."NEUR_2_4" AS "NEUR_2_4", "OL_BA"."NEUR_2_5" AS "NEUR_2_5", "OL_BA"."NEUR_2_6" AS "NEUR_2_6", "OL_BA"."NEUR_2_7" AS "NEUR_2_7", "OL_BA"."NEUR_2_8" AS "NEUR_2_8", "OL_BA"."NEUR_2_9" AS "NEUR_2_9", "OL_BA"."NEUR_2_10" AS "NEUR_2_10" 
FROM "OL_BA"), 
"OL_softmax_1" AS 
(SELECT "OL_softmax"."KEY" AS "KEY", "OL_softmax"."NEUR_2_1" AS "NEUR_2_1", "OL_softmax"."NEUR_2_2" AS "NEUR_2_2", "OL_softmax"."NEUR_2_3" AS "NEUR_2_3", "OL_softmax"."NEUR_2_4" AS "NEUR_2_4", "OL_softmax"."NEUR_2_5" AS "NEUR_2_5", "OL_softmax"."NEUR_2_6" AS "NEUR_2_6", "OL_softmax"."NEUR_2_7" AS "NEUR_2_7", "OL_softmax"."NEUR_2_8" AS "NEUR_2_8", "OL_softmax"."NEUR_2_9" AS "NEUR_2_9", "OL_softmax"."NEUR_2_10" AS "NEUR_2_10" 
FROM "OL_softmax"), 
orig_cte AS 
(SELECT "OL_softmax_1"."KEY" AS "KEY", "OL_softmax_1"."NEUR_2_1" AS "Score_0", "OL_softmax_1"."NEUR_2_2" AS "Score_1", "OL_softmax_1"."NEUR_2_3" AS "Score_2", "OL_softmax_1"."NEUR_2_4" AS "Score_3", "OL_softmax_1"."NEUR_2_5" AS "Score_4", "OL_softmax_1"."NEUR_2_6" AS "Score_5", "OL_softmax_1"."NEUR_2_7" AS "Score_6", "OL_softmax_1"."NEUR_2_8" AS "Score_7", "OL_softmax_1"."NEUR_2_9" AS "Score_8", "OL_softmax_1"."NEUR_2_10" AS "Score_9", CAST(NULL AS DOUBLE) AS "Proba_0", CAST(NULL AS DOUBLE) AS "Proba_1", CAST(NULL AS DOUBLE) AS "Proba_2", CAST(NULL AS DOUBLE) AS "Proba_3", CAST(NULL AS DOUBLE) AS "Proba_4", CAST(NULL AS DOUBLE) AS "Proba_5", CAST(NULL AS DOUBLE) AS "Proba_6", CAST(NULL AS DOUBLE) AS "Proba_7", CAST(NULL AS DOUBLE) AS "Proba_8", CAST(NULL AS DOUBLE) AS "Proba_9", CAST(NULL AS DOUBLE) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "LogProba_3", CAST(NULL AS DOUBLE) AS "LogProba_4", CAST(NULL AS DOUBLE) AS "LogProba_5", CAST(NULL AS DOUBLE) AS "LogProba_6", CAST(NULL AS DOUBLE) AS "LogProba_7", CAST(NULL AS DOUBLE) AS "LogProba_8", CAST(NULL AS DOUBLE) AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba" 
FROM "OL_softmax_1"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS class, orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS class, orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS class, orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS class, orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS class, orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS class, orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(CASE WHEN (-100.0 <= score_max."Score_0" - score_max."max_Score") THEN score_max."Score_0" - score_max."max_Score" ELSE -100.0 END) AS "exp_delta_Score_0", exp(CASE WHEN (-100.0 <= score_max."Score_1" - score_max."max_Score") THEN score_max."Score_1" - score_max."max_Score" ELSE -100.0 END) AS "exp_delta_Score_1", exp(CASE WHEN (-100.0 <= score_max."Score_2" - score_max."max_Score") THEN score_max."Score_2" - score_max."max_Score" ELSE -100.0 END) AS "exp_delta_Score_2", exp(CASE WHEN (-100.0 <= score_max."Score_3" - score_max."max_Score") THEN score_max."Score_3" - score_max."max_Score" ELSE -100.0 END) AS "exp_delta_Score_3", exp(CASE WHEN (-100.0 <= score_max."Score_4" - score_max."max_Score") THEN score_max."Score_4" - score_max."max_Score" ELSE -100.0 END) AS "exp_delta_Score_4", exp(CASE WHEN (-100.0 <= score_max."Score_5" - score_max."max_Score") THEN score_max."Score_5" - score_max."max_Score" ELSE -100.0 END) AS "exp_delta_Score_5", exp(CASE WHEN (-100.0 <= score_max."Score_6" - score_max."max_Score") THEN score_max."Score_6" - score_max."max_Score" ELSE -100.0 END) AS "exp_delta_Score_6", exp(CASE WHEN (-100.0 <= score_max."Score_7" - score_max."max_Score") THEN score_max."Score_7" - score_max."max_Score" ELSE -100.0 END) AS "exp_delta_Score_7", exp(CASE WHEN (-100.0 <= score_max."Score_8" - score_max."max_Score") THEN score_max."Score_8" - score_max."max_Score" ELSE -100.0 END) AS "exp_delta_Score_8", exp(CASE WHEN (-100.0 <= score_max."Score_9" - score_max."max_Score") THEN score_max."Score_9" - score_max."max_Score" ELSE -100.0 END) AS "exp_delta_Score_9" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 4 AS class, score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 5 AS class, score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 6 AS class, score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 7 AS class, score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 8 AS class, score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 9 AS class, score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Score_4" AS "Score_4", score_soft_max_deltas."Score_5" AS "Score_5", score_soft_max_deltas."Score_6" AS "Score_6", score_soft_max_deltas."Score_7" AS "Score_7", score_soft_max_deltas."Score_8" AS "Score_8", score_soft_max_deltas."Score_9" AS "Score_9", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."Proba_4" AS "Proba_4", score_soft_max_deltas."Proba_5" AS "Proba_5", score_soft_max_deltas."Proba_6" AS "Proba_6", score_soft_max_deltas."Proba_7" AS "Proba_7", score_soft_max_deltas."Proba_8" AS "Proba_8", score_soft_max_deltas."Proba_9" AS "Proba_9", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."LogProba_4" AS "LogProba_4", score_soft_max_deltas."LogProba_5" AS "LogProba_5", score_soft_max_deltas."LogProba_6" AS "LogProba_6", score_soft_max_deltas."LogProba_7" AS "LogProba_7", score_soft_max_deltas."LogProba_8" AS "LogProba_8", score_soft_max_deltas."LogProba_9" AS "LogProba_9", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score_9", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3", soft_max_comp."SoftProba_4" AS "SoftProba_4", soft_max_comp."SoftProba_5" AS "SoftProba_5", soft_max_comp."SoftProba_6" AS "SoftProba_6", soft_max_comp."SoftProba_7" AS "SoftProba_7", soft_max_comp."SoftProba_8" AS "SoftProba_8", soft_max_comp."SoftProba_9" AS "SoftProba_9" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", max(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3", score_soft_max."exp_delta_Score_4" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_4", score_soft_max."exp_delta_Score_5" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_5", score_soft_max."exp_delta_Score_6" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_6", score_soft_max."exp_delta_Score_7" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_7", score_soft_max."exp_delta_Score_8" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_8", score_soft_max."exp_delta_Score_9" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_9" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", CAST(NULL AS DOUBLE) AS "Score_1", CAST(NULL AS DOUBLE) AS "Score_2", CAST(NULL AS DOUBLE) AS "Score_3", CAST(NULL AS DOUBLE) AS "Score_4", CAST(NULL AS DOUBLE) AS "Score_5", CAST(NULL AS DOUBLE) AS "Score_6", CAST(NULL AS DOUBLE) AS "Score_7", CAST(NULL AS DOUBLE) AS "Score_8", CAST(NULL AS DOUBLE) AS "Score_9", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", arg_max_cte."SoftProba_4" AS "Proba_4", arg_max_cte."SoftProba_5" AS "Proba_5", arg_max_cte."SoftProba_6" AS "Proba_6", arg_max_cte."SoftProba_7" AS "Proba_7", arg_max_cte."SoftProba_8" AS "Proba_8", arg_max_cte."SoftProba_9" AS "Proba_9", log(CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 1e-100) THEN arg_max_cte."SoftProba_0" ELSE 1e-100 END) AS "LogProba_0", log(CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 1e-100) THEN arg_max_cte."SoftProba_1" ELSE 1e-100 END) AS "LogProba_1", log(CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 1e-100) THEN arg_max_cte."SoftProba_2" ELSE 1e-100 END) AS "LogProba_2", log(CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 1e-100) THEN arg_max_cte."SoftProba_3" ELSE 1e-100 END) AS "LogProba_3", log(CASE WHEN (arg_max_cte."SoftProba_4" IS NULL OR arg_max_cte."SoftProba_4" > 1e-100) THEN arg_max_cte."SoftProba_4" ELSE 1e-100 END) AS "LogProba_4", log(CASE WHEN (arg_max_cte."SoftProba_5" IS NULL OR arg_max_cte."SoftProba_5" > 1e-100) THEN arg_max_cte."SoftProba_5" ELSE 1e-100 END) AS "LogProba_5", log(CASE WHEN (arg_max_cte."SoftProba_6" IS NULL OR arg_max_cte."SoftProba_6" > 1e-100) THEN arg_max_cte."SoftProba_6" ELSE 1e-100 END) AS "LogProba_6", log(CASE WHEN (arg_max_cte."SoftProba_7" IS NULL OR arg_max_cte."SoftProba_7" > 1e-100) THEN arg_max_cte."SoftProba_7" ELSE 1e-100 END) AS "LogProba_7", log(CASE WHEN (arg_max_cte."SoftProba_8" IS NULL OR arg_max_cte."SoftProba_8" > 1e-100) THEN arg_max_cte."SoftProba_8" ELSE 1e-100 END) AS "LogProba_8", log(CASE WHEN (arg_max_cte."SoftProba_9" IS NULL OR arg_max_cte."SoftProba_9" > 1e-100) THEN arg_max_cte."SoftProba_9" ELSE 1e-100 END) AS "LogProba_9", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."SoftProba_0" <= CASE WHEN (arg_max_cte."SoftProba_1" <= CASE WHEN (arg_max_cte."SoftProba_2" <= CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END) THEN CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END ELSE arg_max_cte."SoftProba_2" END) THEN CASE WHEN (arg_max_cte."SoftProba_2" <= CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END) THEN CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END ELSE arg_max_cte."SoftProba_2" END ELSE arg_max_cte."SoftProba_1" END) THEN CASE WHEN (arg_max_cte."SoftProba_1" <= CASE WHEN (arg_max_cte."SoftProba_2" <= CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END) THEN CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END ELSE arg_max_cte."SoftProba_2" END) THEN CASE WHEN (arg_max_cte."SoftProba_2" <= CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END) THEN CASE WHEN (arg_max_cte."SoftProba_3" <= CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END) THEN CASE WHEN (arg_max_cte."SoftProba_4" <= CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END) THEN CASE WHEN (arg_max_cte."SoftProba_5" <= CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END) THEN CASE WHEN (arg_max_cte."SoftProba_6" <= CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END) THEN CASE WHEN (arg_max_cte."SoftProba_7" <= CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END) THEN CASE WHEN (arg_max_cte."SoftProba_8" <= arg_max_cte."SoftProba_9") THEN arg_max_cte."SoftProba_9" ELSE arg_max_cte."SoftProba_8" END ELSE arg_max_cte."SoftProba_7" END ELSE arg_max_cte."SoftProba_6" END ELSE arg_max_cte."SoftProba_5" END ELSE arg_max_cte."SoftProba_4" END ELSE arg_max_cte."SoftProba_3" END ELSE arg_max_cte."SoftProba_2" END ELSE arg_max_cte."SoftProba_1" END ELSE arg_max_cte."SoftProba_0" END AS "DecisionProba" 
FROM arg_max_cte