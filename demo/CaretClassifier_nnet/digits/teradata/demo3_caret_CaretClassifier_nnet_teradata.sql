-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretClassifier_nnet
-- Dataset : digits
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS DOUBLE PRECISION) AS "Feature_0", CAST("ADS"."Feature_1" AS DOUBLE PRECISION) AS "Feature_1", CAST("ADS"."Feature_2" AS DOUBLE PRECISION) AS "Feature_2", CAST("ADS"."Feature_3" AS DOUBLE PRECISION) AS "Feature_3", CAST("ADS"."Feature_4" AS DOUBLE PRECISION) AS "Feature_4", CAST("ADS"."Feature_5" AS DOUBLE PRECISION) AS "Feature_5", CAST("ADS"."Feature_6" AS DOUBLE PRECISION) AS "Feature_6", CAST("ADS"."Feature_7" AS DOUBLE PRECISION) AS "Feature_7", CAST("ADS"."Feature_8" AS DOUBLE PRECISION) AS "Feature_8", CAST("ADS"."Feature_9" AS DOUBLE PRECISION) AS "Feature_9", CAST("ADS"."Feature_10" AS DOUBLE PRECISION) AS "Feature_10", CAST("ADS"."Feature_11" AS DOUBLE PRECISION) AS "Feature_11", CAST("ADS"."Feature_12" AS DOUBLE PRECISION) AS "Feature_12", CAST("ADS"."Feature_13" AS DOUBLE PRECISION) AS "Feature_13", CAST("ADS"."Feature_14" AS DOUBLE PRECISION) AS "Feature_14", CAST("ADS"."Feature_15" AS DOUBLE PRECISION) AS "Feature_15", CAST("ADS"."Feature_16" AS DOUBLE PRECISION) AS "Feature_16", CAST("ADS"."Feature_17" AS DOUBLE PRECISION) AS "Feature_17", CAST("ADS"."Feature_18" AS DOUBLE PRECISION) AS "Feature_18", CAST("ADS"."Feature_19" AS DOUBLE PRECISION) AS "Feature_19", CAST("ADS"."Feature_20" AS DOUBLE PRECISION) AS "Feature_20", CAST("ADS"."Feature_21" AS DOUBLE PRECISION) AS "Feature_21", CAST("ADS"."Feature_22" AS DOUBLE PRECISION) AS "Feature_22", CAST("ADS"."Feature_23" AS DOUBLE PRECISION) AS "Feature_23", CAST("ADS"."Feature_24" AS DOUBLE PRECISION) AS "Feature_24", CAST("ADS"."Feature_25" AS DOUBLE PRECISION) AS "Feature_25", CAST("ADS"."Feature_26" AS DOUBLE PRECISION) AS "Feature_26", CAST("ADS"."Feature_27" AS DOUBLE PRECISION) AS "Feature_27", CAST("ADS"."Feature_28" AS DOUBLE PRECISION) AS "Feature_28", CAST("ADS"."Feature_29" AS DOUBLE PRECISION) AS "Feature_29", CAST("ADS"."Feature_30" AS DOUBLE PRECISION) AS "Feature_30", CAST("ADS"."Feature_31" AS DOUBLE PRECISION) AS "Feature_31", CAST("ADS"."Feature_32" AS DOUBLE PRECISION) AS "Feature_32", CAST("ADS"."Feature_33" AS DOUBLE PRECISION) AS "Feature_33", CAST("ADS"."Feature_34" AS DOUBLE PRECISION) AS "Feature_34", CAST("ADS"."Feature_35" AS DOUBLE PRECISION) AS "Feature_35", CAST("ADS"."Feature_36" AS DOUBLE PRECISION) AS "Feature_36", CAST("ADS"."Feature_37" AS DOUBLE PRECISION) AS "Feature_37", CAST("ADS"."Feature_38" AS DOUBLE PRECISION) AS "Feature_38", CAST("ADS"."Feature_39" AS DOUBLE PRECISION) AS "Feature_39", CAST("ADS"."Feature_40" AS DOUBLE PRECISION) AS "Feature_40", CAST("ADS"."Feature_41" AS DOUBLE PRECISION) AS "Feature_41", CAST("ADS"."Feature_42" AS DOUBLE PRECISION) AS "Feature_42", CAST("ADS"."Feature_43" AS DOUBLE PRECISION) AS "Feature_43", CAST("ADS"."Feature_44" AS DOUBLE PRECISION) AS "Feature_44", CAST("ADS"."Feature_45" AS DOUBLE PRECISION) AS "Feature_45", CAST("ADS"."Feature_46" AS DOUBLE PRECISION) AS "Feature_46", CAST("ADS"."Feature_47" AS DOUBLE PRECISION) AS "Feature_47", CAST("ADS"."Feature_48" AS DOUBLE PRECISION) AS "Feature_48", CAST("ADS"."Feature_49" AS DOUBLE PRECISION) AS "Feature_49", CAST("ADS"."Feature_50" AS DOUBLE PRECISION) AS "Feature_50", CAST("ADS"."Feature_51" AS DOUBLE PRECISION) AS "Feature_51", CAST("ADS"."Feature_52" AS DOUBLE PRECISION) AS "Feature_52", CAST("ADS"."Feature_53" AS DOUBLE PRECISION) AS "Feature_53", CAST("ADS"."Feature_54" AS DOUBLE PRECISION) AS "Feature_54", CAST("ADS"."Feature_55" AS DOUBLE PRECISION) AS "Feature_55", CAST("ADS"."Feature_56" AS DOUBLE PRECISION) AS "Feature_56", CAST("ADS"."Feature_57" AS DOUBLE PRECISION) AS "Feature_57", CAST("ADS"."Feature_58" AS DOUBLE PRECISION) AS "Feature_58", CAST("ADS"."Feature_59" AS DOUBLE PRECISION) AS "Feature_59", CAST("ADS"."Feature_60" AS DOUBLE PRECISION) AS "Feature_60", CAST("ADS"."Feature_61" AS DOUBLE PRECISION) AS "Feature_61", CAST("ADS"."Feature_62" AS DOUBLE PRECISION) AS "Feature_62", CAST("ADS"."Feature_63" AS DOUBLE PRECISION) AS "Feature_63" 
FROM digits AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", CAST(0.01951371 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.3878408 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(1.165656 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(1.378105 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.6532521 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(0.3688813 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(-0.3006226 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-0.02993453 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(0.602085 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(0.06582364 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(1.849407 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(0.67903 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(0.5022003 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(0.2909653 AS DOUBLE PRECISION) * "IL"."Feature_13" + CAST(0.5177906 AS DOUBLE PRECISION) * "IL"."Feature_14" + CAST(-0.08647324 AS DOUBLE PRECISION) * "IL"."Feature_15" + CAST(0.02014876 AS DOUBLE PRECISION) * "IL"."Feature_16" + CAST(-0.05096516 AS DOUBLE PRECISION) * "IL"."Feature_17" + CAST(1.713659 AS DOUBLE PRECISION) * "IL"."Feature_18" + CAST(-0.3460905 AS DOUBLE PRECISION) * "IL"."Feature_19" + CAST(-0.1792853 AS DOUBLE PRECISION) * "IL"."Feature_20" + CAST(0.5425021 AS DOUBLE PRECISION) * "IL"."Feature_21" + CAST(0.6744379 AS DOUBLE PRECISION) * "IL"."Feature_22" + CAST(-0.4414879 AS DOUBLE PRECISION) * "IL"."Feature_23" + CAST(-0.6628202 AS DOUBLE PRECISION) * "IL"."Feature_24" + CAST(0.3035608 AS DOUBLE PRECISION) * "IL"."Feature_25" + CAST(0.9682296 AS DOUBLE PRECISION) * "IL"."Feature_26" + CAST(1.186556 AS DOUBLE PRECISION) * "IL"."Feature_27" + CAST(0.5041613 AS DOUBLE PRECISION) * "IL"."Feature_28" + CAST(-0.1982312 AS DOUBLE PRECISION) * "IL"."Feature_29" + CAST(0.6176716 AS DOUBLE PRECISION) * "IL"."Feature_30" + CAST(0.1702364 AS DOUBLE PRECISION) * "IL"."Feature_31" + CAST(-0.190732 AS DOUBLE PRECISION) * "IL"."Feature_32" + CAST(0.8885117 AS DOUBLE PRECISION) * "IL"."Feature_33" + CAST(0.7244694 AS DOUBLE PRECISION) * "IL"."Feature_34" + CAST(0.7939946 AS DOUBLE PRECISION) * "IL"."Feature_35" + CAST(0.5176391 AS DOUBLE PRECISION) * "IL"."Feature_36" + CAST(0.4897893 AS DOUBLE PRECISION) * "IL"."Feature_37" + CAST(0.3653974 AS DOUBLE PRECISION) * "IL"."Feature_38" + CAST(0.1665061 AS DOUBLE PRECISION) * "IL"."Feature_39" + CAST(-0.2309697 AS DOUBLE PRECISION) * "IL"."Feature_40" + CAST(-0.3534805 AS DOUBLE PRECISION) * "IL"."Feature_41" + CAST(0.9578253 AS DOUBLE PRECISION) * "IL"."Feature_42" + CAST(0.09836661 AS DOUBLE PRECISION) * "IL"."Feature_43" + CAST(-0.3463252 AS DOUBLE PRECISION) * "IL"."Feature_44" + CAST(0.414554 AS DOUBLE PRECISION) * "IL"."Feature_45" + CAST(0.7676223 AS DOUBLE PRECISION) * "IL"."Feature_46" + CAST(0.001994966 AS DOUBLE PRECISION) * "IL"."Feature_47" + CAST(0.491814 AS DOUBLE PRECISION) * "IL"."Feature_48" + CAST(0.03894199 AS DOUBLE PRECISION) * "IL"."Feature_49" + CAST(1.047792 AS DOUBLE PRECISION) * "IL"."Feature_50" + CAST(0.07376093 AS DOUBLE PRECISION) * "IL"."Feature_51" + CAST(1.301599 AS DOUBLE PRECISION) * "IL"."Feature_52" + CAST(0.5818782 AS DOUBLE PRECISION) * "IL"."Feature_53" + CAST(-0.524537 AS DOUBLE PRECISION) * "IL"."Feature_54" + CAST(0.3904051 AS DOUBLE PRECISION) * "IL"."Feature_55" + CAST(0.502823 AS DOUBLE PRECISION) * "IL"."Feature_56" + CAST(-0.4770825 AS DOUBLE PRECISION) * "IL"."Feature_57" + CAST(0.2276299 AS DOUBLE PRECISION) * "IL"."Feature_58" + CAST(1.783436 AS DOUBLE PRECISION) * "IL"."Feature_59" + CAST(0.5876428 AS DOUBLE PRECISION) * "IL"."Feature_60" + CAST(0.504754 AS DOUBLE PRECISION) * "IL"."Feature_61" + CAST(0.4909576 AS DOUBLE PRECISION) * "IL"."Feature_62" + CAST(0.02033095 AS DOUBLE PRECISION) * "IL"."Feature_63" + CAST(-0.1156322 AS DOUBLE PRECISION) AS "NEUR_1_1", CAST(0.3908245 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.6215842 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-1.156658 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(2.081127 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(3.026741 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(-0.6657789 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(1.601405 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(0.5823051 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(-0.5702542 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(2.709346 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(4.031162 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(-0.0875017 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(0.6926299 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(0.438156 AS DOUBLE PRECISION) * "IL"."Feature_13" + CAST(1.983885 AS DOUBLE PRECISION) * "IL"."Feature_14" + CAST(0.9054095 AS DOUBLE PRECISION) * "IL"."Feature_15" + CAST(0.454522 AS DOUBLE PRECISION) * "IL"."Feature_16" + CAST(1.710136 AS DOUBLE PRECISION) * "IL"."Feature_17" + CAST(-3.842008 AS DOUBLE PRECISION) * "IL"."Feature_18" + CAST(-5.904386 AS DOUBLE PRECISION) * "IL"."Feature_19" + CAST(1.589254 AS DOUBLE PRECISION) * "IL"."Feature_20" + CAST(-2.865793 AS DOUBLE PRECISION) * "IL"."Feature_21" + CAST(0.6988437 AS DOUBLE PRECISION) * "IL"."Feature_22" + CAST(0.3138145 AS DOUBLE PRECISION) * "IL"."Feature_23" + CAST(-0.2954424 AS DOUBLE PRECISION) * "IL"."Feature_24" + CAST(-1.331988 AS DOUBLE PRECISION) * "IL"."Feature_25" + CAST(-3.547193 AS DOUBLE PRECISION) * "IL"."Feature_26" + CAST(-2.726365 AS DOUBLE PRECISION) * "IL"."Feature_27" + CAST(-3.256204 AS DOUBLE PRECISION) * "IL"."Feature_28" + CAST(-6.971422 AS DOUBLE PRECISION) * "IL"."Feature_29" + CAST(-2.935546 AS DOUBLE PRECISION) * "IL"."Feature_30" + CAST(0.6007142 AS DOUBLE PRECISION) * "IL"."Feature_31" + CAST(-0.1356411 AS DOUBLE PRECISION) * "IL"."Feature_32" + CAST(1.983332 AS DOUBLE PRECISION) * "IL"."Feature_33" + CAST(-0.6668183 AS DOUBLE PRECISION) * "IL"."Feature_34" + CAST(-1.177169 AS DOUBLE PRECISION) * "IL"."Feature_35" + CAST(-0.05845962 AS DOUBLE PRECISION) * "IL"."Feature_36" + CAST(-1.181841 AS DOUBLE PRECISION) * "IL"."Feature_37" + CAST(-3.23728 AS DOUBLE PRECISION) * "IL"."Feature_38" + CAST(0.2399219 AS DOUBLE PRECISION) * "IL"."Feature_39" + CAST(0.4039822 AS DOUBLE PRECISION) * "IL"."Feature_40" + CAST(0.8093329 AS DOUBLE PRECISION) * "IL"."Feature_41" + CAST(2.177133 AS DOUBLE PRECISION) * "IL"."Feature_42" + CAST(-0.09846356 AS DOUBLE PRECISION) * "IL"."Feature_43" + CAST(-1.92495 AS DOUBLE PRECISION) * "IL"."Feature_44" + CAST(1.50366 AS DOUBLE PRECISION) * "IL"."Feature_45" + CAST(2.047556 AS DOUBLE PRECISION) * "IL"."Feature_46" + CAST(-0.1260967 AS DOUBLE PRECISION) * "IL"."Feature_47" + CAST(0.342222 AS DOUBLE PRECISION) * "IL"."Feature_48" + CAST(0.3858662 AS DOUBLE PRECISION) * "IL"."Feature_49" + CAST(0.8548821 AS DOUBLE PRECISION) * "IL"."Feature_50" + CAST(1.125114 AS DOUBLE PRECISION) * "IL"."Feature_51" + CAST(3.462938 AS DOUBLE PRECISION) * "IL"."Feature_52" + CAST(1.422299 AS DOUBLE PRECISION) * "IL"."Feature_53" + CAST(4.039056 AS DOUBLE PRECISION) * "IL"."Feature_54" + CAST(-1.307983 AS DOUBLE PRECISION) * "IL"."Feature_55" + CAST(0.3037061 AS DOUBLE PRECISION) * "IL"."Feature_56" + CAST(-0.2119493 AS DOUBLE PRECISION) * "IL"."Feature_57" + CAST(-0.2453908 AS DOUBLE PRECISION) * "IL"."Feature_58" + CAST(0.5023666 AS DOUBLE PRECISION) * "IL"."Feature_59" + CAST(1.362544 AS DOUBLE PRECISION) * "IL"."Feature_60" + CAST(1.300332 AS DOUBLE PRECISION) * "IL"."Feature_61" + CAST(-1.573216 AS DOUBLE PRECISION) * "IL"."Feature_62" + CAST(-3.911307 AS DOUBLE PRECISION) * "IL"."Feature_63" + CAST(-0.07333376 AS DOUBLE PRECISION) AS "NEUR_1_2", CAST(0.4401056 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.3559492 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.2762527 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(1.066764 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(3.070925 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(2.909615 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(2.113158 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(0.523521 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(0.462099 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(0.1796254 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(1.944691 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(-0.2986886 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(4.775882 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(-1.493266 AS DOUBLE PRECISION) * "IL"."Feature_13" + CAST(1.124529 AS DOUBLE PRECISION) * "IL"."Feature_14" + CAST(0.7582069 AS DOUBLE PRECISION) * "IL"."Feature_15" + CAST(0.3446862 AS DOUBLE PRECISION) * "IL"."Feature_16" + CAST(-2.739467 AS DOUBLE PRECISION) * "IL"."Feature_17" + CAST(-4.958903 AS DOUBLE PRECISION) * "IL"."Feature_18" + CAST(-5.413807 AS DOUBLE PRECISION) * "IL"."Feature_19" + CAST(4.80875 AS DOUBLE PRECISION) * "IL"."Feature_20" + CAST(0.9766383 AS DOUBLE PRECISION) * "IL"."Feature_21" + CAST(1.4224 AS DOUBLE PRECISION) * "IL"."Feature_22" + CAST(0.04101652 AS DOUBLE PRECISION) * "IL"."Feature_23" + CAST(0.1255906 AS DOUBLE PRECISION) * "IL"."Feature_24" + CAST(-2.721676 AS DOUBLE PRECISION) * "IL"."Feature_25" + CAST(-1.802037 AS DOUBLE PRECISION) * "IL"."Feature_26" + CAST(-2.130279 AS DOUBLE PRECISION) * "IL"."Feature_27" + CAST(1.921935 AS DOUBLE PRECISION) * "IL"."Feature_28" + CAST(-0.149413 AS DOUBLE PRECISION) * "IL"."Feature_29" + CAST(-2.719812 AS DOUBLE PRECISION) * "IL"."Feature_30" + CAST(-0.08981295 AS DOUBLE PRECISION) * "IL"."Feature_31" + CAST(-0.2693399 AS DOUBLE PRECISION) * "IL"."Feature_32" + CAST(-0.09290105 AS DOUBLE PRECISION) * "IL"."Feature_33" + CAST(-2.775778 AS DOUBLE PRECISION) * "IL"."Feature_34" + CAST(-1.759973 AS DOUBLE PRECISION) * "IL"."Feature_35" + CAST(2.560332 AS DOUBLE PRECISION) * "IL"."Feature_36" + CAST(3.217833 AS DOUBLE PRECISION) * "IL"."Feature_37" + CAST(0.9291403 AS DOUBLE PRECISION) * "IL"."Feature_38" + CAST(0.6607256 AS DOUBLE PRECISION) * "IL"."Feature_39" + CAST(-0.5722389 AS DOUBLE PRECISION) * "IL"."Feature_40" + CAST(1.815474 AS DOUBLE PRECISION) * "IL"."Feature_41" + CAST(-0.5646791 AS DOUBLE PRECISION) * "IL"."Feature_42" + CAST(-4.006297 AS DOUBLE PRECISION) * "IL"."Feature_43" + CAST(0.2522369 AS DOUBLE PRECISION) * "IL"."Feature_44" + CAST(-1.755895 AS DOUBLE PRECISION) * "IL"."Feature_45" + CAST(0.838313 AS DOUBLE PRECISION) * "IL"."Feature_46" + CAST(0.3437339 AS DOUBLE PRECISION) * "IL"."Feature_47" + CAST(0.6331468 AS DOUBLE PRECISION) * "IL"."Feature_48" + CAST(1.516952 AS DOUBLE PRECISION) * "IL"."Feature_49" + CAST(-2.892205 AS DOUBLE PRECISION) * "IL"."Feature_50" + CAST(-0.7363812 AS DOUBLE PRECISION) * "IL"."Feature_51" + CAST(-3.004101 AS DOUBLE PRECISION) * "IL"."Feature_52" + CAST(-3.158148 AS DOUBLE PRECISION) * "IL"."Feature_53" + CAST(0.8145624 AS DOUBLE PRECISION) * "IL"."Feature_54" + CAST(-0.3500428 AS DOUBLE PRECISION) * "IL"."Feature_55" + CAST(0.02138209 AS DOUBLE PRECISION) * "IL"."Feature_56" + CAST(-1.058066 AS DOUBLE PRECISION) * "IL"."Feature_57" + CAST(-0.0161313 AS DOUBLE PRECISION) * "IL"."Feature_58" + CAST(0.718603 AS DOUBLE PRECISION) * "IL"."Feature_59" + CAST(-2.345385 AS DOUBLE PRECISION) * "IL"."Feature_60" + CAST(2.288336 AS DOUBLE PRECISION) * "IL"."Feature_61" + CAST(-1.001368 AS DOUBLE PRECISION) * "IL"."Feature_62" + CAST(-0.7418976 AS DOUBLE PRECISION) * "IL"."Feature_63" + CAST(-0.3239663 AS DOUBLE PRECISION) AS "NEUR_1_3", CAST(0.5304312 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.518215 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-1.278507 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(1.067404 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-1.830905 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(1.688737 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(0.9622947 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(0.1616896 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(0.1947068 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(-4.020922 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(-3.465817 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(-4.450835 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(-4.422699 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(-0.7514632 AS DOUBLE PRECISION) * "IL"."Feature_13" + CAST(-3.354652 AS DOUBLE PRECISION) * "IL"."Feature_14" + CAST(0.03129887 AS DOUBLE PRECISION) * "IL"."Feature_15" + CAST(0.5274341 AS DOUBLE PRECISION) * "IL"."Feature_16" + CAST(-0.3392152 AS DOUBLE PRECISION) * "IL"."Feature_17" + CAST(2.551226 AS DOUBLE PRECISION) * "IL"."Feature_18" + CAST(3.311389 AS DOUBLE PRECISION) * "IL"."Feature_19" + CAST(3.876162 AS DOUBLE PRECISION) * "IL"."Feature_20" + CAST(-8.046196 AS DOUBLE PRECISION) * "IL"."Feature_21" + CAST(-1.38266 AS DOUBLE PRECISION) * "IL"."Feature_22" + CAST(0.4692186 AS DOUBLE PRECISION) * "IL"."Feature_23" + CAST(0.3066553 AS DOUBLE PRECISION) * "IL"."Feature_24" + CAST(5.834966 AS DOUBLE PRECISION) * "IL"."Feature_25" + CAST(-0.1543496 AS DOUBLE PRECISION) * "IL"."Feature_26" + CAST(-0.3954949 AS DOUBLE PRECISION) * "IL"."Feature_27" + CAST(-0.3819257 AS DOUBLE PRECISION) * "IL"."Feature_28" + CAST(0.3413478 AS DOUBLE PRECISION) * "IL"."Feature_29" + CAST(-3.319455 AS DOUBLE PRECISION) * "IL"."Feature_30" + CAST(0.6007788 AS DOUBLE PRECISION) * "IL"."Feature_31" + CAST(-0.09702151 AS DOUBLE PRECISION) * "IL"."Feature_32" + CAST(-0.3201096 AS DOUBLE PRECISION) * "IL"."Feature_33" + CAST(4.462124 AS DOUBLE PRECISION) * "IL"."Feature_34" + CAST(-2.164085 AS DOUBLE PRECISION) * "IL"."Feature_35" + CAST(3.178481 AS DOUBLE PRECISION) * "IL"."Feature_36" + CAST(5.870376 AS DOUBLE PRECISION) * "IL"."Feature_37" + CAST(-0.09077653 AS DOUBLE PRECISION) * "IL"."Feature_38" + CAST(0.6657887 AS DOUBLE PRECISION) * "IL"."Feature_39" + CAST(0.5145064 AS DOUBLE PRECISION) * "IL"."Feature_40" + CAST(-1.752321 AS DOUBLE PRECISION) * "IL"."Feature_41" + CAST(0.4150224 AS DOUBLE PRECISION) * "IL"."Feature_42" + CAST(2.336977 AS DOUBLE PRECISION) * "IL"."Feature_43" + CAST(3.353581 AS DOUBLE PRECISION) * "IL"."Feature_44" + CAST(-0.1407384 AS DOUBLE PRECISION) * "IL"."Feature_45" + CAST(0.09708067 AS DOUBLE PRECISION) * "IL"."Feature_46" + CAST(0.406152 AS DOUBLE PRECISION) * "IL"."Feature_47" + CAST(-0.8196124 AS DOUBLE PRECISION) * "IL"."Feature_48" + CAST(-0.46776 AS DOUBLE PRECISION) * "IL"."Feature_49" + CAST(-1.456265 AS DOUBLE PRECISION) * "IL"."Feature_50" + CAST(1.362194 AS DOUBLE PRECISION) * "IL"."Feature_51" + CAST(0.9844219 AS DOUBLE PRECISION) * "IL"."Feature_52" + CAST(-3.806314 AS DOUBLE PRECISION) * "IL"."Feature_53" + CAST(-0.4314972 AS DOUBLE PRECISION) * "IL"."Feature_54" + CAST(-0.1067857 AS DOUBLE PRECISION) * "IL"."Feature_55" + CAST(0.4368425 AS DOUBLE PRECISION) * "IL"."Feature_56" + CAST(-0.2681275 AS DOUBLE PRECISION) * "IL"."Feature_57" + CAST(-3.475814 AS DOUBLE PRECISION) * "IL"."Feature_58" + CAST(1.758454 AS DOUBLE PRECISION) * "IL"."Feature_59" + CAST(-0.7196354 AS DOUBLE PRECISION) * "IL"."Feature_60" + CAST(0.8467895 AS DOUBLE PRECISION) * "IL"."Feature_61" + CAST(-0.7561205 AS DOUBLE PRECISION) * "IL"."Feature_62" + CAST(-0.0553241 AS DOUBLE PRECISION) * "IL"."Feature_63" + CAST(-0.1065841 AS DOUBLE PRECISION) AS "NEUR_1_4", CAST(-0.5718957 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.1422793 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.8631228 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.2133344 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.2376637 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(-1.362894 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(0.5146303 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-0.03306422 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(0.6710985 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(-0.2775184 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(-0.2346768 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(-0.329372 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(0.1731947 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(-0.1748782 AS DOUBLE PRECISION) * "IL"."Feature_13" + CAST(-0.4217245 AS DOUBLE PRECISION) * "IL"."Feature_14" + CAST(-0.1026734 AS DOUBLE PRECISION) * "IL"."Feature_15" + CAST(-0.1141566 AS DOUBLE PRECISION) * "IL"."Feature_16" + CAST(-0.1293427 AS DOUBLE PRECISION) * "IL"."Feature_17" + CAST(-0.8818303 AS DOUBLE PRECISION) * "IL"."Feature_18" + CAST(-0.3352731 AS DOUBLE PRECISION) * "IL"."Feature_19" + CAST(-0.1695619 AS DOUBLE PRECISION) * "IL"."Feature_20" + CAST(0.8731881 AS DOUBLE PRECISION) * "IL"."Feature_21" + CAST(-0.3706261 AS DOUBLE PRECISION) * "IL"."Feature_22" + CAST(0.4840491 AS DOUBLE PRECISION) * "IL"."Feature_23" + CAST(-0.1675478 AS DOUBLE PRECISION) * "IL"."Feature_24" + CAST(0.03854025 AS DOUBLE PRECISION) * "IL"."Feature_25" + CAST(-0.6548067 AS DOUBLE PRECISION) * "IL"."Feature_26" + CAST(-1.183391 AS DOUBLE PRECISION) * "IL"."Feature_27" + CAST(0.1820111 AS DOUBLE PRECISION) * "IL"."Feature_28" + CAST(0.6062812 AS DOUBLE PRECISION) * "IL"."Feature_29" + CAST(0.3273823 AS DOUBLE PRECISION) * "IL"."Feature_30" + CAST(-0.445678 AS DOUBLE PRECISION) * "IL"."Feature_31" + CAST(0.5235512 AS DOUBLE PRECISION) * "IL"."Feature_32" + CAST(-0.8647174 AS DOUBLE PRECISION) * "IL"."Feature_33" + CAST(-1.190554 AS DOUBLE PRECISION) * "IL"."Feature_34" + CAST(-0.478507 AS DOUBLE PRECISION) * "IL"."Feature_35" + CAST(-0.9811284 AS DOUBLE PRECISION) * "IL"."Feature_36" + CAST(-0.5227222 AS DOUBLE PRECISION) * "IL"."Feature_37" + CAST(0.3313591 AS DOUBLE PRECISION) * "IL"."Feature_38" + CAST(0.4288208 AS DOUBLE PRECISION) * "IL"."Feature_39" + CAST(-0.3910724 AS DOUBLE PRECISION) * "IL"."Feature_40" + CAST(0.486657 AS DOUBLE PRECISION) * "IL"."Feature_41" + CAST(-0.9881801 AS DOUBLE PRECISION) * "IL"."Feature_42" + CAST(-0.29047 AS DOUBLE PRECISION) * "IL"."Feature_43" + CAST(-0.6065105 AS DOUBLE PRECISION) * "IL"."Feature_44" + CAST(0.3447875 AS DOUBLE PRECISION) * "IL"."Feature_45" + CAST(0.6763632 AS DOUBLE PRECISION) * "IL"."Feature_46" + CAST(-0.3235416 AS DOUBLE PRECISION) * "IL"."Feature_47" + CAST(-0.3723855 AS DOUBLE PRECISION) * "IL"."Feature_48" + CAST(0.6072024 AS DOUBLE PRECISION) * "IL"."Feature_49" + CAST(-0.4329032 AS DOUBLE PRECISION) * "IL"."Feature_50" + CAST(-1.17617 AS DOUBLE PRECISION) * "IL"."Feature_51" + CAST(-1.509334 AS DOUBLE PRECISION) * "IL"."Feature_52" + CAST(0.8550094 AS DOUBLE PRECISION) * "IL"."Feature_53" + CAST(0.6577406 AS DOUBLE PRECISION) * "IL"."Feature_54" + CAST(0.3285973 AS DOUBLE PRECISION) * "IL"."Feature_55" + CAST(-0.5689845 AS DOUBLE PRECISION) * "IL"."Feature_56" + CAST(-0.1372923 AS DOUBLE PRECISION) * "IL"."Feature_57" + CAST(-0.1236626 AS DOUBLE PRECISION) * "IL"."Feature_58" + CAST(-1.116695 AS DOUBLE PRECISION) * "IL"."Feature_59" + CAST(-0.7922531 AS DOUBLE PRECISION) * "IL"."Feature_60" + CAST(0.5312133 AS DOUBLE PRECISION) * "IL"."Feature_61" + CAST(0.8104385 AS DOUBLE PRECISION) * "IL"."Feature_62" + CAST(-0.4232404 AS DOUBLE PRECISION) * "IL"."Feature_63" + CAST(0.2448333 AS DOUBLE PRECISION) AS "NEUR_1_5", CAST(-0.6328788 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.4069628 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.2224198 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.4542985 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.1553756 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(-0.4039514 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(0.5213111 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-0.6279761 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(-0.2822344 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(0.1993366 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(-0.6696046 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(0.2633472 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(-0.6613185 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(-0.6387056 AS DOUBLE PRECISION) * "IL"."Feature_13" + CAST(0.666793 AS DOUBLE PRECISION) * "IL"."Feature_14" + CAST(0.3418211 AS DOUBLE PRECISION) * "IL"."Feature_15" + CAST(0.1662333 AS DOUBLE PRECISION) * "IL"."Feature_16" + CAST(0.1452369 AS DOUBLE PRECISION) * "IL"."Feature_17" + CAST(0.432473 AS DOUBLE PRECISION) * "IL"."Feature_18" + CAST(-0.5003261 AS DOUBLE PRECISION) * "IL"."Feature_19" + CAST(-0.2871622 AS DOUBLE PRECISION) * "IL"."Feature_20" + CAST(-0.6903583 AS DOUBLE PRECISION) * "IL"."Feature_21" + CAST(0.3359683 AS DOUBLE PRECISION) * "IL"."Feature_22" + CAST(0.4171136 AS DOUBLE PRECISION) * "IL"."Feature_23" + CAST(0.3377542 AS DOUBLE PRECISION) * "IL"."Feature_24" + CAST(0.2416533 AS DOUBLE PRECISION) * "IL"."Feature_25" + CAST(0.484239 AS DOUBLE PRECISION) * "IL"."Feature_26" + CAST(-0.2784729 AS DOUBLE PRECISION) * "IL"."Feature_27" + CAST(0.3684713 AS DOUBLE PRECISION) * "IL"."Feature_28" + CAST(0.1743793 AS DOUBLE PRECISION) * "IL"."Feature_29" + CAST(-0.4308166 AS DOUBLE PRECISION) * "IL"."Feature_30" + CAST(0.07489386 AS DOUBLE PRECISION) * "IL"."Feature_31" + CAST(0.415866 AS DOUBLE PRECISION) * "IL"."Feature_32" + CAST(0.1276836 AS DOUBLE PRECISION) * "IL"."Feature_33" + CAST(-0.2465451 AS DOUBLE PRECISION) * "IL"."Feature_34" + CAST(-0.1100633 AS DOUBLE PRECISION) * "IL"."Feature_35" + CAST(0.2967366 AS DOUBLE PRECISION) * "IL"."Feature_36" + CAST(-0.5180666 AS DOUBLE PRECISION) * "IL"."Feature_37" + CAST(-0.4002729 AS DOUBLE PRECISION) * "IL"."Feature_38" + CAST(0.06670109 AS DOUBLE PRECISION) * "IL"."Feature_39" + CAST(0.5635464 AS DOUBLE PRECISION) * "IL"."Feature_40" + CAST(-0.04807987 AS DOUBLE PRECISION) * "IL"."Feature_41" + CAST(-0.546931 AS DOUBLE PRECISION) * "IL"."Feature_42" + CAST(-0.139105 AS DOUBLE PRECISION) * "IL"."Feature_43" + CAST(-0.4170451 AS DOUBLE PRECISION) * "IL"."Feature_44" + CAST(-0.4293432 AS DOUBLE PRECISION) * "IL"."Feature_45" + CAST(-0.1417153 AS DOUBLE PRECISION) * "IL"."Feature_46" + CAST(-0.2389242 AS DOUBLE PRECISION) * "IL"."Feature_47" + CAST(-0.5959968 AS DOUBLE PRECISION) * "IL"."Feature_48" + CAST(-0.03605892 AS DOUBLE PRECISION) * "IL"."Feature_49" + CAST(0.1016794 AS DOUBLE PRECISION) * "IL"."Feature_50" + CAST(-0.2668422 AS DOUBLE PRECISION) * "IL"."Feature_51" + CAST(-0.2998692 AS DOUBLE PRECISION) * "IL"."Feature_52" + CAST(-0.6672774 AS DOUBLE PRECISION) * "IL"."Feature_53" + CAST(0.1835254 AS DOUBLE PRECISION) * "IL"."Feature_54" + CAST(-0.1856446 AS DOUBLE PRECISION) * "IL"."Feature_55" + CAST(-0.4200997 AS DOUBLE PRECISION) * "IL"."Feature_56" + CAST(0.2917147 AS DOUBLE PRECISION) * "IL"."Feature_57" + CAST(-0.4789848 AS DOUBLE PRECISION) * "IL"."Feature_58" + CAST(-0.5758122 AS DOUBLE PRECISION) * "IL"."Feature_59" + CAST(0.4812969 AS DOUBLE PRECISION) * "IL"."Feature_60" + CAST(0.002290179 AS DOUBLE PRECISION) * "IL"."Feature_61" + CAST(-0.6505699 AS DOUBLE PRECISION) * "IL"."Feature_62" + CAST(0.6698001 AS DOUBLE PRECISION) * "IL"."Feature_63" + CAST(0.4227959 AS DOUBLE PRECISION) AS "NEUR_1_6", CAST(-0.5428317 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.8661043 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-1.965811 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(1.282922 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.07657 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(-0.6602264 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(-2.66421 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-1.031123 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(-0.03025706 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(-0.7864395 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(-0.448951 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(-0.8459345 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(-3.120581 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(2.70022 AS DOUBLE PRECISION) * "IL"."Feature_13" + CAST(1.5422 AS DOUBLE PRECISION) * "IL"."Feature_14" + CAST(-1.048394 AS DOUBLE PRECISION) * "IL"."Feature_15" + CAST(0.4631814 AS DOUBLE PRECISION) * "IL"."Feature_16" + CAST(-1.066555 AS DOUBLE PRECISION) * "IL"."Feature_17" + CAST(1.155392 AS DOUBLE PRECISION) * "IL"."Feature_18" + CAST(2.094577 AS DOUBLE PRECISION) * "IL"."Feature_19" + CAST(0.913842 AS DOUBLE PRECISION) * "IL"."Feature_20" + CAST(2.649767 AS DOUBLE PRECISION) * "IL"."Feature_21" + CAST(0.8917656 AS DOUBLE PRECISION) * "IL"."Feature_22" + CAST(0.5967826 AS DOUBLE PRECISION) * "IL"."Feature_23" + CAST(0.1146515 AS DOUBLE PRECISION) * "IL"."Feature_24" + CAST(0.09973358 AS DOUBLE PRECISION) * "IL"."Feature_25" + CAST(-1.90749 AS DOUBLE PRECISION) * "IL"."Feature_26" + CAST(2.219072 AS DOUBLE PRECISION) * "IL"."Feature_27" + CAST(0.8604523 AS DOUBLE PRECISION) * "IL"."Feature_28" + CAST(-1.491955 AS DOUBLE PRECISION) * "IL"."Feature_29" + CAST(-4.053806 AS DOUBLE PRECISION) * "IL"."Feature_30" + CAST(0.4609851 AS DOUBLE PRECISION) * "IL"."Feature_31" + CAST(0.6494987 AS DOUBLE PRECISION) * "IL"."Feature_32" + CAST(-0.88559 AS DOUBLE PRECISION) * "IL"."Feature_33" + CAST(-2.289265 AS DOUBLE PRECISION) * "IL"."Feature_34" + CAST(-0.3485491 AS DOUBLE PRECISION) * "IL"."Feature_35" + CAST(-0.9241166 AS DOUBLE PRECISION) * "IL"."Feature_36" + CAST(-2.080178 AS DOUBLE PRECISION) * "IL"."Feature_37" + CAST(-2.409565 AS DOUBLE PRECISION) * "IL"."Feature_38" + CAST(-0.4967684 AS DOUBLE PRECISION) * "IL"."Feature_39" + CAST(-0.1204333 AS DOUBLE PRECISION) * "IL"."Feature_40" + CAST(-2.404793 AS DOUBLE PRECISION) * "IL"."Feature_41" + CAST(1.864929 AS DOUBLE PRECISION) * "IL"."Feature_42" + CAST(-1.71841 AS DOUBLE PRECISION) * "IL"."Feature_43" + CAST(-2.678151 AS DOUBLE PRECISION) * "IL"."Feature_44" + CAST(-1.507339 AS DOUBLE PRECISION) * "IL"."Feature_45" + CAST(0.2143736 AS DOUBLE PRECISION) * "IL"."Feature_46" + CAST(-0.4152252 AS DOUBLE PRECISION) * "IL"."Feature_47" + CAST(-0.1443267 AS DOUBLE PRECISION) * "IL"."Feature_48" + CAST(-2.981402 AS DOUBLE PRECISION) * "IL"."Feature_49" + CAST(0.6236349 AS DOUBLE PRECISION) * "IL"."Feature_50" + CAST(-1.799903 AS DOUBLE PRECISION) * "IL"."Feature_51" + CAST(0.98222 AS DOUBLE PRECISION) * "IL"."Feature_52" + CAST(4.059174 AS DOUBLE PRECISION) * "IL"."Feature_53" + CAST(0.2730959 AS DOUBLE PRECISION) * "IL"."Feature_54" + CAST(-0.5104116 AS DOUBLE PRECISION) * "IL"."Feature_55" + CAST(0.1099602 AS DOUBLE PRECISION) * "IL"."Feature_56" + CAST(-0.7977204 AS DOUBLE PRECISION) * "IL"."Feature_57" + CAST(-2.793181 AS DOUBLE PRECISION) * "IL"."Feature_58" + CAST(3.273735 AS DOUBLE PRECISION) * "IL"."Feature_59" + CAST(4.656605 AS DOUBLE PRECISION) * "IL"."Feature_60" + CAST(3.900651 AS DOUBLE PRECISION) * "IL"."Feature_61" + CAST(0.9173429 AS DOUBLE PRECISION) * "IL"."Feature_62" + CAST(0.4726818 AS DOUBLE PRECISION) * "IL"."Feature_63" + CAST(-0.07272722 AS DOUBLE PRECISION) AS "NEUR_1_7", CAST(0.6547813 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(1.152914 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.7924021 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(1.518163 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(2.710074 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(0.049249 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(1.292839 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-0.5554497 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(-0.3787329 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(1.38754 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(1.138589 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(0.9818435 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(-0.8454945 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(0.6877696 AS DOUBLE PRECISION) * "IL"."Feature_13" + CAST(-0.01193685 AS DOUBLE PRECISION) * "IL"."Feature_14" + CAST(-0.4513916 AS DOUBLE PRECISION) * "IL"."Feature_15" + CAST(0.4451321 AS DOUBLE PRECISION) * "IL"."Feature_16" + CAST(1.494793 AS DOUBLE PRECISION) * "IL"."Feature_17" + CAST(-0.1311239 AS DOUBLE PRECISION) * "IL"."Feature_18" + CAST(0.1816266 AS DOUBLE PRECISION) * "IL"."Feature_19" + CAST(-0.3694399 AS DOUBLE PRECISION) * "IL"."Feature_20" + CAST(1.828661 AS DOUBLE PRECISION) * "IL"."Feature_21" + CAST(-1.131085 AS DOUBLE PRECISION) * "IL"."Feature_22" + CAST(-0.4435502 AS DOUBLE PRECISION) * "IL"."Feature_23" + CAST(-0.08790231 AS DOUBLE PRECISION) * "IL"."Feature_24" + CAST(3.557251 AS DOUBLE PRECISION) * "IL"."Feature_25" + CAST(1.992868 AS DOUBLE PRECISION) * "IL"."Feature_26" + CAST(1.00931 AS DOUBLE PRECISION) * "IL"."Feature_27" + CAST(1.199777 AS DOUBLE PRECISION) * "IL"."Feature_28" + CAST(1.832841 AS DOUBLE PRECISION) * "IL"."Feature_29" + CAST(-0.2021904 AS DOUBLE PRECISION) * "IL"."Feature_30" + CAST(-0.6601906 AS DOUBLE PRECISION) * "IL"."Feature_31" + CAST(0.489796 AS DOUBLE PRECISION) * "IL"."Feature_32" + CAST(1.441453 AS DOUBLE PRECISION) * "IL"."Feature_33" + CAST(2.35713 AS DOUBLE PRECISION) * "IL"."Feature_34" + CAST(1.047899 AS DOUBLE PRECISION) * "IL"."Feature_35" + CAST(0.1550658 AS DOUBLE PRECISION) * "IL"."Feature_36" + CAST(0.3892104 AS DOUBLE PRECISION) * "IL"."Feature_37" + CAST(1.569972 AS DOUBLE PRECISION) * "IL"."Feature_38" + CAST(0.08972921 AS DOUBLE PRECISION) * "IL"."Feature_39" + CAST(-0.2211028 AS DOUBLE PRECISION) * "IL"."Feature_40" + CAST(0.3173201 AS DOUBLE PRECISION) * "IL"."Feature_41" + CAST(1.697613 AS DOUBLE PRECISION) * "IL"."Feature_42" + CAST(-2.006633 AS DOUBLE PRECISION) * "IL"."Feature_43" + CAST(2.011225 AS DOUBLE PRECISION) * "IL"."Feature_44" + CAST(4.856783 AS DOUBLE PRECISION) * "IL"."Feature_45" + CAST(-0.6118796 AS DOUBLE PRECISION) * "IL"."Feature_46" + CAST(0.4225926 AS DOUBLE PRECISION) * "IL"."Feature_47" + CAST(0.06517873 AS DOUBLE PRECISION) * "IL"."Feature_48" + CAST(-2.363064 AS DOUBLE PRECISION) * "IL"."Feature_49" + CAST(-0.9620702 AS DOUBLE PRECISION) * "IL"."Feature_50" + CAST(-3.333851 AS DOUBLE PRECISION) * "IL"."Feature_51" + CAST(-3.928234 AS DOUBLE PRECISION) * "IL"."Feature_52" + CAST(-1.909243 AS DOUBLE PRECISION) * "IL"."Feature_53" + CAST(-1.835219 AS DOUBLE PRECISION) * "IL"."Feature_54" + CAST(-1.166144 AS DOUBLE PRECISION) * "IL"."Feature_55" + CAST(-0.3710178 AS DOUBLE PRECISION) * "IL"."Feature_56" + CAST(-0.03029238 AS DOUBLE PRECISION) * "IL"."Feature_57" + CAST(0.5456503 AS DOUBLE PRECISION) * "IL"."Feature_58" + CAST(-0.4673795 AS DOUBLE PRECISION) * "IL"."Feature_59" + CAST(-1.816193 AS DOUBLE PRECISION) * "IL"."Feature_60" + CAST(-2.844919 AS DOUBLE PRECISION) * "IL"."Feature_61" + CAST(-2.477384 AS DOUBLE PRECISION) * "IL"."Feature_62" + CAST(-1.598781 AS DOUBLE PRECISION) * "IL"."Feature_63" + CAST(0.7110645 AS DOUBLE PRECISION) AS "NEUR_1_8", CAST(-0.3215003 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.4652266 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(1.063006 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(2.032027 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.3238607 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(4.002213 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(5.342207 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-0.1106673 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(0.6288176 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(0.9751006 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(1.540799 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(2.058111 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(2.131267 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(1.229787 AS DOUBLE PRECISION) * "IL"."Feature_13" + CAST(-0.4554443 AS DOUBLE PRECISION) * "IL"."Feature_14" + CAST(0.3273874 AS DOUBLE PRECISION) * "IL"."Feature_15" + CAST(-0.5098178 AS DOUBLE PRECISION) * "IL"."Feature_16" + CAST(-0.2387073 AS DOUBLE PRECISION) * "IL"."Feature_17" + CAST(-1.510432 AS DOUBLE PRECISION) * "IL"."Feature_18" + CAST(-2.438425 AS DOUBLE PRECISION) * "IL"."Feature_19" + CAST(0.5991139 AS DOUBLE PRECISION) * "IL"."Feature_20" + CAST(1.357583 AS DOUBLE PRECISION) * "IL"."Feature_21" + CAST(-2.382524 AS DOUBLE PRECISION) * "IL"."Feature_22" + CAST(-0.5574797 AS DOUBLE PRECISION) * "IL"."Feature_23" + CAST(-0.07778145 AS DOUBLE PRECISION) * "IL"."Feature_24" + CAST(-2.50549 AS DOUBLE PRECISION) * "IL"."Feature_25" + CAST(-1.214832 AS DOUBLE PRECISION) * "IL"."Feature_26" + CAST(1.222148 AS DOUBLE PRECISION) * "IL"."Feature_27" + CAST(3.30222 AS DOUBLE PRECISION) * "IL"."Feature_28" + CAST(0.1481909 AS DOUBLE PRECISION) * "IL"."Feature_29" + CAST(-0.8095877 AS DOUBLE PRECISION) * "IL"."Feature_30" + CAST(-0.04807714 AS DOUBLE PRECISION) * "IL"."Feature_31" + CAST(0.3278356 AS DOUBLE PRECISION) * "IL"."Feature_32" + CAST(-2.325482 AS DOUBLE PRECISION) * "IL"."Feature_33" + CAST(-2.478545 AS DOUBLE PRECISION) * "IL"."Feature_34" + CAST(1.27074 AS DOUBLE PRECISION) * "IL"."Feature_35" + CAST(1.353424 AS DOUBLE PRECISION) * "IL"."Feature_36" + CAST(-2.493171 AS DOUBLE PRECISION) * "IL"."Feature_37" + CAST(-2.940703 AS DOUBLE PRECISION) * "IL"."Feature_38" + CAST(0.5796149 AS DOUBLE PRECISION) * "IL"."Feature_39" + CAST(-0.5765398 AS DOUBLE PRECISION) * "IL"."Feature_40" + CAST(-1.314119 AS DOUBLE PRECISION) * "IL"."Feature_41" + CAST(-2.688854 AS DOUBLE PRECISION) * "IL"."Feature_42" + CAST(-2.496698 AS DOUBLE PRECISION) * "IL"."Feature_43" + CAST(-1.099147 AS DOUBLE PRECISION) * "IL"."Feature_44" + CAST(-0.3383079 AS DOUBLE PRECISION) * "IL"."Feature_45" + CAST(-0.763143 AS DOUBLE PRECISION) * "IL"."Feature_46" + CAST(0.2019388 AS DOUBLE PRECISION) * "IL"."Feature_47" + CAST(-0.653709 AS DOUBLE PRECISION) * "IL"."Feature_48" + CAST(1.102168 AS DOUBLE PRECISION) * "IL"."Feature_49" + CAST(-2.295683 AS DOUBLE PRECISION) * "IL"."Feature_50" + CAST(-0.07676055 AS DOUBLE PRECISION) * "IL"."Feature_51" + CAST(-0.1873319 AS DOUBLE PRECISION) * "IL"."Feature_52" + CAST(-0.4799056 AS DOUBLE PRECISION) * "IL"."Feature_53" + CAST(0.5244873 AS DOUBLE PRECISION) * "IL"."Feature_54" + CAST(-0.1847612 AS DOUBLE PRECISION) * "IL"."Feature_55" + CAST(0.5745639 AS DOUBLE PRECISION) * "IL"."Feature_56" + CAST(-0.1123449 AS DOUBLE PRECISION) * "IL"."Feature_57" + CAST(1.359194 AS DOUBLE PRECISION) * "IL"."Feature_58" + CAST(3.125946 AS DOUBLE PRECISION) * "IL"."Feature_59" + CAST(-0.7490722 AS DOUBLE PRECISION) * "IL"."Feature_60" + CAST(0.3686997 AS DOUBLE PRECISION) * "IL"."Feature_61" + CAST(1.149994 AS DOUBLE PRECISION) * "IL"."Feature_62" + CAST(2.032656 AS DOUBLE PRECISION) * "IL"."Feature_63" + CAST(-0.5289571 AS DOUBLE PRECISION) AS "NEUR_1_9", CAST(-0.3072894 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.1991391 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.7922015 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-1.524081 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-1.161776 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(1.9721 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(-2.911395 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(0.4827836 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(-0.5628719 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(0.4849691 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(-0.2669845 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(-1.341906 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(2.131612 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(2.011655 AS DOUBLE PRECISION) * "IL"."Feature_13" + CAST(1.556976 AS DOUBLE PRECISION) * "IL"."Feature_14" + CAST(0.04481881 AS DOUBLE PRECISION) * "IL"."Feature_15" + CAST(0.1575876 AS DOUBLE PRECISION) * "IL"."Feature_16" + CAST(-0.6126813 AS DOUBLE PRECISION) * "IL"."Feature_17" + CAST(-1.266842 AS DOUBLE PRECISION) * "IL"."Feature_18" + CAST(3.142237 AS DOUBLE PRECISION) * "IL"."Feature_19" + CAST(-0.2697688 AS DOUBLE PRECISION) * "IL"."Feature_20" + CAST(-2.116662 AS DOUBLE PRECISION) * "IL"."Feature_21" + CAST(-0.3907152 AS DOUBLE PRECISION) * "IL"."Feature_22" + CAST(-0.2527356 AS DOUBLE PRECISION) * "IL"."Feature_23" + CAST(0.1473674 AS DOUBLE PRECISION) * "IL"."Feature_24" + CAST(-1.856075 AS DOUBLE PRECISION) * "IL"."Feature_25" + CAST(-5.651058 AS DOUBLE PRECISION) * "IL"."Feature_26" + CAST(2.183709 AS DOUBLE PRECISION) * "IL"."Feature_27" + CAST(-1.255098 AS DOUBLE PRECISION) * "IL"."Feature_28" + CAST(-0.931372 AS DOUBLE PRECISION) * "IL"."Feature_29" + CAST(-0.3881724 AS DOUBLE PRECISION) * "IL"."Feature_30" + CAST(0.5220347 AS DOUBLE PRECISION) * "IL"."Feature_31" + CAST(0.3261326 AS DOUBLE PRECISION) * "IL"."Feature_32" + CAST(-1.182645 AS DOUBLE PRECISION) * "IL"."Feature_33" + CAST(-1.988685 AS DOUBLE PRECISION) * "IL"."Feature_34" + CAST(4.338569 AS DOUBLE PRECISION) * "IL"."Feature_35" + CAST(1.723163 AS DOUBLE PRECISION) * "IL"."Feature_36" + CAST(-3.531484 AS DOUBLE PRECISION) * "IL"."Feature_37" + CAST(-2.920562 AS DOUBLE PRECISION) * "IL"."Feature_38" + CAST(-0.5159294 AS DOUBLE PRECISION) * "IL"."Feature_39" + CAST(0.01825992 AS DOUBLE PRECISION) * "IL"."Feature_40" + CAST(-0.1473727 AS DOUBLE PRECISION) * "IL"."Feature_41" + CAST(3.032631 AS DOUBLE PRECISION) * "IL"."Feature_42" + CAST(6.797158 AS DOUBLE PRECISION) * "IL"."Feature_43" + CAST(2.55387 AS DOUBLE PRECISION) * "IL"."Feature_44" + CAST(0.2798268 AS DOUBLE PRECISION) * "IL"."Feature_45" + CAST(-1.920795 AS DOUBLE PRECISION) * "IL"."Feature_46" + CAST(-0.7392632 AS DOUBLE PRECISION) * "IL"."Feature_47" + CAST(-0.3377571 AS DOUBLE PRECISION) * "IL"."Feature_48" + CAST(-0.1606868 AS DOUBLE PRECISION) * "IL"."Feature_49" + CAST(0.007003212 AS DOUBLE PRECISION) * "IL"."Feature_50" + CAST(-1.200661 AS DOUBLE PRECISION) * "IL"."Feature_51" + CAST(-1.723601 AS DOUBLE PRECISION) * "IL"."Feature_52" + CAST(3.260705 AS DOUBLE PRECISION) * "IL"."Feature_53" + CAST(0.1501448 AS DOUBLE PRECISION) * "IL"."Feature_54" + CAST(-0.3825829 AS DOUBLE PRECISION) * "IL"."Feature_55" + CAST(0.7109968 AS DOUBLE PRECISION) * "IL"."Feature_56" + CAST(0.6924696 AS DOUBLE PRECISION) * "IL"."Feature_57" + CAST(-0.3785202 AS DOUBLE PRECISION) * "IL"."Feature_58" + CAST(0.8093074 AS DOUBLE PRECISION) * "IL"."Feature_59" + CAST(0.02858729 AS DOUBLE PRECISION) * "IL"."Feature_60" + CAST(-0.6036165 AS DOUBLE PRECISION) * "IL"."Feature_61" + CAST(2.069094 AS DOUBLE PRECISION) * "IL"."Feature_62" + CAST(2.551772 AS DOUBLE PRECISION) * "IL"."Feature_63" + CAST(0.05397239 AS DOUBLE PRECISION) AS "NEUR_1_10", CAST(0.2089302 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.5830259 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(1.164987 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.6511021 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(2.803178 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(3.840669 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(-1.902196 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-0.6787035 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(0.5918229 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(-0.2998067 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(0.4287776 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(2.215375 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(0.2978919 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(0.340404 AS DOUBLE PRECISION) * "IL"."Feature_13" + CAST(1.213824 AS DOUBLE PRECISION) * "IL"."Feature_14" + CAST(0.360242 AS DOUBLE PRECISION) * "IL"."Feature_15" + CAST(0.1749984 AS DOUBLE PRECISION) * "IL"."Feature_16" + CAST(-0.3204472 AS DOUBLE PRECISION) * "IL"."Feature_17" + CAST(-0.7580765 AS DOUBLE PRECISION) * "IL"."Feature_18" + CAST(-1.553063 AS DOUBLE PRECISION) * "IL"."Feature_19" + CAST(-0.6922642 AS DOUBLE PRECISION) * "IL"."Feature_20" + CAST(-6.175932 AS DOUBLE PRECISION) * "IL"."Feature_21" + CAST(-2.895158 AS DOUBLE PRECISION) * "IL"."Feature_22" + CAST(-0.5626098 AS DOUBLE PRECISION) * "IL"."Feature_23" + CAST(-0.3313306 AS DOUBLE PRECISION) * "IL"."Feature_24" + CAST(-0.2747631 AS DOUBLE PRECISION) * "IL"."Feature_25" + CAST(-1.759302 AS DOUBLE PRECISION) * "IL"."Feature_26" + CAST(1.911462 AS DOUBLE PRECISION) * "IL"."Feature_27" + CAST(1.20329 AS DOUBLE PRECISION) * "IL"."Feature_28" + CAST(-0.9092122 AS DOUBLE PRECISION) * "IL"."Feature_29" + CAST(-2.583045 AS DOUBLE PRECISION) * "IL"."Feature_30" + CAST(0.505303 AS DOUBLE PRECISION) * "IL"."Feature_31" + CAST(0.3260756 AS DOUBLE PRECISION) * "IL"."Feature_32" + CAST(1.730497 AS DOUBLE PRECISION) * "IL"."Feature_33" + CAST(-0.4542043 AS DOUBLE PRECISION) * "IL"."Feature_34" + CAST(-2.263831 AS DOUBLE PRECISION) * "IL"."Feature_35" + CAST(0.2362518 AS DOUBLE PRECISION) * "IL"."Feature_36" + CAST(-2.920563 AS DOUBLE PRECISION) * "IL"."Feature_37" + CAST(0.1063797 AS DOUBLE PRECISION) * "IL"."Feature_38" + CAST(-0.219254 AS DOUBLE PRECISION) * "IL"."Feature_39" + CAST(-0.1591428 AS DOUBLE PRECISION) * "IL"."Feature_40" + CAST(-0.6267329 AS DOUBLE PRECISION) * "IL"."Feature_41" + CAST(-4.732156 AS DOUBLE PRECISION) * "IL"."Feature_42" + CAST(-4.660391 AS DOUBLE PRECISION) * "IL"."Feature_43" + CAST(0.2060576 AS DOUBLE PRECISION) * "IL"."Feature_44" + CAST(3.319821 AS DOUBLE PRECISION) * "IL"."Feature_45" + CAST(2.030229 AS DOUBLE PRECISION) * "IL"."Feature_46" + CAST(0.5780943 AS DOUBLE PRECISION) * "IL"."Feature_47" + CAST(-0.191331 AS DOUBLE PRECISION) * "IL"."Feature_48" + CAST(0.8766869 AS DOUBLE PRECISION) * "IL"."Feature_49" + CAST(0.3130933 AS DOUBLE PRECISION) * "IL"."Feature_50" + CAST(0.7894481 AS DOUBLE PRECISION) * "IL"."Feature_51" + CAST(-1.224614 AS DOUBLE PRECISION) * "IL"."Feature_52" + CAST(-0.829886 AS DOUBLE PRECISION) * "IL"."Feature_53" + CAST(-0.02444882 AS DOUBLE PRECISION) * "IL"."Feature_54" + CAST(0.07320212 AS DOUBLE PRECISION) * "IL"."Feature_55" + CAST(-0.5976718 AS DOUBLE PRECISION) * "IL"."Feature_56" + CAST(1.583938 AS DOUBLE PRECISION) * "IL"."Feature_57" + CAST(1.202984 AS DOUBLE PRECISION) * "IL"."Feature_58" + CAST(2.618487 AS DOUBLE PRECISION) * "IL"."Feature_59" + CAST(-3.080139 AS DOUBLE PRECISION) * "IL"."Feature_60" + CAST(-0.2574041 AS DOUBLE PRECISION) * "IL"."Feature_61" + CAST(-2.068187 AS DOUBLE PRECISION) * "IL"."Feature_62" + CAST(-2.186388 AS DOUBLE PRECISION) * "IL"."Feature_63" + CAST(0.2123034 AS DOUBLE PRECISION) AS "NEUR_1_11", CAST(-0.5768216 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.5665175 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.4439983 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.01309235 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.4601961 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(0.6221508 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(1.170688 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-0.5563281 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(0.333173 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(-0.7807141 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(0.2515078 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(0.8514137 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(-0.4101181 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(-0.5995359 AS DOUBLE PRECISION) * "IL"."Feature_13" + CAST(-0.06010174 AS DOUBLE PRECISION) * "IL"."Feature_14" + CAST(-0.4591539 AS DOUBLE PRECISION) * "IL"."Feature_15" + CAST(0.1279518 AS DOUBLE PRECISION) * "IL"."Feature_16" + CAST(-0.6750115 AS DOUBLE PRECISION) * "IL"."Feature_17" + CAST(1.059671 AS DOUBLE PRECISION) * "IL"."Feature_18" + CAST(-0.264791 AS DOUBLE PRECISION) * "IL"."Feature_19" + CAST(-2.522466 AS DOUBLE PRECISION) * "IL"."Feature_20" + CAST(-1.548047 AS DOUBLE PRECISION) * "IL"."Feature_21" + CAST(-0.9854772 AS DOUBLE PRECISION) * "IL"."Feature_22" + CAST(0.08352618 AS DOUBLE PRECISION) * "IL"."Feature_23" + CAST(-0.2168024 AS DOUBLE PRECISION) * "IL"."Feature_24" + CAST(0.2392769 AS DOUBLE PRECISION) * "IL"."Feature_25" + CAST(0.8710448 AS DOUBLE PRECISION) * "IL"."Feature_26" + CAST(-0.2515878 AS DOUBLE PRECISION) * "IL"."Feature_27" + CAST(-1.25337 AS DOUBLE PRECISION) * "IL"."Feature_28" + CAST(-1.472078 AS DOUBLE PRECISION) * "IL"."Feature_29" + CAST(0.3142015 AS DOUBLE PRECISION) * "IL"."Feature_30" + CAST(-0.6733663 AS DOUBLE PRECISION) * "IL"."Feature_31" + CAST(-0.6754552 AS DOUBLE PRECISION) * "IL"."Feature_32" + CAST(0.2420203 AS DOUBLE PRECISION) * "IL"."Feature_33" + CAST(-0.05100433 AS DOUBLE PRECISION) * "IL"."Feature_34" + CAST(0.00881092 AS DOUBLE PRECISION) * "IL"."Feature_35" + CAST(-1.982212 AS DOUBLE PRECISION) * "IL"."Feature_36" + CAST(-0.1088226 AS DOUBLE PRECISION) * "IL"."Feature_37" + CAST(0.2974082 AS DOUBLE PRECISION) * "IL"."Feature_38" + CAST(-0.05495163 AS DOUBLE PRECISION) * "IL"."Feature_39" + CAST(0.4533121 AS DOUBLE PRECISION) * "IL"."Feature_40" + CAST(0.3865451 AS DOUBLE PRECISION) * "IL"."Feature_41" + CAST(0.2655257 AS DOUBLE PRECISION) * "IL"."Feature_42" + CAST(-0.4333413 AS DOUBLE PRECISION) * "IL"."Feature_43" + CAST(-0.05223507 AS DOUBLE PRECISION) * "IL"."Feature_44" + CAST(-0.1989532 AS DOUBLE PRECISION) * "IL"."Feature_45" + CAST(0.5125781 AS DOUBLE PRECISION) * "IL"."Feature_46" + CAST(0.2940957 AS DOUBLE PRECISION) * "IL"."Feature_47" + CAST(-0.4596417 AS DOUBLE PRECISION) * "IL"."Feature_48" + CAST(0.5729962 AS DOUBLE PRECISION) * "IL"."Feature_49" + CAST(0.9590949 AS DOUBLE PRECISION) * "IL"."Feature_50" + CAST(-0.1278273 AS DOUBLE PRECISION) * "IL"."Feature_51" + CAST(-0.2051397 AS DOUBLE PRECISION) * "IL"."Feature_52" + CAST(0.9662837 AS DOUBLE PRECISION) * "IL"."Feature_53" + CAST(-0.2255851 AS DOUBLE PRECISION) * "IL"."Feature_54" + CAST(0.5947291 AS DOUBLE PRECISION) * "IL"."Feature_55" + CAST(0.0697162 AS DOUBLE PRECISION) * "IL"."Feature_56" + CAST(0.5393464 AS DOUBLE PRECISION) * "IL"."Feature_57" + CAST(-0.1364074 AS DOUBLE PRECISION) * "IL"."Feature_58" + CAST(0.1220268 AS DOUBLE PRECISION) * "IL"."Feature_59" + CAST(1.673417 AS DOUBLE PRECISION) * "IL"."Feature_60" + CAST(0.04377357 AS DOUBLE PRECISION) * "IL"."Feature_61" + CAST(0.211893 AS DOUBLE PRECISION) * "IL"."Feature_62" + CAST(-0.3191219 AS DOUBLE PRECISION) * "IL"."Feature_63" + CAST(-0.5484172 AS DOUBLE PRECISION) AS "NEUR_1_12" 
FROM "IL"), 
"HL_1_logistic" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_1")))) AS "NEUR_1_1", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_2")))) AS "NEUR_1_2", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_3")))) AS "NEUR_1_3", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_4")))) AS "NEUR_1_4", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_5")))) AS "NEUR_1_5", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_6")))) AS "NEUR_1_6", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_7")))) AS "NEUR_1_7", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_8")))) AS "NEUR_1_8", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_9")))) AS "NEUR_1_9", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_10")))) AS "NEUR_1_10", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_11")))) AS "NEUR_1_11", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_12")))) AS "NEUR_1_12" 
FROM "HL_BA_1"), 
"HL_1_logistic_1" AS 
(SELECT "HL_1_logistic"."KEY" AS "KEY", "HL_1_logistic"."NEUR_1_1" AS "NEUR_1_1", "HL_1_logistic"."NEUR_1_2" AS "NEUR_1_2", "HL_1_logistic"."NEUR_1_3" AS "NEUR_1_3", "HL_1_logistic"."NEUR_1_4" AS "NEUR_1_4", "HL_1_logistic"."NEUR_1_5" AS "NEUR_1_5", "HL_1_logistic"."NEUR_1_6" AS "NEUR_1_6", "HL_1_logistic"."NEUR_1_7" AS "NEUR_1_7", "HL_1_logistic"."NEUR_1_8" AS "NEUR_1_8", "HL_1_logistic"."NEUR_1_9" AS "NEUR_1_9", "HL_1_logistic"."NEUR_1_10" AS "NEUR_1_10", "HL_1_logistic"."NEUR_1_11" AS "NEUR_1_11", "HL_1_logistic"."NEUR_1_12" AS "NEUR_1_12" 
FROM "HL_1_logistic"), 
"OL_BA" AS 
(SELECT "HL_1_logistic_1"."KEY" AS "KEY", CAST(3.601407 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_1" + CAST(3.117079 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_2" + CAST(-3.357421 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_3" + CAST(-7.459874 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_4" + CAST(-0.7339235 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_5" + CAST(-0.5922934 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_6" + CAST(-2.951932 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_7" + CAST(3.613489 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_8" + CAST(-8.683574 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_9" + CAST(-2.344973 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_10" + CAST(1.803202 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_11" + CAST(2.273299 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_12" + CAST(3.925984 AS DOUBLE PRECISION) AS "NEUR_2_1", CAST(-1.926983 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_1" + CAST(-7.677443 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_2" + CAST(0.3702169 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_3" + CAST(4.747473 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_4" + CAST(1.911818 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_5" + CAST(-0.333343 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_6" + CAST(3.476955 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_7" + CAST(-0.9509703 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_8" + CAST(5.303023 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_9" + CAST(1.025239 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_10" + CAST(-4.833452 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_11" + CAST(-1.403395 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_12" + CAST(-1.372961 AS DOUBLE PRECISION) AS "NEUR_2_2", CAST(1.26289 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_1" + CAST(2.749368 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_2" + CAST(-0.5368699 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_3" + CAST(-4.699792 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_4" + CAST(0.404294 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_5" + CAST(-0.1801041 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_6" + CAST(3.586795 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_7" + CAST(-8.867539 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_8" + CAST(0.2138309 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_9" + CAST(4.062001 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_10" + CAST(-1.317715 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_11" + CAST(-1.064039 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_12" + CAST(1.633819 AS DOUBLE PRECISION) AS "NEUR_2_3", CAST(-1.781197 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_1" + CAST(5.526102 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_2" + CAST(3.159288 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_3" + CAST(-2.058615 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_4" + CAST(-0.4134949 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_5" + CAST(0.1268939 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_6" + CAST(1.467214 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_7" + CAST(0.3811354 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_8" + CAST(1.939422 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_9" + CAST(-1.520259 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_10" + CAST(5.709524 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_11" + CAST(-0.5928259 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_12" + CAST(-1.281478 AS DOUBLE PRECISION) AS "NEUR_2_4", CAST(2.244591 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_1" + CAST(-1.437964 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_2" + CAST(-2.498093 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_3" + CAST(1.951861 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_4" + CAST(0.7529829 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_5" + CAST(-0.6413188 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_6" + CAST(-4.470242 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_7" + CAST(3.259294 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_8" + CAST(-1.951324 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_9" + CAST(0.3409975 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_10" + CAST(-3.120935 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_11" + CAST(-0.8489849 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_12" + CAST(2.935695 AS DOUBLE PRECISION) AS "NEUR_2_5", CAST(-0.5726353 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_1" + CAST(2.217535 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_2" + CAST(-2.415134 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_3" + CAST(-0.8041726 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_4" + CAST(-0.8664079 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_5" + CAST(-0.4060739 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_6" + CAST(-3.305079 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_7" + CAST(2.102438 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_8" + CAST(4.340138 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_9" + CAST(-3.288519 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_10" + CAST(7.742191 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_11" + CAST(4.039308 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_12" + CAST(-1.056113 AS DOUBLE PRECISION) AS "NEUR_2_6", CAST(-2.844116 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_1" + CAST(0.1378364 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_2" + CAST(1.272233 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_3" + CAST(10.69874 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_4" + CAST(-1.558126 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_5" + CAST(0.5287389 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_6" + CAST(7.281513 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_7" + CAST(-2.635917 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_8" + CAST(-10.58971 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_9" + CAST(0.4929028 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_10" + CAST(-3.392504 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_11" + CAST(2.291761 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_12" + CAST(-3.762014 AS DOUBLE PRECISION) AS "NEUR_2_7", CAST(1.05236 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_1" + CAST(-1.818582 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_2" + CAST(5.172026 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_3" + CAST(-0.6684396 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_4" + CAST(0.7175898 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_5" + CAST(-0.4097602 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_6" + CAST(-8.810497 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_7" + CAST(0.9563599 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_8" + CAST(2.611356 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_9" + CAST(1.280642 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_10" + CAST(-2.540315 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_11" + CAST(-0.848639 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_12" + CAST(2.047871 AS DOUBLE PRECISION) AS "NEUR_2_8", CAST(-1.79723 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_1" + CAST(-0.07606313 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_2" + CAST(-2.718045 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_3" + CAST(-1.717269 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_4" + CAST(-0.5408934 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_5" + CAST(0.2816078 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_6" + CAST(4.537476 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_7" + CAST(1.389188 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_8" + CAST(1.394827 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_9" + CAST(5.280138 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_10" + CAST(-3.496587 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_11" + CAST(-1.701968 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_12" + CAST(-2.096866 AS DOUBLE PRECISION) AS "NEUR_2_9", CAST(0.5580017 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_1" + CAST(-3.453584 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_2" + CAST(0.7631517 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_3" + CAST(-0.9497662 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_4" + CAST(0.2415387 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_5" + CAST(-0.2316102 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_6" + CAST(-0.5969423 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_7" + CAST(-0.1204698 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_8" + CAST(7.796012 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_9" + CAST(-4.573162 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_10" + CAST(1.432061 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_11" + CAST(-1.290802 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_12" + CAST(0.6580635 AS DOUBLE PRECISION) AS "NEUR_2_10" 
FROM "HL_1_logistic_1"), 
"OL_softmax" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_2_1" AS "NEUR_2_1", "OL_BA"."NEUR_2_2" AS "NEUR_2_2", "OL_BA"."NEUR_2_3" AS "NEUR_2_3", "OL_BA"."NEUR_2_4" AS "NEUR_2_4", "OL_BA"."NEUR_2_5" AS "NEUR_2_5", "OL_BA"."NEUR_2_6" AS "NEUR_2_6", "OL_BA"."NEUR_2_7" AS "NEUR_2_7", "OL_BA"."NEUR_2_8" AS "NEUR_2_8", "OL_BA"."NEUR_2_9" AS "NEUR_2_9", "OL_BA"."NEUR_2_10" AS "NEUR_2_10" 
FROM "OL_BA"), 
"OL_softmax_1" AS 
(SELECT "OL_softmax"."KEY" AS "KEY", "OL_softmax"."NEUR_2_1" AS "NEUR_2_1", "OL_softmax"."NEUR_2_2" AS "NEUR_2_2", "OL_softmax"."NEUR_2_3" AS "NEUR_2_3", "OL_softmax"."NEUR_2_4" AS "NEUR_2_4", "OL_softmax"."NEUR_2_5" AS "NEUR_2_5", "OL_softmax"."NEUR_2_6" AS "NEUR_2_6", "OL_softmax"."NEUR_2_7" AS "NEUR_2_7", "OL_softmax"."NEUR_2_8" AS "NEUR_2_8", "OL_softmax"."NEUR_2_9" AS "NEUR_2_9", "OL_softmax"."NEUR_2_10" AS "NEUR_2_10" 
FROM "OL_softmax"), 
orig_cte AS 
(SELECT "OL_softmax_1"."KEY" AS "KEY", "OL_softmax_1"."NEUR_2_1" AS "Score_0", "OL_softmax_1"."NEUR_2_2" AS "Score_1", "OL_softmax_1"."NEUR_2_3" AS "Score_2", "OL_softmax_1"."NEUR_2_4" AS "Score_3", "OL_softmax_1"."NEUR_2_5" AS "Score_4", "OL_softmax_1"."NEUR_2_6" AS "Score_5", "OL_softmax_1"."NEUR_2_7" AS "Score_6", "OL_softmax_1"."NEUR_2_8" AS "Score_7", "OL_softmax_1"."NEUR_2_9" AS "Score_8", "OL_softmax_1"."NEUR_2_10" AS "Score_9", CAST(NULL AS DOUBLE PRECISION) AS "Proba_0", CAST(NULL AS DOUBLE PRECISION) AS "Proba_1", CAST(NULL AS DOUBLE PRECISION) AS "Proba_2", CAST(NULL AS DOUBLE PRECISION) AS "Proba_3", CAST(NULL AS DOUBLE PRECISION) AS "Proba_4", CAST(NULL AS DOUBLE PRECISION) AS "Proba_5", CAST(NULL AS DOUBLE PRECISION) AS "Proba_6", CAST(NULL AS DOUBLE PRECISION) AS "Proba_7", CAST(NULL AS DOUBLE PRECISION) AS "Proba_8", CAST(NULL AS DOUBLE PRECISION) AS "Proba_9", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_1", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_2", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_3", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_4", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_5", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_6", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_7", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_8", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE PRECISION) AS "DecisionProba" 
FROM "OL_softmax_1"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu."class" AS "class", scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS "class", orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS "class", orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS "class", orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS "class", orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS "class", orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS "class", orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS "class", orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS "class", orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS "class", orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS "class", orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_0" - score_max."max_Score")) AS "exp_delta_Score_0", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_1" - score_max."max_Score")) AS "exp_delta_Score_1", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_2" - score_max."max_Score")) AS "exp_delta_Score_2", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_3" - score_max."max_Score")) AS "exp_delta_Score_3", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_4" - score_max."max_Score")) AS "exp_delta_Score_4", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_5" - score_max."max_Score")) AS "exp_delta_Score_5", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_6" - score_max."max_Score")) AS "exp_delta_Score_6", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_7" - score_max."max_Score")) AS "exp_delta_Score_7", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_8" - score_max."max_Score")) AS "exp_delta_Score_8", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_9" - score_max."max_Score")) AS "exp_delta_Score_9" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu."class" AS "class", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS "class", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS "class", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS "class", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS "class", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 4 AS "class", score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 5 AS "class", score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 6 AS "class", score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 7 AS "class", score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 8 AS "class", score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 9 AS "class", score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Score_4" AS "Score_4", score_soft_max_deltas."Score_5" AS "Score_5", score_soft_max_deltas."Score_6" AS "Score_6", score_soft_max_deltas."Score_7" AS "Score_7", score_soft_max_deltas."Score_8" AS "Score_8", score_soft_max_deltas."Score_9" AS "Score_9", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."Proba_4" AS "Proba_4", score_soft_max_deltas."Proba_5" AS "Proba_5", score_soft_max_deltas."Proba_6" AS "Proba_6", score_soft_max_deltas."Proba_7" AS "Proba_7", score_soft_max_deltas."Proba_8" AS "Proba_8", score_soft_max_deltas."Proba_9" AS "Proba_9", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."LogProba_4" AS "LogProba_4", score_soft_max_deltas."LogProba_5" AS "LogProba_5", score_soft_max_deltas."LogProba_6" AS "LogProba_6", score_soft_max_deltas."LogProba_7" AS "LogProba_7", score_soft_max_deltas."LogProba_8" AS "LogProba_8", score_soft_max_deltas."LogProba_9" AS "LogProba_9", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score_9", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union."class" AS "class", score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3", soft_max_comp."SoftProba_4" AS "SoftProba_4", soft_max_comp."SoftProba_5" AS "SoftProba_5", soft_max_comp."SoftProba_6" AS "SoftProba_6", soft_max_comp."SoftProba_7" AS "SoftProba_7", soft_max_comp."SoftProba_8" AS "SoftProba_8", soft_max_comp."SoftProba_9" AS "SoftProba_9" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", max(union_with_max."class") AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3", score_soft_max."exp_delta_Score_4" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_4", score_soft_max."exp_delta_Score_5" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_5", score_soft_max."exp_delta_Score_6" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_6", score_soft_max."exp_delta_Score_7" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_7", score_soft_max."exp_delta_Score_8" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_8", score_soft_max."exp_delta_Score_9" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_9" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_2", CAST(NULL AS DOUBLE PRECISION) AS "Score_3", CAST(NULL AS DOUBLE PRECISION) AS "Score_4", CAST(NULL AS DOUBLE PRECISION) AS "Score_5", CAST(NULL AS DOUBLE PRECISION) AS "Score_6", CAST(NULL AS DOUBLE PRECISION) AS "Score_7", CAST(NULL AS DOUBLE PRECISION) AS "Score_8", CAST(NULL AS DOUBLE PRECISION) AS "Score_9", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", arg_max_cte."SoftProba_4" AS "Proba_4", arg_max_cte."SoftProba_5" AS "Proba_5", arg_max_cte."SoftProba_6" AS "Proba_6", arg_max_cte."SoftProba_7" AS "Proba_7", arg_max_cte."SoftProba_8" AS "Proba_8", arg_max_cte."SoftProba_9" AS "Proba_9", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", CASE WHEN (arg_max_cte."SoftProba_4" IS NULL OR arg_max_cte."SoftProba_4" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_4") ELSE -1.79769313486231e+308 END AS "LogProba_4", CASE WHEN (arg_max_cte."SoftProba_5" IS NULL OR arg_max_cte."SoftProba_5" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_5") ELSE -1.79769313486231e+308 END AS "LogProba_5", CASE WHEN (arg_max_cte."SoftProba_6" IS NULL OR arg_max_cte."SoftProba_6" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_6") ELSE -1.79769313486231e+308 END AS "LogProba_6", CASE WHEN (arg_max_cte."SoftProba_7" IS NULL OR arg_max_cte."SoftProba_7" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_7") ELSE -1.79769313486231e+308 END AS "LogProba_7", CASE WHEN (arg_max_cte."SoftProba_8" IS NULL OR arg_max_cte."SoftProba_8" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_8") ELSE -1.79769313486231e+308 END AS "LogProba_8", CASE WHEN (arg_max_cte."SoftProba_9" IS NULL OR arg_max_cte."SoftProba_9" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_9") ELSE -1.79769313486231e+308 END AS "LogProba_9", arg_max_cte."arg_max_Score" AS "Decision", greatest(arg_max_cte."SoftProba_0", arg_max_cte."SoftProba_1", arg_max_cte."SoftProba_2", arg_max_cte."SoftProba_3", arg_max_cte."SoftProba_4", arg_max_cte."SoftProba_5", arg_max_cte."SoftProba_6", arg_max_cte."SoftProba_7", arg_max_cte."SoftProba_8", arg_max_cte."SoftProba_9") AS "DecisionProba" 
FROM arg_max_cte