-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretClassifier_nnet
-- Dataset : FourClass_100
-- Database : firebird


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS DOUBLE PRECISION) AS "Feature_0", CAST("ADS"."Feature_1" AS DOUBLE PRECISION) AS "Feature_1", CAST("ADS"."Feature_2" AS DOUBLE PRECISION) AS "Feature_2", CAST("ADS"."Feature_3" AS DOUBLE PRECISION) AS "Feature_3", CAST("ADS"."Feature_4" AS DOUBLE PRECISION) AS "Feature_4", CAST("ADS"."Feature_5" AS DOUBLE PRECISION) AS "Feature_5", CAST("ADS"."Feature_6" AS DOUBLE PRECISION) AS "Feature_6", CAST("ADS"."Feature_7" AS DOUBLE PRECISION) AS "Feature_7", CAST("ADS"."Feature_8" AS DOUBLE PRECISION) AS "Feature_8", CAST("ADS"."Feature_9" AS DOUBLE PRECISION) AS "Feature_9", CAST("ADS"."Feature_10" AS DOUBLE PRECISION) AS "Feature_10", CAST("ADS"."Feature_11" AS DOUBLE PRECISION) AS "Feature_11", CAST("ADS"."Feature_12" AS DOUBLE PRECISION) AS "Feature_12", CAST("ADS"."Feature_13" AS DOUBLE PRECISION) AS "Feature_13", CAST("ADS"."Feature_14" AS DOUBLE PRECISION) AS "Feature_14", CAST("ADS"."Feature_15" AS DOUBLE PRECISION) AS "Feature_15", CAST("ADS"."Feature_16" AS DOUBLE PRECISION) AS "Feature_16", CAST("ADS"."Feature_17" AS DOUBLE PRECISION) AS "Feature_17", CAST("ADS"."Feature_18" AS DOUBLE PRECISION) AS "Feature_18", CAST("ADS"."Feature_19" AS DOUBLE PRECISION) AS "Feature_19", CAST("ADS"."Feature_20" AS DOUBLE PRECISION) AS "Feature_20", CAST("ADS"."Feature_21" AS DOUBLE PRECISION) AS "Feature_21", CAST("ADS"."Feature_22" AS DOUBLE PRECISION) AS "Feature_22", CAST("ADS"."Feature_23" AS DOUBLE PRECISION) AS "Feature_23", CAST("ADS"."Feature_24" AS DOUBLE PRECISION) AS "Feature_24", CAST("ADS"."Feature_25" AS DOUBLE PRECISION) AS "Feature_25", CAST("ADS"."Feature_26" AS DOUBLE PRECISION) AS "Feature_26", CAST("ADS"."Feature_27" AS DOUBLE PRECISION) AS "Feature_27", CAST("ADS"."Feature_28" AS DOUBLE PRECISION) AS "Feature_28", CAST("ADS"."Feature_29" AS DOUBLE PRECISION) AS "Feature_29", CAST("ADS"."Feature_30" AS DOUBLE PRECISION) AS "Feature_30", CAST("ADS"."Feature_31" AS DOUBLE PRECISION) AS "Feature_31", CAST("ADS"."Feature_32" AS DOUBLE PRECISION) AS "Feature_32", CAST("ADS"."Feature_33" AS DOUBLE PRECISION) AS "Feature_33", CAST("ADS"."Feature_34" AS DOUBLE PRECISION) AS "Feature_34", CAST("ADS"."Feature_35" AS DOUBLE PRECISION) AS "Feature_35", CAST("ADS"."Feature_36" AS DOUBLE PRECISION) AS "Feature_36", CAST("ADS"."Feature_37" AS DOUBLE PRECISION) AS "Feature_37", CAST("ADS"."Feature_38" AS DOUBLE PRECISION) AS "Feature_38", CAST("ADS"."Feature_39" AS DOUBLE PRECISION) AS "Feature_39", CAST("ADS"."Feature_40" AS DOUBLE PRECISION) AS "Feature_40", CAST("ADS"."Feature_41" AS DOUBLE PRECISION) AS "Feature_41", CAST("ADS"."Feature_42" AS DOUBLE PRECISION) AS "Feature_42", CAST("ADS"."Feature_43" AS DOUBLE PRECISION) AS "Feature_43", CAST("ADS"."Feature_44" AS DOUBLE PRECISION) AS "Feature_44", CAST("ADS"."Feature_45" AS DOUBLE PRECISION) AS "Feature_45", CAST("ADS"."Feature_46" AS DOUBLE PRECISION) AS "Feature_46", CAST("ADS"."Feature_47" AS DOUBLE PRECISION) AS "Feature_47", CAST("ADS"."Feature_48" AS DOUBLE PRECISION) AS "Feature_48", CAST("ADS"."Feature_49" AS DOUBLE PRECISION) AS "Feature_49", CAST("ADS"."Feature_50" AS DOUBLE PRECISION) AS "Feature_50", CAST("ADS"."Feature_51" AS DOUBLE PRECISION) AS "Feature_51", CAST("ADS"."Feature_52" AS DOUBLE PRECISION) AS "Feature_52", CAST("ADS"."Feature_53" AS DOUBLE PRECISION) AS "Feature_53", CAST("ADS"."Feature_54" AS DOUBLE PRECISION) AS "Feature_54", CAST("ADS"."Feature_55" AS DOUBLE PRECISION) AS "Feature_55", CAST("ADS"."Feature_56" AS DOUBLE PRECISION) AS "Feature_56", CAST("ADS"."Feature_57" AS DOUBLE PRECISION) AS "Feature_57", CAST("ADS"."Feature_58" AS DOUBLE PRECISION) AS "Feature_58", CAST("ADS"."Feature_59" AS DOUBLE PRECISION) AS "Feature_59", CAST("ADS"."Feature_60" AS DOUBLE PRECISION) AS "Feature_60", CAST("ADS"."Feature_61" AS DOUBLE PRECISION) AS "Feature_61", CAST("ADS"."Feature_62" AS DOUBLE PRECISION) AS "Feature_62", CAST("ADS"."Feature_63" AS DOUBLE PRECISION) AS "Feature_63", CAST("ADS"."Feature_64" AS DOUBLE PRECISION) AS "Feature_64", CAST("ADS"."Feature_65" AS DOUBLE PRECISION) AS "Feature_65", CAST("ADS"."Feature_66" AS DOUBLE PRECISION) AS "Feature_66", CAST("ADS"."Feature_67" AS DOUBLE PRECISION) AS "Feature_67", CAST("ADS"."Feature_68" AS DOUBLE PRECISION) AS "Feature_68", CAST("ADS"."Feature_69" AS DOUBLE PRECISION) AS "Feature_69", CAST("ADS"."Feature_70" AS DOUBLE PRECISION) AS "Feature_70", CAST("ADS"."Feature_71" AS DOUBLE PRECISION) AS "Feature_71", CAST("ADS"."Feature_72" AS DOUBLE PRECISION) AS "Feature_72", CAST("ADS"."Feature_73" AS DOUBLE PRECISION) AS "Feature_73", CAST("ADS"."Feature_74" AS DOUBLE PRECISION) AS "Feature_74", CAST("ADS"."Feature_75" AS DOUBLE PRECISION) AS "Feature_75", CAST("ADS"."Feature_76" AS DOUBLE PRECISION) AS "Feature_76", CAST("ADS"."Feature_77" AS DOUBLE PRECISION) AS "Feature_77", CAST("ADS"."Feature_78" AS DOUBLE PRECISION) AS "Feature_78", CAST("ADS"."Feature_79" AS DOUBLE PRECISION) AS "Feature_79", CAST("ADS"."Feature_80" AS DOUBLE PRECISION) AS "Feature_80", CAST("ADS"."Feature_81" AS DOUBLE PRECISION) AS "Feature_81", CAST("ADS"."Feature_82" AS DOUBLE PRECISION) AS "Feature_82", CAST("ADS"."Feature_83" AS DOUBLE PRECISION) AS "Feature_83", CAST("ADS"."Feature_84" AS DOUBLE PRECISION) AS "Feature_84", CAST("ADS"."Feature_85" AS DOUBLE PRECISION) AS "Feature_85", CAST("ADS"."Feature_86" AS DOUBLE PRECISION) AS "Feature_86", CAST("ADS"."Feature_87" AS DOUBLE PRECISION) AS "Feature_87", CAST("ADS"."Feature_88" AS DOUBLE PRECISION) AS "Feature_88", CAST("ADS"."Feature_89" AS DOUBLE PRECISION) AS "Feature_89", CAST("ADS"."Feature_90" AS DOUBLE PRECISION) AS "Feature_90", CAST("ADS"."Feature_91" AS DOUBLE PRECISION) AS "Feature_91", CAST("ADS"."Feature_92" AS DOUBLE PRECISION) AS "Feature_92", CAST("ADS"."Feature_93" AS DOUBLE PRECISION) AS "Feature_93", CAST("ADS"."Feature_94" AS DOUBLE PRECISION) AS "Feature_94", CAST("ADS"."Feature_95" AS DOUBLE PRECISION) AS "Feature_95", CAST("ADS"."Feature_96" AS DOUBLE PRECISION) AS "Feature_96", CAST("ADS"."Feature_97" AS DOUBLE PRECISION) AS "Feature_97", CAST("ADS"."Feature_98" AS DOUBLE PRECISION) AS "Feature_98", CAST("ADS"."Feature_99" AS DOUBLE PRECISION) AS "Feature_99" 
FROM "FourClass_100" AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -0.03528055 * "IL"."Feature_0" + 0.3953982 * "IL"."Feature_1" + 0.06905435 * "IL"."Feature_2" + 0.2146084 * "IL"."Feature_3" + 0.09914489 * "IL"."Feature_4" + -0.6974119 * "IL"."Feature_5" + 0.522522 * "IL"."Feature_6" + -0.2396953 * "IL"."Feature_7" + 0.5252595 * "IL"."Feature_8" + -0.2645011 * "IL"."Feature_9" + 0.7461757 * "IL"."Feature_10" + -1.027328 * "IL"."Feature_11" + -1.171261 * "IL"."Feature_12" + -0.5915095 * "IL"."Feature_13" + 0.3945896 * "IL"."Feature_14" + 0.6465978 * "IL"."Feature_15" + 0.01695022 * "IL"."Feature_16" + 0.2227125 * "IL"."Feature_17" + -0.04218577 * "IL"."Feature_18" + 0.3981626 * "IL"."Feature_19" + -1.865655 * "IL"."Feature_20" + 0.01291921 * "IL"."Feature_21" + 0.5283264 * "IL"."Feature_22" + -0.2762893 * "IL"."Feature_23" + 0.4712103 * "IL"."Feature_24" + -0.9079468 * "IL"."Feature_25" + -0.2259861 * "IL"."Feature_26" + 0.2368567 * "IL"."Feature_27" + -0.6858883 * "IL"."Feature_28" + -1.865663 * "IL"."Feature_29" + -0.3293998 * "IL"."Feature_30" + -0.728488 * "IL"."Feature_31" + -0.6639273 * "IL"."Feature_32" + 0.1505205 * "IL"."Feature_33" + -0.3602653 * "IL"."Feature_34" + 0.4888078 * "IL"."Feature_35" + 0.1772087 * "IL"."Feature_36" + 0.3893697 * "IL"."Feature_37" + -0.7081555 * "IL"."Feature_38" + 0.3924996 * "IL"."Feature_39" + -0.1214559 * "IL"."Feature_40" + -0.4677803 * "IL"."Feature_41" + 0.4967533 * "IL"."Feature_42" + -0.4298354 * "IL"."Feature_43" + 0.8715847 * "IL"."Feature_44" + 0.1804606 * "IL"."Feature_45" + -0.3978709 * "IL"."Feature_46" + -0.520181 * "IL"."Feature_47" + -0.7547306 * "IL"."Feature_48" + -0.2170036 * "IL"."Feature_49" + 0.4162456 * "IL"."Feature_50" + -1.305993 * "IL"."Feature_51" + 0.6735307 * "IL"."Feature_52" + -1.453632 * "IL"."Feature_53" + -0.6450512 * "IL"."Feature_54" + 0.2716491 * "IL"."Feature_55" + 2.225393 * "IL"."Feature_56" + 0.05528733 * "IL"."Feature_57" + -0.4803319 * "IL"."Feature_58" + 0.2746279 * "IL"."Feature_59" + -0.0247408 * "IL"."Feature_60" + 0.1855299 * "IL"."Feature_61" + 0.3890126 * "IL"."Feature_62" + -0.5007837 * "IL"."Feature_63" + 0.7434505 * "IL"."Feature_64" + -0.3634418 * "IL"."Feature_65" + -0.2038642 * "IL"."Feature_66" + -0.9984813 * "IL"."Feature_67" + 0.5409643 * "IL"."Feature_68" + -0.8893606 * "IL"."Feature_69" + -1.037766 * "IL"."Feature_70" + -0.2965704 * "IL"."Feature_71" + -0.74559 * "IL"."Feature_72" + -0.8231012 * "IL"."Feature_73" + 0.3478291 * "IL"."Feature_74" + -0.06628217 * "IL"."Feature_75" + -1.003656 * "IL"."Feature_76" + 0.4747524 * "IL"."Feature_77" + 2.229586 * "IL"."Feature_78" + -0.06629179 * "IL"."Feature_79" + 0.6065743 * "IL"."Feature_80" + 0.4073839 * "IL"."Feature_81" + -0.2332459 * "IL"."Feature_82" + 0.3972419 * "IL"."Feature_83" + -0.489584 * "IL"."Feature_84" + 0.1981595 * "IL"."Feature_85" + -0.2912999 * "IL"."Feature_86" + -0.3191965 * "IL"."Feature_87" + 0.153238 * "IL"."Feature_88" + -0.5677907 * "IL"."Feature_89" + 0.4878862 * "IL"."Feature_90" + -0.6031706 * "IL"."Feature_91" + -1.299662 * "IL"."Feature_92" + 0.6016612 * "IL"."Feature_93" + 0.8452223 * "IL"."Feature_94" + -0.1830143 * "IL"."Feature_95" + -0.365046 * "IL"."Feature_96" + 0.2226077 * "IL"."Feature_97" + 0.2751997 * "IL"."Feature_98" + 0.4216116 * "IL"."Feature_99" + -0.5922715 AS "NEUR_1_1", 0.7042706 * "IL"."Feature_0" + 0.2166251 * "IL"."Feature_1" + 0.551622 * "IL"."Feature_2" + 0.6414469 * "IL"."Feature_3" + 0.4535762 * "IL"."Feature_4" + -1.549912 * "IL"."Feature_5" + -0.4420346 * "IL"."Feature_6" + -0.415524 * "IL"."Feature_7" + -0.2450191 * "IL"."Feature_8" + 0.2732123 * "IL"."Feature_9" + -0.07224957 * "IL"."Feature_10" + 0.3637652 * "IL"."Feature_11" + 0.9175639 * "IL"."Feature_12" + 0.08855038 * "IL"."Feature_13" + 0.2798826 * "IL"."Feature_14" + -0.1400742 * "IL"."Feature_15" + 0.2824762 * "IL"."Feature_16" + 0.2205328 * "IL"."Feature_17" + -0.7349204 * "IL"."Feature_18" + -0.3332482 * "IL"."Feature_19" + 0.9693561 * "IL"."Feature_20" + -0.7572649 * "IL"."Feature_21" + 1.401241 * "IL"."Feature_22" + 0.7591361 * "IL"."Feature_23" + 0.7385047 * "IL"."Feature_24" + 0.690908 * "IL"."Feature_25" + -1.176501 * "IL"."Feature_26" + 0.3544989 * "IL"."Feature_27" + -0.5983248 * "IL"."Feature_28" + 0.2660798 * "IL"."Feature_29" + -0.4509378 * "IL"."Feature_30" + 0.09503612 * "IL"."Feature_31" + -0.03568428 * "IL"."Feature_32" + 0.2555931 * "IL"."Feature_33" + 0.53794 * "IL"."Feature_34" + 1.285263 * "IL"."Feature_35" + -0.2264645 * "IL"."Feature_36" + 0.0964037 * "IL"."Feature_37" + 0.1415525 * "IL"."Feature_38" + 1.635332 * "IL"."Feature_39" + -1.750507 * "IL"."Feature_40" + 0.1666827 * "IL"."Feature_41" + -0.09690706 * "IL"."Feature_42" + -0.08942252 * "IL"."Feature_43" + 1.810776 * "IL"."Feature_44" + -0.3773492 * "IL"."Feature_45" + -0.3319449 * "IL"."Feature_46" + -0.9356065 * "IL"."Feature_47" + -1.079733 * "IL"."Feature_48" + -0.9012439 * "IL"."Feature_49" + -2.071297 * "IL"."Feature_50" + -0.1164566 * "IL"."Feature_51" + -0.470072 * "IL"."Feature_52" + 0.195947 * "IL"."Feature_53" + 1.002761 * "IL"."Feature_54" + 0.59653 * "IL"."Feature_55" + 2.631078 * "IL"."Feature_56" + -1.018855 * "IL"."Feature_57" + 2.285702 * "IL"."Feature_58" + 0.698384 * "IL"."Feature_59" + 0.5862187 * "IL"."Feature_60" + 0.4767997 * "IL"."Feature_61" + 0.104023 * "IL"."Feature_62" + -0.1496334 * "IL"."Feature_63" + 0.6019896 * "IL"."Feature_64" + -0.374708 * "IL"."Feature_65" + 0.7092503 * "IL"."Feature_66" + 0.6591789 * "IL"."Feature_67" + 0.3161903 * "IL"."Feature_68" + -0.05242462 * "IL"."Feature_69" + 0.1789103 * "IL"."Feature_70" + 0.00701879 * "IL"."Feature_71" + 0.5970294 * "IL"."Feature_72" + -0.9945253 * "IL"."Feature_73" + -0.6993884 * "IL"."Feature_74" + 1.193235 * "IL"."Feature_75" + -0.4765274 * "IL"."Feature_76" + 0.6536275 * "IL"."Feature_77" + -1.315706 * "IL"."Feature_78" + -0.06760651 * "IL"."Feature_79" + 0.006582047 * "IL"."Feature_80" + -1.158543 * "IL"."Feature_81" + -0.6814663 * "IL"."Feature_82" + 0.2273465 * "IL"."Feature_83" + -0.8142366 * "IL"."Feature_84" + -0.359662 * "IL"."Feature_85" + -1.287225 * "IL"."Feature_86" + 0.2992393 * "IL"."Feature_87" + 0.4107345 * "IL"."Feature_88" + 0.6533716 * "IL"."Feature_89" + -0.3466787 * "IL"."Feature_90" + -0.8736299 * "IL"."Feature_91" + 0.6316223 * "IL"."Feature_92" + -0.795056 * "IL"."Feature_93" + -0.1442296 * "IL"."Feature_94" + -0.4501959 * "IL"."Feature_95" + -0.0319644 * "IL"."Feature_96" + 1.559779 * "IL"."Feature_97" + -0.2848353 * "IL"."Feature_98" + -4.259332 * "IL"."Feature_99" + -0.4441794 AS "NEUR_1_2", 0.06498109 * "IL"."Feature_0" + 0.3231966 * "IL"."Feature_1" + 0.69847 * "IL"."Feature_2" + 1.656896 * "IL"."Feature_3" + 0.04526548 * "IL"."Feature_4" + 0.3744184 * "IL"."Feature_5" + 1.081144 * "IL"."Feature_6" + -0.4156213 * "IL"."Feature_7" + -1.041882 * "IL"."Feature_8" + 1.85398 * "IL"."Feature_9" + -0.06228618 * "IL"."Feature_10" + 0.1465637 * "IL"."Feature_11" + 0.7110204 * "IL"."Feature_12" + 0.3492412 * "IL"."Feature_13" + -2.660647 * "IL"."Feature_14" + -1.536103 * "IL"."Feature_15" + 0.2845032 * "IL"."Feature_16" + 0.4620954 * "IL"."Feature_17" + -2.183693 * "IL"."Feature_18" + -2.288625 * "IL"."Feature_19" + -0.4532734 * "IL"."Feature_20" + -0.1197901 * "IL"."Feature_21" + -0.3088169 * "IL"."Feature_22" + -1.004089 * "IL"."Feature_23" + -0.05769204 * "IL"."Feature_24" + -0.427264 * "IL"."Feature_25" + 0.2191606 * "IL"."Feature_26" + 1.185724 * "IL"."Feature_27" + 0.08438882 * "IL"."Feature_28" + -1.151817 * "IL"."Feature_29" + 0.5723883 * "IL"."Feature_30" + -0.2444547 * "IL"."Feature_31" + 0.9584276 * "IL"."Feature_32" + 1.719215 * "IL"."Feature_33" + 0.3446991 * "IL"."Feature_34" + -0.09108778 * "IL"."Feature_35" + -0.9383174 * "IL"."Feature_36" + -0.07011688 * "IL"."Feature_37" + 2.105044 * "IL"."Feature_38" + 0.1778589 * "IL"."Feature_39" + 0.5776804 * "IL"."Feature_40" + 0.1272546 * "IL"."Feature_41" + 0.1684488 * "IL"."Feature_42" + -0.7143565 * "IL"."Feature_43" + -0.6509421 * "IL"."Feature_44" + -0.8506045 * "IL"."Feature_45" + 0.417329 * "IL"."Feature_46" + 1.433776 * "IL"."Feature_47" + 1.02919 * "IL"."Feature_48" + -0.1086527 * "IL"."Feature_49" + -1.68024 * "IL"."Feature_50" + -1.208538 * "IL"."Feature_51" + -0.9070227 * "IL"."Feature_52" + 0.5848497 * "IL"."Feature_53" + -2.087609 * "IL"."Feature_54" + 0.5771368 * "IL"."Feature_55" + -1.404382 * "IL"."Feature_56" + 0.7815615 * "IL"."Feature_57" + 0.5818241 * "IL"."Feature_58" + -1.183827 * "IL"."Feature_59" + 0.7870941 * "IL"."Feature_60" + -1.124288 * "IL"."Feature_61" + -0.4429938 * "IL"."Feature_62" + 0.2630589 * "IL"."Feature_63" + 1.669711 * "IL"."Feature_64" + 1.040147 * "IL"."Feature_65" + 1.432981 * "IL"."Feature_66" + -0.1887605 * "IL"."Feature_67" + -0.7681465 * "IL"."Feature_68" + -0.3551774 * "IL"."Feature_69" + 0.7728546 * "IL"."Feature_70" + -0.7076951 * "IL"."Feature_71" + 1.011786 * "IL"."Feature_72" + -0.7085049 * "IL"."Feature_73" + -0.1294596 * "IL"."Feature_74" + -1.000459 * "IL"."Feature_75" + 0.9207257 * "IL"."Feature_76" + 0.02405366 * "IL"."Feature_77" + -0.7856519 * "IL"."Feature_78" + 1.050184 * "IL"."Feature_79" + -1.570674 * "IL"."Feature_80" + 0.2970485 * "IL"."Feature_81" + 0.9374075 * "IL"."Feature_82" + 0.08007358 * "IL"."Feature_83" + 0.4669511 * "IL"."Feature_84" + 0.3060847 * "IL"."Feature_85" + 0.9263618 * "IL"."Feature_86" + 0.7961273 * "IL"."Feature_87" + 0.4738463 * "IL"."Feature_88" + -0.6903381 * "IL"."Feature_89" + 0.3326368 * "IL"."Feature_90" + 1.152523 * "IL"."Feature_91" + 1.717871 * "IL"."Feature_92" + -0.406786 * "IL"."Feature_93" + 0.9634361 * "IL"."Feature_94" + -0.5446149 * "IL"."Feature_95" + 0.01817964 * "IL"."Feature_96" + 1.279855 * "IL"."Feature_97" + -0.9342331 * "IL"."Feature_98" + 0.5935715 * "IL"."Feature_99" + -0.415191 AS "NEUR_1_3", 0.3246381 * "IL"."Feature_0" + 0.6214294 * "IL"."Feature_1" + 1.349772 * "IL"."Feature_2" + 1.131861 * "IL"."Feature_3" + -0.6711315 * "IL"."Feature_4" + -0.7239591 * "IL"."Feature_5" + -0.4179391 * "IL"."Feature_6" + 0.9224021 * "IL"."Feature_7" + -0.3204392 * "IL"."Feature_8" + 0.01625238 * "IL"."Feature_9" + 0.1322347 * "IL"."Feature_10" + 0.1760382 * "IL"."Feature_11" + -0.0287148 * "IL"."Feature_12" + -0.2796378 * "IL"."Feature_13" + -0.3452749 * "IL"."Feature_14" + -0.2546417 * "IL"."Feature_15" + -0.5669603 * "IL"."Feature_16" + 0.08034622 * "IL"."Feature_17" + 0.2770507 * "IL"."Feature_18" + 0.03439993 * "IL"."Feature_19" + 0.4092508 * "IL"."Feature_20" + 0.0896977 * "IL"."Feature_21" + 0.06232788 * "IL"."Feature_22" + -0.8946613 * "IL"."Feature_23" + 0.4043818 * "IL"."Feature_24" + -0.1588274 * "IL"."Feature_25" + 0.06668181 * "IL"."Feature_26" + -1.012017 * "IL"."Feature_27" + -0.2689076 * "IL"."Feature_28" + -0.5513558 * "IL"."Feature_29" + -0.2950744 * "IL"."Feature_30" + 0.1162812 * "IL"."Feature_31" + 0.2480537 * "IL"."Feature_32" + 0.7728873 * "IL"."Feature_33" + 0.02219294 * "IL"."Feature_34" + -0.7800897 * "IL"."Feature_35" + -0.05427566 * "IL"."Feature_36" + -0.3401544 * "IL"."Feature_37" + 0.3203899 * "IL"."Feature_38" + 1.322793 * "IL"."Feature_39" + -0.6305999 * "IL"."Feature_40" + -0.4258273 * "IL"."Feature_41" + 0.8273758 * "IL"."Feature_42" + -0.2103849 * "IL"."Feature_43" + 1.332008 * "IL"."Feature_44" + 0.429742 * "IL"."Feature_45" + -0.006886331 * "IL"."Feature_46" + -0.01547269 * "IL"."Feature_47" + 2.115092 * "IL"."Feature_48" + -0.2071031 * "IL"."Feature_49" + 0.2741952 * "IL"."Feature_50" + -0.6239112 * "IL"."Feature_51" + 0.2401762 * "IL"."Feature_52" + -0.3863416 * "IL"."Feature_53" + -0.04847277 * "IL"."Feature_54" + 0.7747116 * "IL"."Feature_55" + 0.4716097 * "IL"."Feature_56" + -0.4549077 * "IL"."Feature_57" + 0.06451392 * "IL"."Feature_58" + 0.6828428 * "IL"."Feature_59" + 0.7788765 * "IL"."Feature_60" + 0.7904215 * "IL"."Feature_61" + -0.2031699 * "IL"."Feature_62" + -0.9815765 * "IL"."Feature_63" + 0.2801673 * "IL"."Feature_64" + 0.9934741 * "IL"."Feature_65" + -0.454405 * "IL"."Feature_66" + -1.173863 * "IL"."Feature_67" + -0.6836993 * "IL"."Feature_68" + -1.043531 * "IL"."Feature_69" + -0.1497711 * "IL"."Feature_70" + -0.206098 * "IL"."Feature_71" + -0.8029748 * "IL"."Feature_72" + 0.854398 * "IL"."Feature_73" + 0.2221192 * "IL"."Feature_74" + -0.614723 * "IL"."Feature_75" + 0.2200285 * "IL"."Feature_76" + -0.81467 * "IL"."Feature_77" + -0.1957818 * "IL"."Feature_78" + 1.191081 * "IL"."Feature_79" + -1.064418 * "IL"."Feature_80" + -0.7848294 * "IL"."Feature_81" + 0.9276284 * "IL"."Feature_82" + -0.273778 * "IL"."Feature_83" + -0.177064 * "IL"."Feature_84" + 0.2965546 * "IL"."Feature_85" + -0.6439225 * "IL"."Feature_86" + -0.7950776 * "IL"."Feature_87" + -0.2407589 * "IL"."Feature_88" + 0.09237579 * "IL"."Feature_89" + -0.2035224 * "IL"."Feature_90" + -0.02425526 * "IL"."Feature_91" + 0.9782389 * "IL"."Feature_92" + 0.9373739 * "IL"."Feature_93" + 0.6198446 * "IL"."Feature_94" + -0.3277829 * "IL"."Feature_95" + -0.1240638 * "IL"."Feature_96" + 0.6948919 * "IL"."Feature_97" + 0.576805 * "IL"."Feature_98" + -3.333067 * "IL"."Feature_99" + -0.8217575 AS "NEUR_1_4", 0.1659697 * "IL"."Feature_0" + -0.798369 * "IL"."Feature_1" + 1.313805 * "IL"."Feature_2" + -0.2356552 * "IL"."Feature_3" + -0.8733662 * "IL"."Feature_4" + -0.1786753 * "IL"."Feature_5" + -0.808882 * "IL"."Feature_6" + 0.4010786 * "IL"."Feature_7" + 0.2893267 * "IL"."Feature_8" + 0.2084182 * "IL"."Feature_9" + -0.01090603 * "IL"."Feature_10" + 0.6456662 * "IL"."Feature_11" + -0.2307945 * "IL"."Feature_12" + 0.6083924 * "IL"."Feature_13" + -0.8904966 * "IL"."Feature_14" + -0.6875354 * "IL"."Feature_15" + 0.4752339 * "IL"."Feature_16" + 0.8411917 * "IL"."Feature_17" + 0.1362909 * "IL"."Feature_18" + 0.9411998 * "IL"."Feature_19" + 1.079501 * "IL"."Feature_20" + 1.206539 * "IL"."Feature_21" + 0.130797 * "IL"."Feature_22" + -0.4310234 * "IL"."Feature_23" + -0.1982507 * "IL"."Feature_24" + -0.8769586 * "IL"."Feature_25" + 0.09897907 * "IL"."Feature_26" + 1.266788 * "IL"."Feature_27" + -0.3599605 * "IL"."Feature_28" + 0.4202562 * "IL"."Feature_29" + -0.8750598 * "IL"."Feature_30" + -0.1095482 * "IL"."Feature_31" + -0.9022119 * "IL"."Feature_32" + 0.8534564 * "IL"."Feature_33" + -0.2450598 * "IL"."Feature_34" + -1.027787 * "IL"."Feature_35" + -0.3655143 * "IL"."Feature_36" + -0.7455705 * "IL"."Feature_37" + -0.2876898 * "IL"."Feature_38" + 0.03492211 * "IL"."Feature_39" + -0.2724076 * "IL"."Feature_40" + 0.00433859 * "IL"."Feature_41" + 0.4647465 * "IL"."Feature_42" + -0.4244118 * "IL"."Feature_43" + 3.528739 * "IL"."Feature_44" + -0.4936298 * "IL"."Feature_45" + 0.2242694 * "IL"."Feature_46" + 0.6395814 * "IL"."Feature_47" + 1.890859 * "IL"."Feature_48" + 0.534978 * "IL"."Feature_49" + -0.6003271 * "IL"."Feature_50" + 1.496268 * "IL"."Feature_51" + 0.1685962 * "IL"."Feature_52" + 0.006302507 * "IL"."Feature_53" + 0.3899184 * "IL"."Feature_54" + 0.02156149 * "IL"."Feature_55" + 1.62458 * "IL"."Feature_56" + 0.08626441 * "IL"."Feature_57" + -2.614904 * "IL"."Feature_58" + 0.9134573 * "IL"."Feature_59" + 0.3862908 * "IL"."Feature_60" + 0.1933311 * "IL"."Feature_61" + 0.1505486 * "IL"."Feature_62" + -1.871766 * "IL"."Feature_63" + 0.6577106 * "IL"."Feature_64" + 0.007944013 * "IL"."Feature_65" + -0.4265306 * "IL"."Feature_66" + -0.391934 * "IL"."Feature_67" + 0.4445081 * "IL"."Feature_68" + 0.266631 * "IL"."Feature_69" + -0.5260611 * "IL"."Feature_70" + -1.239047 * "IL"."Feature_71" + -0.2682375 * "IL"."Feature_72" + 0.2193828 * "IL"."Feature_73" + 0.5984971 * "IL"."Feature_74" + -0.02036983 * "IL"."Feature_75" + 0.1780529 * "IL"."Feature_76" + -0.05176679 * "IL"."Feature_77" + -0.714604 * "IL"."Feature_78" + 0.3104462 * "IL"."Feature_79" + 0.1321388 * "IL"."Feature_80" + -0.5372524 * "IL"."Feature_81" + 0.2131749 * "IL"."Feature_82" + 1.206485 * "IL"."Feature_83" + -0.104762 * "IL"."Feature_84" + -0.4365927 * "IL"."Feature_85" + 0.5332545 * "IL"."Feature_86" + -0.06898765 * "IL"."Feature_87" + -2.186815 * "IL"."Feature_88" + 0.2900717 * "IL"."Feature_89" + 1.125281 * "IL"."Feature_90" + -0.2722656 * "IL"."Feature_91" + 0.5791376 * "IL"."Feature_92" + -0.1154075 * "IL"."Feature_93" + 0.7080778 * "IL"."Feature_94" + 0.2089084 * "IL"."Feature_95" + -0.3664661 * "IL"."Feature_96" + -0.660421 * "IL"."Feature_97" + 0.2482496 * "IL"."Feature_98" + -0.9807308 * "IL"."Feature_99" + 0.02349684 AS "NEUR_1_5", -0.7474314 * "IL"."Feature_0" + -0.2267958 * "IL"."Feature_1" + -0.8470719 * "IL"."Feature_2" + -0.02479945 * "IL"."Feature_3" + -0.1086779 * "IL"."Feature_4" + -0.1572365 * "IL"."Feature_5" + 0.3364798 * "IL"."Feature_6" + 0.3820472 * "IL"."Feature_7" + -0.2021407 * "IL"."Feature_8" + -0.8937337 * "IL"."Feature_9" + -0.009338824 * "IL"."Feature_10" + -0.51042 * "IL"."Feature_11" + -0.9107346 * "IL"."Feature_12" + 1.054276 * "IL"."Feature_13" + -0.3877421 * "IL"."Feature_14" + 0.7479258 * "IL"."Feature_15" + -0.08156791 * "IL"."Feature_16" + -0.622789 * "IL"."Feature_17" + 0.008055622 * "IL"."Feature_18" + 0.3513063 * "IL"."Feature_19" + -0.9977508 * "IL"."Feature_20" + 0.384654 * "IL"."Feature_21" + 0.5430653 * "IL"."Feature_22" + 0.5341542 * "IL"."Feature_23" + 1.0014 * "IL"."Feature_24" + -0.05720397 * "IL"."Feature_25" + -0.4979291 * "IL"."Feature_26" + -0.5892057 * "IL"."Feature_27" + 0.2010942 * "IL"."Feature_28" + -0.9091963 * "IL"."Feature_29" + 0.5442092 * "IL"."Feature_30" + -1.136851 * "IL"."Feature_31" + -0.2747476 * "IL"."Feature_32" + -0.9739856 * "IL"."Feature_33" + -0.2567503 * "IL"."Feature_34" + -0.6291993 * "IL"."Feature_35" + -0.8383176 * "IL"."Feature_36" + -0.1256945 * "IL"."Feature_37" + -0.5200854 * "IL"."Feature_38" + -0.8987922 * "IL"."Feature_39" + 0.5468268 * "IL"."Feature_40" + -0.7296367 * "IL"."Feature_41" + 0.4145396 * "IL"."Feature_42" + 0.8014109 * "IL"."Feature_43" + -1.526534 * "IL"."Feature_44" + -0.3854488 * "IL"."Feature_45" + -0.3904005 * "IL"."Feature_46" + 0.2229718 * "IL"."Feature_47" + -0.3490703 * "IL"."Feature_48" + -0.8016352 * "IL"."Feature_49" + 1.338444 * "IL"."Feature_50" + 0.599444 * "IL"."Feature_51" + 0.03222975 * "IL"."Feature_52" + -1.689562 * "IL"."Feature_53" + 0.2646615 * "IL"."Feature_54" + -0.07286566 * "IL"."Feature_55" + 0.6568167 * "IL"."Feature_56" + -0.02382432 * "IL"."Feature_57" + 0.09761373 * "IL"."Feature_58" + 0.7187052 * "IL"."Feature_59" + -0.01959985 * "IL"."Feature_60" + 0.3015035 * "IL"."Feature_61" + 1.081698 * "IL"."Feature_62" + -0.1068136 * "IL"."Feature_63" + -0.3139026 * "IL"."Feature_64" + -1.297777 * "IL"."Feature_65" + -0.8737187 * "IL"."Feature_66" + 0.7223682 * "IL"."Feature_67" + 0.3060905 * "IL"."Feature_68" + -0.4967321 * "IL"."Feature_69" + -0.6251264 * "IL"."Feature_70" + 1.004185 * "IL"."Feature_71" + -0.3336981 * "IL"."Feature_72" + 0.2281731 * "IL"."Feature_73" + 0.2543411 * "IL"."Feature_74" + -0.3857107 * "IL"."Feature_75" + -0.8980523 * "IL"."Feature_76" + -0.3709504 * "IL"."Feature_77" + 2.359664 * "IL"."Feature_78" + -0.4634182 * "IL"."Feature_79" + 0.1572728 * "IL"."Feature_80" + 0.08170036 * "IL"."Feature_81" + -0.2184956 * "IL"."Feature_82" + 0.1878374 * "IL"."Feature_83" + -0.1696291 * "IL"."Feature_84" + 0.2699833 * "IL"."Feature_85" + 0.3850199 * "IL"."Feature_86" + 0.02377586 * "IL"."Feature_87" + -1.231492 * "IL"."Feature_88" + 0.5180621 * "IL"."Feature_89" + -0.4066641 * "IL"."Feature_90" + -0.6933622 * "IL"."Feature_91" + -0.3472666 * "IL"."Feature_92" + -0.08435353 * "IL"."Feature_93" + -0.1094264 * "IL"."Feature_94" + 0.7888387 * "IL"."Feature_95" + 0.2326985 * "IL"."Feature_96" + -0.430754 * "IL"."Feature_97" + -0.4196771 * "IL"."Feature_98" + 1.130714 * "IL"."Feature_99" + 0.2039789 AS "NEUR_1_6", 0.07141335 * "IL"."Feature_0" + -0.6302964 * "IL"."Feature_1" + -0.06968117 * "IL"."Feature_2" + 0.04828832 * "IL"."Feature_3" + 0.3153257 * "IL"."Feature_4" + -0.02358243 * "IL"."Feature_5" + -0.6279785 * "IL"."Feature_6" + -0.07812657 * "IL"."Feature_7" + -0.5758594 * "IL"."Feature_8" + -0.8290933 * "IL"."Feature_9" + 0.5401757 * "IL"."Feature_10" + -0.4445511 * "IL"."Feature_11" + 0.04083352 * "IL"."Feature_12" + 0.9851389 * "IL"."Feature_13" + 0.1438271 * "IL"."Feature_14" + -0.2194692 * "IL"."Feature_15" + -0.06983481 * "IL"."Feature_16" + -0.1994999 * "IL"."Feature_17" + -0.8510115 * "IL"."Feature_18" + 0.2157084 * "IL"."Feature_19" + -0.7992397 * "IL"."Feature_20" + 0.04020371 * "IL"."Feature_21" + 0.5689788 * "IL"."Feature_22" + -0.4275998 * "IL"."Feature_23" + -0.2879828 * "IL"."Feature_24" + -0.6988303 * "IL"."Feature_25" + -0.8861244 * "IL"."Feature_26" + -0.2027783 * "IL"."Feature_27" + -0.7858555 * "IL"."Feature_28" + -0.9223948 * "IL"."Feature_29" + 0.1655045 * "IL"."Feature_30" + -0.6993058 * "IL"."Feature_31" + 0.1285785 * "IL"."Feature_32" + 0.1291489 * "IL"."Feature_33" + -0.04677578 * "IL"."Feature_34" + -0.222197 * "IL"."Feature_35" + 0.1560134 * "IL"."Feature_36" + -0.4416141 * "IL"."Feature_37" + 0.5351074 * "IL"."Feature_38" + -0.63774 * "IL"."Feature_39" + 0.2710417 * "IL"."Feature_40" + -0.3128678 * "IL"."Feature_41" + 0.7563714 * "IL"."Feature_42" + 0.9887036 * "IL"."Feature_43" + 1.61974 * "IL"."Feature_44" + -0.09508354 * "IL"."Feature_45" + -0.1022318 * "IL"."Feature_46" + 0.1256846 * "IL"."Feature_47" + -0.7128479 * "IL"."Feature_48" + 0.8828797 * "IL"."Feature_49" + 0.2951469 * "IL"."Feature_50" + -0.1821243 * "IL"."Feature_51" + 0.2672344 * "IL"."Feature_52" + 0.03785907 * "IL"."Feature_53" + 0.6201311 * "IL"."Feature_54" + -0.4506814 * "IL"."Feature_55" + 2.385048 * "IL"."Feature_56" + -0.269133 * "IL"."Feature_57" + -0.9251098 * "IL"."Feature_58" + 0.3362003 * "IL"."Feature_59" + 0.2298914 * "IL"."Feature_60" + 0.03430679 * "IL"."Feature_61" + -0.4250743 * "IL"."Feature_62" + -0.5113796 * "IL"."Feature_63" + -0.6176375 * "IL"."Feature_64" + -0.08099859 * "IL"."Feature_65" + -0.169399 * "IL"."Feature_66" + -0.07310126 * "IL"."Feature_67" + 0.2615933 * "IL"."Feature_68" + 0.06464006 * "IL"."Feature_69" + -0.7725407 * "IL"."Feature_70" + -0.0771621 * "IL"."Feature_71" + -0.213881 * "IL"."Feature_72" + -0.2559129 * "IL"."Feature_73" + 0.01452637 * "IL"."Feature_74" + 0.596195 * "IL"."Feature_75" + -0.01250082 * "IL"."Feature_76" + -0.2337936 * "IL"."Feature_77" + 0.5882936 * "IL"."Feature_78" + 0.1250132 * "IL"."Feature_79" + 0.0602242 * "IL"."Feature_80" + -1.009205 * "IL"."Feature_81" + 0.02993525 * "IL"."Feature_82" + -0.1819742 * "IL"."Feature_83" + -0.3522992 * "IL"."Feature_84" + -0.4090793 * "IL"."Feature_85" + 0.05706723 * "IL"."Feature_86" + 0.2490988 * "IL"."Feature_87" + 0.5978892 * "IL"."Feature_88" + 0.3279116 * "IL"."Feature_89" + -0.2558714 * "IL"."Feature_90" + 0.1767627 * "IL"."Feature_91" + -0.1210413 * "IL"."Feature_92" + 0.7369022 * "IL"."Feature_93" + -0.6059575 * "IL"."Feature_94" + 0.3476616 * "IL"."Feature_95" + -0.344175 * "IL"."Feature_96" + -0.7640696 * "IL"."Feature_97" + -0.5214903 * "IL"."Feature_98" + -0.3293035 * "IL"."Feature_99" + 0.5794651 AS "NEUR_1_7", 0.09647319 * "IL"."Feature_0" + -0.4737508 * "IL"."Feature_1" + -0.7894756 * "IL"."Feature_2" + -1.066982 * "IL"."Feature_3" + 0.2774485 * "IL"."Feature_4" + 0.7309198 * "IL"."Feature_5" + -0.8525681 * "IL"."Feature_6" + 0.3484864 * "IL"."Feature_7" + 0.6871817 * "IL"."Feature_8" + -0.8741519 * "IL"."Feature_9" + -0.5340376 * "IL"."Feature_10" + 0.6230136 * "IL"."Feature_11" + 0.2363422 * "IL"."Feature_12" + -0.9713585 * "IL"."Feature_13" + 0.5387369 * "IL"."Feature_14" + -0.03057227 * "IL"."Feature_15" + -0.5846287 * "IL"."Feature_16" + 0.2334254 * "IL"."Feature_17" + 0.4426412 * "IL"."Feature_18" + -0.585231 * "IL"."Feature_19" + 1.12176 * "IL"."Feature_20" + 0.4982277 * "IL"."Feature_21" + -0.03428442 * "IL"."Feature_22" + -0.1932875 * "IL"."Feature_23" + 0.3654371 * "IL"."Feature_24" + -0.4177791 * "IL"."Feature_25" + -0.5346015 * "IL"."Feature_26" + 0.4416144 * "IL"."Feature_27" + -0.05929359 * "IL"."Feature_28" + 1.386938 * "IL"."Feature_29" + 0.6633908 * "IL"."Feature_30" + 1.264433 * "IL"."Feature_31" + 0.3700725 * "IL"."Feature_32" + 0.06344161 * "IL"."Feature_33" + 0.3888529 * "IL"."Feature_34" + -1.728552 * "IL"."Feature_35" + 1.612352 * "IL"."Feature_36" + -0.5193151 * "IL"."Feature_37" + 1.543653 * "IL"."Feature_38" + -0.09641802 * "IL"."Feature_39" + 0.7115265 * "IL"."Feature_40" + 0.5125908 * "IL"."Feature_41" + -0.6770845 * "IL"."Feature_42" + -0.7288006 * "IL"."Feature_43" + -4.125283 * "IL"."Feature_44" + -0.4176105 * "IL"."Feature_45" + 0.5147969 * "IL"."Feature_46" + 0.8536524 * "IL"."Feature_47" + 1.803167 * "IL"."Feature_48" + 0.1265665 * "IL"."Feature_49" + 0.3556692 * "IL"."Feature_50" + 2.063673 * "IL"."Feature_51" + -0.6130845 * "IL"."Feature_52" + 1.284955 * "IL"."Feature_53" + -0.5664473 * "IL"."Feature_54" + -0.243314 * "IL"."Feature_55" + -1.073446 * "IL"."Feature_56" + 0.2711119 * "IL"."Feature_57" + -0.6180828 * "IL"."Feature_58" + -1.39866 * "IL"."Feature_59" + -0.3760067 * "IL"."Feature_60" + -0.09044854 * "IL"."Feature_61" + 0.3268071 * "IL"."Feature_62" + 1.275619 * "IL"."Feature_63" + -0.02976249 * "IL"."Feature_64" + 1.283854 * "IL"."Feature_65" + 0.1982241 * "IL"."Feature_66" + -0.3818061 * "IL"."Feature_67" + -1.275764 * "IL"."Feature_68" + -1.009654 * "IL"."Feature_69" + 0.9407812 * "IL"."Feature_70" + 0.5855864 * "IL"."Feature_71" + 0.245111 * "IL"."Feature_72" + -0.4219512 * "IL"."Feature_73" + 0.009190951 * "IL"."Feature_74" + -0.3069465 * "IL"."Feature_75" + 0.5974926 * "IL"."Feature_76" + -1.051477 * "IL"."Feature_77" + -1.189443 * "IL"."Feature_78" + 0.3694085 * "IL"."Feature_79" + -0.07568102 * "IL"."Feature_80" + 0.4681438 * "IL"."Feature_81" + 0.7048489 * "IL"."Feature_82" + -0.8202334 * "IL"."Feature_83" + -0.5987784 * "IL"."Feature_84" + -0.1380093 * "IL"."Feature_85" + 0.5478187 * "IL"."Feature_86" + -0.927571 * "IL"."Feature_87" + -0.8337601 * "IL"."Feature_88" + -0.2191555 * "IL"."Feature_89" + -0.9142982 * "IL"."Feature_90" + 0.1228881 * "IL"."Feature_91" + 0.3003067 * "IL"."Feature_92" + -0.01296948 * "IL"."Feature_93" + -0.1240986 * "IL"."Feature_94" + -0.585952 * "IL"."Feature_95" + 0.1983217 * "IL"."Feature_96" + 0.1168021 * "IL"."Feature_97" + -0.05730429 * "IL"."Feature_98" + -0.3176018 * "IL"."Feature_99" + 0.07837426 AS "NEUR_1_8", -0.9889387 * "IL"."Feature_0" + 0.02096631 * "IL"."Feature_1" + -0.7319341 * "IL"."Feature_2" + 0.5156556 * "IL"."Feature_3" + -0.2754467 * "IL"."Feature_4" + 0.9880946 * "IL"."Feature_5" + -0.5833692 * "IL"."Feature_6" + -0.3790159 * "IL"."Feature_7" + -1.22804 * "IL"."Feature_8" + 0.8407211 * "IL"."Feature_9" + -0.5138975 * "IL"."Feature_10" + 0.02420147 * "IL"."Feature_11" + 0.1058805 * "IL"."Feature_12" + 0.01094016 * "IL"."Feature_13" + -0.4664853 * "IL"."Feature_14" + -1.730899 * "IL"."Feature_15" + -0.3587149 * "IL"."Feature_16" + -0.5725358 * "IL"."Feature_17" + -0.4629439 * "IL"."Feature_18" + -2.196425 * "IL"."Feature_19" + -0.01117324 * "IL"."Feature_20" + -0.4883031 * "IL"."Feature_21" + 0.0207707 * "IL"."Feature_22" + -0.878473 * "IL"."Feature_23" + -2.099254 * "IL"."Feature_24" + -0.1008829 * "IL"."Feature_25" + 0.9671029 * "IL"."Feature_26" + 1.043064 * "IL"."Feature_27" + -1.061947 * "IL"."Feature_28" + -1.214284 * "IL"."Feature_29" + -0.09343564 * "IL"."Feature_30" + 0.8247733 * "IL"."Feature_31" + 0.9210189 * "IL"."Feature_32" + 0.2647335 * "IL"."Feature_33" + -0.02879553 * "IL"."Feature_34" + -0.116264 * "IL"."Feature_35" + -0.57288 * "IL"."Feature_36" + 1.559903 * "IL"."Feature_37" + 0.01401004 * "IL"."Feature_38" + 0.08664856 * "IL"."Feature_39" + -0.5383171 * "IL"."Feature_40" + 0.5316761 * "IL"."Feature_41" + -1.188114 * "IL"."Feature_42" + -1.228492 * "IL"."Feature_43" + -1.419427 * "IL"."Feature_44" + 1.523122 * "IL"."Feature_45" + -0.04270597 * "IL"."Feature_46" + 1.959936 * "IL"."Feature_47" + 0.1125382 * "IL"."Feature_48" + -0.7270213 * "IL"."Feature_49" + -0.8454095 * "IL"."Feature_50" + 0.2424878 * "IL"."Feature_51" + -0.3580878 * "IL"."Feature_52" + -0.7744814 * "IL"."Feature_53" + 0.2252396 * "IL"."Feature_54" + 0.5460583 * "IL"."Feature_55" + 0.7529483 * "IL"."Feature_56" + 0.1326094 * "IL"."Feature_57" + 1.355181 * "IL"."Feature_58" + -1.041909 * "IL"."Feature_59" + 0.2784985 * "IL"."Feature_60" + -0.2767278 * "IL"."Feature_61" + -0.155715 * "IL"."Feature_62" + 0.7954561 * "IL"."Feature_63" + 0.2754506 * "IL"."Feature_64" + 0.06916434 * "IL"."Feature_65" + 0.51716 * "IL"."Feature_66" + -0.2664918 * "IL"."Feature_67" + 0.8190209 * "IL"."Feature_68" + -0.364457 * "IL"."Feature_69" + 0.1858721 * "IL"."Feature_70" + 0.8085842 * "IL"."Feature_71" + 0.442298 * "IL"."Feature_72" + 0.6344175 * "IL"."Feature_73" + 0.7030377 * "IL"."Feature_74" + 0.4093209 * "IL"."Feature_75" + 1.277352 * "IL"."Feature_76" + 0.3576921 * "IL"."Feature_77" + 1.22504 * "IL"."Feature_78" + 0.5769571 * "IL"."Feature_79" + -0.963684 * "IL"."Feature_80" + 0.3557475 * "IL"."Feature_81" + -0.4014725 * "IL"."Feature_82" + -0.0149566 * "IL"."Feature_83" + -0.1425134 * "IL"."Feature_84" + 1.684495 * "IL"."Feature_85" + -0.009323462 * "IL"."Feature_86" + 0.2721788 * "IL"."Feature_87" + 1.851936 * "IL"."Feature_88" + -0.3344573 * "IL"."Feature_89" + -0.4536177 * "IL"."Feature_90" + 0.765334 * "IL"."Feature_91" + -0.03994091 * "IL"."Feature_92" + 1.580358 * "IL"."Feature_93" + 0.2574689 * "IL"."Feature_94" + -0.7075486 * "IL"."Feature_95" + -0.508175 * "IL"."Feature_96" + 1.357143 * "IL"."Feature_97" + -0.4217759 * "IL"."Feature_98" + -0.1747835 * "IL"."Feature_99" + 1.815068 AS "NEUR_1_9", 0.01033042 * "IL"."Feature_0" + 0.3131002 * "IL"."Feature_1" + -0.4389814 * "IL"."Feature_2" + -0.7906004 * "IL"."Feature_3" + 0.3979666 * "IL"."Feature_4" + 0.9112228 * "IL"."Feature_5" + -0.2117921 * "IL"."Feature_6" + -0.3653552 * "IL"."Feature_7" + -0.05976719 * "IL"."Feature_8" + -0.08276351 * "IL"."Feature_9" + -0.4656208 * "IL"."Feature_10" + -0.04510792 * "IL"."Feature_11" + -0.001842897 * "IL"."Feature_12" + -0.6103202 * "IL"."Feature_13" + 0.3165139 * "IL"."Feature_14" + 0.3446287 * "IL"."Feature_15" + -0.3033451 * "IL"."Feature_16" + -0.9938936 * "IL"."Feature_17" + 1.360637 * "IL"."Feature_18" + -0.4483309 * "IL"."Feature_19" + -0.2949748 * "IL"."Feature_20" + 0.2635054 * "IL"."Feature_21" + -0.7455446 * "IL"."Feature_22" + -0.5530553 * "IL"."Feature_23" + 0.030989 * "IL"."Feature_24" + 0.1538727 * "IL"."Feature_25" + 0.7385577 * "IL"."Feature_26" + 0.758961 * "IL"."Feature_27" + 0.8727234 * "IL"."Feature_28" + -2.395016 * "IL"."Feature_29" + 0.4726689 * "IL"."Feature_30" + -0.3132284 * "IL"."Feature_31" + 0.6778448 * "IL"."Feature_32" + -0.1126338 * "IL"."Feature_33" + 0.3468514 * "IL"."Feature_34" + 0.2829622 * "IL"."Feature_35" + -0.6860916 * "IL"."Feature_36" + 0.3847068 * "IL"."Feature_37" + -0.3723926 * "IL"."Feature_38" + -0.5774643 * "IL"."Feature_39" + 0.5915244 * "IL"."Feature_40" + -0.09928953 * "IL"."Feature_41" + -0.5323752 * "IL"."Feature_42" + -0.01085043 * "IL"."Feature_43" + -0.5775179 * "IL"."Feature_44" + 0.475897 * "IL"."Feature_45" + -0.1257132 * "IL"."Feature_46" + 0.0005331638 * "IL"."Feature_47" + -1.061283 * "IL"."Feature_48" + 0.1012994 * "IL"."Feature_49" + 2.315528 * "IL"."Feature_50" + -0.4207374 * "IL"."Feature_51" + -0.4868876 * "IL"."Feature_52" + 1.133035 * "IL"."Feature_53" + 0.1265658 * "IL"."Feature_54" + -0.1984658 * "IL"."Feature_55" + 2.536478 * "IL"."Feature_56" + 0.8604492 * "IL"."Feature_57" + -3.126065 * "IL"."Feature_58" + 0.5059241 * "IL"."Feature_59" + 0.1622859 * "IL"."Feature_60" + -0.3000414 * "IL"."Feature_61" + -0.08849761 * "IL"."Feature_62" + -0.270411 * "IL"."Feature_63" + -0.04779688 * "IL"."Feature_64" + -0.564241 * "IL"."Feature_65" + -0.7597055 * "IL"."Feature_66" + 0.53451 * "IL"."Feature_67" + -0.00877314 * "IL"."Feature_68" + -0.6828602 * "IL"."Feature_69" + -0.2648757 * "IL"."Feature_70" + 0.5752179 * "IL"."Feature_71" + -0.004994893 * "IL"."Feature_72" + 0.503607 * "IL"."Feature_73" + -0.4808904 * "IL"."Feature_74" + -0.3979188 * "IL"."Feature_75" + -0.6120702 * "IL"."Feature_76" + 0.5812348 * "IL"."Feature_77" + 0.2974801 * "IL"."Feature_78" + -0.1133638 * "IL"."Feature_79" + 0.1136559 * "IL"."Feature_80" + -1.485171 * "IL"."Feature_81" + -0.1135887 * "IL"."Feature_82" + 0.5888487 * "IL"."Feature_83" + 0.3049698 * "IL"."Feature_84" + 1.29877 * "IL"."Feature_85" + 0.7086547 * "IL"."Feature_86" + 0.2546446 * "IL"."Feature_87" + -0.7240034 * "IL"."Feature_88" + -0.2789628 * "IL"."Feature_89" + -0.3564053 * "IL"."Feature_90" + 0.7621116 * "IL"."Feature_91" + -0.5258796 * "IL"."Feature_92" + 0.1538205 * "IL"."Feature_93" + -0.3791623 * "IL"."Feature_94" + -0.6649341 * "IL"."Feature_95" + 0.8190924 * "IL"."Feature_96" + 0.6196759 * "IL"."Feature_97" + 1.347196 * "IL"."Feature_98" + 2.127675 * "IL"."Feature_99" + 0.2350347 AS "NEUR_1_10", 0.1716849 * "IL"."Feature_0" + -0.5091629 * "IL"."Feature_1" + -0.2165329 * "IL"."Feature_2" + -0.9874909 * "IL"."Feature_3" + 0.5100135 * "IL"."Feature_4" + 0.09283629 * "IL"."Feature_5" + 0.4233834 * "IL"."Feature_6" + 0.4022688 * "IL"."Feature_7" + -0.3938826 * "IL"."Feature_8" + -1.097994 * "IL"."Feature_9" + -0.5665228 * "IL"."Feature_10" + -0.2474897 * "IL"."Feature_11" + 0.9990389 * "IL"."Feature_12" + 1.811424 * "IL"."Feature_13" + 0.5293648 * "IL"."Feature_14" + -0.1916847 * "IL"."Feature_15" + 0.03193295 * "IL"."Feature_16" + -0.6945242 * "IL"."Feature_17" + 0.1300978 * "IL"."Feature_18" + 0.5150223 * "IL"."Feature_19" + -0.07725936 * "IL"."Feature_20" + -0.1532437 * "IL"."Feature_21" + -0.01903237 * "IL"."Feature_22" + -0.0520096 * "IL"."Feature_23" + 0.735792 * "IL"."Feature_24" + -0.3348344 * "IL"."Feature_25" + 0.757543 * "IL"."Feature_26" + 0.7492949 * "IL"."Feature_27" + 0.48486 * "IL"."Feature_28" + -0.7979781 * "IL"."Feature_29" + -0.1434497 * "IL"."Feature_30" + 0.3523337 * "IL"."Feature_31" + 0.7117897 * "IL"."Feature_32" + -0.3309365 * "IL"."Feature_33" + 0.8678338 * "IL"."Feature_34" + -0.6288089 * "IL"."Feature_35" + -0.02850391 * "IL"."Feature_36" + 0.008494831 * "IL"."Feature_37" + -0.07679433 * "IL"."Feature_38" + 0.3217904 * "IL"."Feature_39" + 0.2637005 * "IL"."Feature_40" + -0.7339594 * "IL"."Feature_41" + 0.3428837 * "IL"."Feature_42" + 1.124677 * "IL"."Feature_43" + -1.057501 * "IL"."Feature_44" + 0.1750937 * "IL"."Feature_45" + -0.1957359 * "IL"."Feature_46" + 0.7809216 * "IL"."Feature_47" + -2.092352 * "IL"."Feature_48" + -0.2588337 * "IL"."Feature_49" + 0.7389522 * "IL"."Feature_50" + 0.1847316 * "IL"."Feature_51" + 0.9881783 * "IL"."Feature_52" + -1.221483 * "IL"."Feature_53" + -0.2711892 * "IL"."Feature_54" + -0.2721119 * "IL"."Feature_55" + 1.316587 * "IL"."Feature_56" + 0.003893243 * "IL"."Feature_57" + 0.9463327 * "IL"."Feature_58" + 0.5634188 * "IL"."Feature_59" + -0.1812235 * "IL"."Feature_60" + 0.6142791 * "IL"."Feature_61" + 0.6225836 * "IL"."Feature_62" + -0.5277309 * "IL"."Feature_63" + -0.1067403 * "IL"."Feature_64" + -0.3918831 * "IL"."Feature_65" + -0.7025974 * "IL"."Feature_66" + 0.5808884 * "IL"."Feature_67" + -0.05987203 * "IL"."Feature_68" + -0.01285345 * "IL"."Feature_69" + -0.5149951 * "IL"."Feature_70" + -0.3157713 * "IL"."Feature_71" + 0.4670829 * "IL"."Feature_72" + 0.7676064 * "IL"."Feature_73" + -0.1939796 * "IL"."Feature_74" + -0.2835486 * "IL"."Feature_75" + 0.2200723 * "IL"."Feature_76" + 0.3357058 * "IL"."Feature_77" + 0.7522468 * "IL"."Feature_78" + 0.7214923 * "IL"."Feature_79" + 0.435805 * "IL"."Feature_80" + -0.686878 * "IL"."Feature_81" + -0.04605503 * "IL"."Feature_82" + -0.5151951 * "IL"."Feature_83" + 0.1911271 * "IL"."Feature_84" + -0.07940257 * "IL"."Feature_85" + 0.6210147 * "IL"."Feature_86" + -0.08350404 * "IL"."Feature_87" + -0.5141695 * "IL"."Feature_88" + 0.4228904 * "IL"."Feature_89" + -0.1652976 * "IL"."Feature_90" + 0.3731887 * "IL"."Feature_91" + 0.6039948 * "IL"."Feature_92" + 0.08350626 * "IL"."Feature_93" + -0.9925981 * "IL"."Feature_94" + 0.5107302 * "IL"."Feature_95" + 0.1995721 * "IL"."Feature_96" + -0.3940305 * "IL"."Feature_97" + -1.109213 * "IL"."Feature_98" + 0.7610089 * "IL"."Feature_99" + 0.4489068 AS "NEUR_1_11", 0.02289277 * "IL"."Feature_0" + 1.296954 * "IL"."Feature_1" + 0.336511 * "IL"."Feature_2" + -0.6179212 * "IL"."Feature_3" + 0.1793145 * "IL"."Feature_4" + -0.5660891 * "IL"."Feature_5" + 1.80477 * "IL"."Feature_6" + -0.1854052 * "IL"."Feature_7" + -0.8629632 * "IL"."Feature_8" + -0.4901923 * "IL"."Feature_9" + 0.968246 * "IL"."Feature_10" + 0.1251051 * "IL"."Feature_11" + 0.0182554 * "IL"."Feature_12" + 1.405042 * "IL"."Feature_13" + 0.9317762 * "IL"."Feature_14" + 0.9088266 * "IL"."Feature_15" + 0.8867619 * "IL"."Feature_16" + 1.407854 * "IL"."Feature_17" + -0.5506857 * "IL"."Feature_18" + 0.2248173 * "IL"."Feature_19" + -1.875623 * "IL"."Feature_20" + -1.20534 * "IL"."Feature_21" + 1.305029 * "IL"."Feature_22" + -0.5151171 * "IL"."Feature_23" + 1.16538 * "IL"."Feature_24" + -1.131268 * "IL"."Feature_25" + 0.04083428 * "IL"."Feature_26" + -4.368701 * "IL"."Feature_27" + -1.012718 * "IL"."Feature_28" + -3.211056 * "IL"."Feature_29" + 0.5695523 * "IL"."Feature_30" + -1.325224 * "IL"."Feature_31" + 0.1463607 * "IL"."Feature_32" + -1.294477 * "IL"."Feature_33" + -1.533291 * "IL"."Feature_34" + 0.7925662 * "IL"."Feature_35" + -0.3928487 * "IL"."Feature_36" + 1.381895 * "IL"."Feature_37" + -1.961293 * "IL"."Feature_38" + 0.5280118 * "IL"."Feature_39" + -0.7158991 * "IL"."Feature_40" + -1.498969 * "IL"."Feature_41" + -0.3149475 * "IL"."Feature_42" + 1.763485 * "IL"."Feature_43" + 0.6865724 * "IL"."Feature_44" + -0.2491836 * "IL"."Feature_45" + -0.7651748 * "IL"."Feature_46" + -0.2071229 * "IL"."Feature_47" + 0.7328584 * "IL"."Feature_48" + 0.5246494 * "IL"."Feature_49" + 0.2301384 * "IL"."Feature_50" + -2.793289 * "IL"."Feature_51" + 0.0728944 * "IL"."Feature_52" + -1.263152 * "IL"."Feature_53" + -0.1933678 * "IL"."Feature_54" + 0.4631492 * "IL"."Feature_55" + -2.292995 * "IL"."Feature_56" + 0.02865048 * "IL"."Feature_57" + 1.509605 * "IL"."Feature_58" + 1.45016 * "IL"."Feature_59" + -0.3146209 * "IL"."Feature_60" + 0.8749826 * "IL"."Feature_61" + 0.423263 * "IL"."Feature_62" + 0.5860635 * "IL"."Feature_63" + 0.7225726 * "IL"."Feature_64" + -0.4950573 * "IL"."Feature_65" + 0.448518 * "IL"."Feature_66" + -0.2385196 * "IL"."Feature_67" + 1.66525 * "IL"."Feature_68" + 0.1480549 * "IL"."Feature_69" + 0.299312 * "IL"."Feature_70" + -0.9628301 * "IL"."Feature_71" + -0.6999144 * "IL"."Feature_72" + 1.516694 * "IL"."Feature_73" + -0.5511444 * "IL"."Feature_74" + 1.04271 * "IL"."Feature_75" + -1.668345 * "IL"."Feature_76" + 0.3048294 * "IL"."Feature_77" + 1.707731 * "IL"."Feature_78" + -1.617112 * "IL"."Feature_79" + -0.140142 * "IL"."Feature_80" + 0.3973823 * "IL"."Feature_81" + -0.8720276 * "IL"."Feature_82" + 0.4272868 * "IL"."Feature_83" + 0.3818822 * "IL"."Feature_84" + -0.6206664 * "IL"."Feature_85" + -0.02354687 * "IL"."Feature_86" + -0.1942649 * "IL"."Feature_87" + 0.3108664 * "IL"."Feature_88" + -0.448414 * "IL"."Feature_89" + 0.3742638 * "IL"."Feature_90" + -0.4756447 * "IL"."Feature_91" + -1.651872 * "IL"."Feature_92" + 0.698166 * "IL"."Feature_93" + 0.5258788 * "IL"."Feature_94" + 1.567412 * "IL"."Feature_95" + -1.370617 * "IL"."Feature_96" + -0.1375342 * "IL"."Feature_97" + -0.8313481 * "IL"."Feature_98" + 0.195272 * "IL"."Feature_99" + -0.4824242 AS "NEUR_1_12" 
FROM "IL"), 
"HL_1_logistic" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_1")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_1")) ELSE -709.782712893384 END)) AS "NEUR_1_1", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_2")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_2")) ELSE -709.782712893384 END)) AS "NEUR_1_2", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_3")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_3")) ELSE -709.782712893384 END)) AS "NEUR_1_3", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_4")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_4")) ELSE -709.782712893384 END)) AS "NEUR_1_4", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_5")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_5")) ELSE -709.782712893384 END)) AS "NEUR_1_5", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_6")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_6")) ELSE -709.782712893384 END)) AS "NEUR_1_6", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_7")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_7")) ELSE -709.782712893384 END)) AS "NEUR_1_7", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_8")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_8")) ELSE -709.782712893384 END)) AS "NEUR_1_8", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_9")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_9")) ELSE -709.782712893384 END)) AS "NEUR_1_9", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_10")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_10")) ELSE -709.782712893384 END)) AS "NEUR_1_10", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_11")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_11")) ELSE -709.782712893384 END)) AS "NEUR_1_11", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_12")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_12")) ELSE -709.782712893384 END)) AS "NEUR_1_12" 
FROM "HL_BA_1"), 
"HL_1_logistic_1" AS 
(SELECT "HL_1_logistic"."KEY" AS "KEY", "HL_1_logistic"."NEUR_1_1" AS "NEUR_1_1", "HL_1_logistic"."NEUR_1_2" AS "NEUR_1_2", "HL_1_logistic"."NEUR_1_3" AS "NEUR_1_3", "HL_1_logistic"."NEUR_1_4" AS "NEUR_1_4", "HL_1_logistic"."NEUR_1_5" AS "NEUR_1_5", "HL_1_logistic"."NEUR_1_6" AS "NEUR_1_6", "HL_1_logistic"."NEUR_1_7" AS "NEUR_1_7", "HL_1_logistic"."NEUR_1_8" AS "NEUR_1_8", "HL_1_logistic"."NEUR_1_9" AS "NEUR_1_9", "HL_1_logistic"."NEUR_1_10" AS "NEUR_1_10", "HL_1_logistic"."NEUR_1_11" AS "NEUR_1_11", "HL_1_logistic"."NEUR_1_12" AS "NEUR_1_12" 
FROM "HL_1_logistic"), 
"OL_BA" AS 
(SELECT "HL_1_logistic_1"."KEY" AS "KEY", 7.914379 * "HL_1_logistic_1"."NEUR_1_1" + -5.090841 * "HL_1_logistic_1"."NEUR_1_2" + -9.895616 * "HL_1_logistic_1"."NEUR_1_3" + -4.61696 * "HL_1_logistic_1"."NEUR_1_4" + -2.561167 * "HL_1_logistic_1"."NEUR_1_5" + 6.012406 * "HL_1_logistic_1"."NEUR_1_6" + 2.797534 * "HL_1_logistic_1"."NEUR_1_7" + -4.130547 * "HL_1_logistic_1"."NEUR_1_8" + -1.409583 * "HL_1_logistic_1"."NEUR_1_9" + 3.092164 * "HL_1_logistic_1"."NEUR_1_10" + -0.001463254 * "HL_1_logistic_1"."NEUR_1_11" + 5.57326 * "HL_1_logistic_1"."NEUR_1_12" + 1.169596 AS "NEUR_2_1", 4.4005 * "HL_1_logistic_1"."NEUR_1_1" + 0.5316104 * "HL_1_logistic_1"."NEUR_1_2" + 9.221081 * "HL_1_logistic_1"."NEUR_1_3" + 6.181305 * "HL_1_logistic_1"."NEUR_1_4" + 3.080268 * "HL_1_logistic_1"."NEUR_1_5" + -0.2583621 * "HL_1_logistic_1"."NEUR_1_6" + -0.9295961 * "HL_1_logistic_1"."NEUR_1_7" + -5.815294 * "HL_1_logistic_1"."NEUR_1_8" + 9.125683 * "HL_1_logistic_1"."NEUR_1_9" + -4.210341 * "HL_1_logistic_1"."NEUR_1_10" + -5.125635 * "HL_1_logistic_1"."NEUR_1_11" + -0.06174554 * "HL_1_logistic_1"."NEUR_1_12" + -5.175683 AS "NEUR_2_2", -7.327843 * "HL_1_logistic_1"."NEUR_1_1" + -4.044657 * "HL_1_logistic_1"."NEUR_1_2" + 5.789483 * "HL_1_logistic_1"."NEUR_1_3" + -3.283367 * "HL_1_logistic_1"."NEUR_1_4" + -1.18324 * "HL_1_logistic_1"."NEUR_1_5" + -0.833097 * "HL_1_logistic_1"."NEUR_1_6" + -7.723338 * "HL_1_logistic_1"."NEUR_1_7" + 5.838637 * "HL_1_logistic_1"."NEUR_1_8" + 2.587794 * "HL_1_logistic_1"."NEUR_1_9" + 0.8295598 * "HL_1_logistic_1"."NEUR_1_10" + 6.68288 * "HL_1_logistic_1"."NEUR_1_11" + -6.91814 * "HL_1_logistic_1"."NEUR_1_12" + 1.730579 AS "NEUR_2_3", -5.395506 * "HL_1_logistic_1"."NEUR_1_1" + 8.43144 * "HL_1_logistic_1"."NEUR_1_2" + -5.13499 * "HL_1_logistic_1"."NEUR_1_3" + 1.572109 * "HL_1_logistic_1"."NEUR_1_4" + -0.2045855 * "HL_1_logistic_1"."NEUR_1_5" + -4.887604 * "HL_1_logistic_1"."NEUR_1_6" + 6.123869 * "HL_1_logistic_1"."NEUR_1_7" + 4.391924 * "HL_1_logistic_1"."NEUR_1_8" + -10.98818 * "HL_1_logistic_1"."NEUR_1_9" + 0.453156 * "HL_1_logistic_1"."NEUR_1_10" + -1.169755 * "HL_1_logistic_1"."NEUR_1_11" + 1.441832 * "HL_1_logistic_1"."NEUR_1_12" + 2.188385 AS "NEUR_2_4" 
FROM "HL_1_logistic_1"), 
"OL_softmax" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_2_1" AS "NEUR_2_1", "OL_BA"."NEUR_2_2" AS "NEUR_2_2", "OL_BA"."NEUR_2_3" AS "NEUR_2_3", "OL_BA"."NEUR_2_4" AS "NEUR_2_4" 
FROM "OL_BA"), 
"OL_softmax_1" AS 
(SELECT "OL_softmax"."KEY" AS "KEY", "OL_softmax"."NEUR_2_1" AS "NEUR_2_1", "OL_softmax"."NEUR_2_2" AS "NEUR_2_2", "OL_softmax"."NEUR_2_3" AS "NEUR_2_3", "OL_softmax"."NEUR_2_4" AS "NEUR_2_4" 
FROM "OL_softmax"), 
orig_cte AS 
(SELECT "OL_softmax_1"."KEY" AS "KEY", "OL_softmax_1"."NEUR_2_1" AS "Score_0", "OL_softmax_1"."NEUR_2_2" AS "Score_1", "OL_softmax_1"."NEUR_2_3" AS "Score_2", "OL_softmax_1"."NEUR_2_4" AS "Score_3", CAST(NULL AS DOUBLE PRECISION) AS "Proba_0", CAST(NULL AS DOUBLE PRECISION) AS "Proba_1", CAST(NULL AS DOUBLE PRECISION) AS "Proba_2", CAST(NULL AS DOUBLE PRECISION) AS "Proba_3", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_1", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_2", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE PRECISION) AS "DecisionProba" 
FROM "OL_softmax_1"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(CASE WHEN (maxvalue(-100.0, score_max."Score_0" - score_max."max_Score") >= -709.782712893384) THEN maxvalue(-100.0, score_max."Score_0" - score_max."max_Score") ELSE -709.782712893384 END) AS "exp_delta_Score_0", exp(CASE WHEN (maxvalue(-100.0, score_max."Score_1" - score_max."max_Score") >= -709.782712893384) THEN maxvalue(-100.0, score_max."Score_1" - score_max."max_Score") ELSE -709.782712893384 END) AS "exp_delta_Score_1", exp(CASE WHEN (maxvalue(-100.0, score_max."Score_2" - score_max."max_Score") >= -709.782712893384) THEN maxvalue(-100.0, score_max."Score_2" - score_max."max_Score") ELSE -709.782712893384 END) AS "exp_delta_Score_2", exp(CASE WHEN (maxvalue(-100.0, score_max."Score_3" - score_max."max_Score") >= -709.782712893384) THEN maxvalue(-100.0, score_max."Score_3" - score_max."max_Score") ELSE -709.782712893384 END) AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", max(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_2", CAST(NULL AS DOUBLE PRECISION) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", maxvalue(arg_max_cte."SoftProba_0", arg_max_cte."SoftProba_1", arg_max_cte."SoftProba_2", arg_max_cte."SoftProba_3") AS "DecisionProba" 
FROM arg_max_cte