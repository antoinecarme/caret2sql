-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretClassifier_nnet
-- Dataset : BreastCancer
-- Database : mysql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH `IL` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CAST(`ADS`.`Feature_0` AS DOUBLE) AS `Feature_0`, CAST(`ADS`.`Feature_1` AS DOUBLE) AS `Feature_1`, CAST(`ADS`.`Feature_2` AS DOUBLE) AS `Feature_2`, CAST(`ADS`.`Feature_3` AS DOUBLE) AS `Feature_3`, CAST(`ADS`.`Feature_4` AS DOUBLE) AS `Feature_4`, CAST(`ADS`.`Feature_5` AS DOUBLE) AS `Feature_5`, CAST(`ADS`.`Feature_6` AS DOUBLE) AS `Feature_6`, CAST(`ADS`.`Feature_7` AS DOUBLE) AS `Feature_7`, CAST(`ADS`.`Feature_8` AS DOUBLE) AS `Feature_8`, CAST(`ADS`.`Feature_9` AS DOUBLE) AS `Feature_9`, CAST(`ADS`.`Feature_10` AS DOUBLE) AS `Feature_10`, CAST(`ADS`.`Feature_11` AS DOUBLE) AS `Feature_11`, CAST(`ADS`.`Feature_12` AS DOUBLE) AS `Feature_12`, CAST(`ADS`.`Feature_13` AS DOUBLE) AS `Feature_13`, CAST(`ADS`.`Feature_14` AS DOUBLE) AS `Feature_14`, CAST(`ADS`.`Feature_15` AS DOUBLE) AS `Feature_15`, CAST(`ADS`.`Feature_16` AS DOUBLE) AS `Feature_16`, CAST(`ADS`.`Feature_17` AS DOUBLE) AS `Feature_17`, CAST(`ADS`.`Feature_18` AS DOUBLE) AS `Feature_18`, CAST(`ADS`.`Feature_19` AS DOUBLE) AS `Feature_19`, CAST(`ADS`.`Feature_20` AS DOUBLE) AS `Feature_20`, CAST(`ADS`.`Feature_21` AS DOUBLE) AS `Feature_21`, CAST(`ADS`.`Feature_22` AS DOUBLE) AS `Feature_22`, CAST(`ADS`.`Feature_23` AS DOUBLE) AS `Feature_23`, CAST(`ADS`.`Feature_24` AS DOUBLE) AS `Feature_24`, CAST(`ADS`.`Feature_25` AS DOUBLE) AS `Feature_25`, CAST(`ADS`.`Feature_26` AS DOUBLE) AS `Feature_26`, CAST(`ADS`.`Feature_27` AS DOUBLE) AS `Feature_27`, CAST(`ADS`.`Feature_28` AS DOUBLE) AS `Feature_28`, CAST(`ADS`.`Feature_29` AS DOUBLE) AS `Feature_29` 
FROM `BreastCancer` AS `ADS`), 
`HL_BA_1` AS 
(SELECT `IL`.`KEY` AS `KEY`, 0.04172705 * `IL`.`Feature_0` + 0.07975353 * `IL`.`Feature_1` + 0.2710671 * `IL`.`Feature_2` + 1.192409 * `IL`.`Feature_3` + -0.003562324 * `IL`.`Feature_4` + -0.001779219 * `IL`.`Feature_5` + -0.004518736 * `IL`.`Feature_6` + -0.0001920311 * `IL`.`Feature_7` + 0.007370491 * `IL`.`Feature_8` + -0.002270321 * `IL`.`Feature_9` + 0.006359754 * `IL`.`Feature_10` + 0.003505345 * `IL`.`Feature_11` + 0.007424265 * `IL`.`Feature_12` + 0.07861981 * `IL`.`Feature_13` + 0.004634751 * `IL`.`Feature_14` + -0.0007680246 * `IL`.`Feature_15` + 0.0003915118 * `IL`.`Feature_16` + -0.006164512 * `IL`.`Feature_17` + 0.006414329 * `IL`.`Feature_18` + -0.005542424 * `IL`.`Feature_19` + 0.0427421 * `IL`.`Feature_20` + 0.09666271 * `IL`.`Feature_21` + 0.3011663 * `IL`.`Feature_22` + 1.438882 * `IL`.`Feature_23` + -0.00657468 * `IL`.`Feature_24` + -0.001024905 * `IL`.`Feature_25` + 6.716581e-05 * `IL`.`Feature_26` + 0.006886023 * `IL`.`Feature_27` + 0.003211536 * `IL`.`Feature_28` + -0.005525994 * `IL`.`Feature_29` + 0.002387364 AS `NEUR_1_1`, -0.08016819 * `IL`.`Feature_0` + -0.1690796 * `IL`.`Feature_1` + -0.5140243 * `IL`.`Feature_2` + -2.102671 * `IL`.`Feature_3` + 0.004907595 * `IL`.`Feature_4` + 0.002753953 * `IL`.`Feature_5` + 0.0008540319 * `IL`.`Feature_6` + 0.0006009151 * `IL`.`Feature_7` + -4.241964e-05 * `IL`.`Feature_8` + -0.003211786 * `IL`.`Feature_9` + -0.007807997 * `IL`.`Feature_10` + -0.009760702 * `IL`.`Feature_11` + -0.01613538 * `IL`.`Feature_12` + -0.1307109 * `IL`.`Feature_13` + -0.003518985 * `IL`.`Feature_14` + 0.004697723 * `IL`.`Feature_15` + -0.0002499278 * `IL`.`Feature_16` + 0.005260774 * `IL`.`Feature_17` + -0.0008175095 * `IL`.`Feature_18` + 0.0005789082 * `IL`.`Feature_19` + -0.09762525 * `IL`.`Feature_20` + -0.2128154 * `IL`.`Feature_21` + -0.5810485 * `IL`.`Feature_22` + -2.542774 * `IL`.`Feature_23` + 0.002889118 * `IL`.`Feature_24` + 0.003742927 * `IL`.`Feature_25` + -0.007142535 * `IL`.`Feature_26` + -0.005834781 * `IL`.`Feature_27` + 0.001963651 * `IL`.`Feature_28` + -0.004011231 * `IL`.`Feature_29` + -0.005765005 AS `NEUR_1_2`, 0.1198567 * `IL`.`Feature_0` + 0.2266238 * `IL`.`Feature_1` + 0.7233774 * `IL`.`Feature_2` + 2.953781 * `IL`.`Feature_3` + -0.002408527 * `IL`.`Feature_4` + -0.005137978 * `IL`.`Feature_5` + 0.002203128 * `IL`.`Feature_6` + 0.001520362 * `IL`.`Feature_7` + -0.004013344 * `IL`.`Feature_8` + 0.008301303 * `IL`.`Feature_9` + 0.008336628 * `IL`.`Feature_10` + 0.01162467 * `IL`.`Feature_11` + 0.02903438 * `IL`.`Feature_12` + 0.1775508 * `IL`.`Feature_13` + 0.005083496 * `IL`.`Feature_14` + -0.003104005 * `IL`.`Feature_15` + -0.0005561852 * `IL`.`Feature_16` + -0.0002980946 * `IL`.`Feature_17` + 0.006254029 * `IL`.`Feature_18` + 0.004429939 * `IL`.`Feature_19` + 0.1293349 * `IL`.`Feature_20` + 0.2935 * `IL`.`Feature_21` + 0.8060356 * `IL`.`Feature_22` + 3.537101 * `IL`.`Feature_23` + 0.003613543 * `IL`.`Feature_24` + 0.005460349 * `IL`.`Feature_25` + 0.005028387 * `IL`.`Feature_26` + -0.002740568 * `IL`.`Feature_27` + 0.004337883 * `IL`.`Feature_28` + -0.004879745 * `IL`.`Feature_29` + 0.01627491 AS `NEUR_1_3`, 0.09134419 * `IL`.`Feature_0` + 0.1907384 * `IL`.`Feature_1` + 0.5749548 * `IL`.`Feature_2` + 2.240991 * `IL`.`Feature_3` + -0.0002724325 * `IL`.`Feature_4` + 0.004841676 * `IL`.`Feature_5` + -0.005615075 * `IL`.`Feature_6` + -0.004021029 * `IL`.`Feature_7` + 0.001071738 * `IL`.`Feature_8` + -0.004295156 * `IL`.`Feature_9` + 0.003643307 * `IL`.`Feature_10` + 0.01896787 * `IL`.`Feature_11` + 0.02483626 * `IL`.`Feature_12` + 0.1427213 * `IL`.`Feature_13` + 0.001748705 * `IL`.`Feature_14` + 0.001794059 * `IL`.`Feature_15` + 2.390515e-05 * `IL`.`Feature_16` + -0.005517393 * `IL`.`Feature_17` + 0.004447625 * `IL`.`Feature_18` + -0.0006282736 * `IL`.`Feature_19` + 0.1052182 * `IL`.`Feature_20` + 0.2492055 * `IL`.`Feature_21` + 0.6555926 * `IL`.`Feature_22` + 2.766621 * `IL`.`Feature_23` + -0.005381796 * `IL`.`Feature_24` + 0.003660863 * `IL`.`Feature_25` + -0.001389601 * `IL`.`Feature_26` + -0.001171832 * `IL`.`Feature_27` + 0.006422618 * `IL`.`Feature_28` + 0.006052441 * `IL`.`Feature_29` + 0.00488325 AS `NEUR_1_4`, -0.06892434 * `IL`.`Feature_0` + -0.1366121 * `IL`.`Feature_1` + -0.4485789 * `IL`.`Feature_2` + -1.817952 * `IL`.`Feature_3` + 0.001958692 * `IL`.`Feature_4` + -0.004691751 * `IL`.`Feature_5` + 0.004434858 * `IL`.`Feature_6` + 0.007449703 * `IL`.`Feature_7` + 0.004581231 * `IL`.`Feature_8` + 0.0009666607 * `IL`.`Feature_9` + 0.001671641 * `IL`.`Feature_10` + -0.009181311 * `IL`.`Feature_11` + -0.007844898 * `IL`.`Feature_12` + -0.1150771 * `IL`.`Feature_13` + 0.004880116 * `IL`.`Feature_14` + 0.001074092 * `IL`.`Feature_15` + -0.004031586 * `IL`.`Feature_16` + -0.003070601 * `IL`.`Feature_17` + 0.003580383 * `IL`.`Feature_18` + -0.007366812 * `IL`.`Feature_19` + -0.07532877 * `IL`.`Feature_20` + -0.1846453 * `IL`.`Feature_21` + -0.4886281 * `IL`.`Feature_22` + -2.21126 * `IL`.`Feature_23` + -0.005490038 * `IL`.`Feature_24` + -0.007680098 * `IL`.`Feature_25` + -0.001147282 * `IL`.`Feature_26` + 0.005148251 * `IL`.`Feature_27` + 0.002314018 * `IL`.`Feature_28` + -0.001849581 * `IL`.`Feature_29` + -0.0007217007 AS `NEUR_1_5`, 0.09617803 * `IL`.`Feature_0` + 0.1987226 * `IL`.`Feature_1` + 0.6029156 * `IL`.`Feature_2` + 2.312083 * `IL`.`Feature_3` + -0.002317937 * `IL`.`Feature_4` + 0.002514948 * `IL`.`Feature_5` + -0.0002293503 * `IL`.`Feature_6` + -0.002816375 * `IL`.`Feature_7` + -0.003578782 * `IL`.`Feature_8` + -0.006604154 * `IL`.`Feature_9` + 0.006794743 * `IL`.`Feature_10` + 0.01631377 * `IL`.`Feature_11` + 0.02417404 * `IL`.`Feature_12` + 0.1467007 * `IL`.`Feature_13` + 0.007301235 * `IL`.`Feature_14` + -0.005681507 * `IL`.`Feature_15` + 0.00343042 * `IL`.`Feature_16` + 0.002605529 * `IL`.`Feature_17` + 0.004965402 * `IL`.`Feature_18` + -0.001894691 * `IL`.`Feature_19` + 0.1003092 * `IL`.`Feature_20` + 0.2673088 * `IL`.`Feature_21` + 0.6767371 * `IL`.`Feature_22` + 2.843544 * `IL`.`Feature_23` + 0.002702805 * `IL`.`Feature_24` + 0.005081833 * `IL`.`Feature_25` + 0.002504583 * `IL`.`Feature_26` + -0.004819844 * `IL`.`Feature_27` + -0.001697135 * `IL`.`Feature_28` + 0.006987348 * `IL`.`Feature_29` + 0.01322891 AS `NEUR_1_6`, 0.06557218 * `IL`.`Feature_0` + 0.1398168 * `IL`.`Feature_1` + 0.405054 * `IL`.`Feature_2` + 1.49932 * `IL`.`Feature_3` + 0.007327737 * `IL`.`Feature_4` + -0.004188736 * `IL`.`Feature_5` + -0.001083326 * `IL`.`Feature_6` + 0.002309632 * `IL`.`Feature_7` + 0.002834415 * `IL`.`Feature_8` + 0.006401805 * `IL`.`Feature_9` + 0.003309414 * `IL`.`Feature_10` + 0.007007857 * `IL`.`Feature_11` + 0.01678668 * `IL`.`Feature_12` + 0.09685882 * `IL`.`Feature_13` + -0.005770915 * `IL`.`Feature_14` + -0.003565053 * `IL`.`Feature_15` + -0.0004891337 * `IL`.`Feature_16` + 0.004169281 * `IL`.`Feature_17` + 0.006955909 * `IL`.`Feature_18` + 0.005088195 * `IL`.`Feature_19` + 0.0735634 * `IL`.`Feature_20` + 0.1911895 * `IL`.`Feature_21` + 0.4641832 * `IL`.`Feature_22` + 1.878028 * `IL`.`Feature_23` + 0.003855643 * `IL`.`Feature_24` + 0.008225787 * `IL`.`Feature_25` + 0.004170553 * `IL`.`Feature_26` + 0.006034438 * `IL`.`Feature_27` + 0.008980843 * `IL`.`Feature_28` + 0.007039043 * `IL`.`Feature_29` + 0.004127316 AS `NEUR_1_7`, -2.662694 * `IL`.`Feature_0` + 9.718396 * `IL`.`Feature_1` + -7.838746 * `IL`.`Feature_2` + 16.20616 * `IL`.`Feature_3` + 0.1022558 * `IL`.`Feature_4` + 0.3104504 * `IL`.`Feature_5` + 0.6026452 * `IL`.`Feature_6` + 0.2297934 * `IL`.`Feature_7` + 0.06652627 * `IL`.`Feature_8` + 0.02824971 * `IL`.`Feature_9` + 0.1091744 * `IL`.`Feature_10` + 0.8694206 * `IL`.`Feature_11` + 2.178335 * `IL`.`Feature_12` + -21.54429 * `IL`.`Feature_13` + 0.01815532 * `IL`.`Feature_14` + 0.07568846 * `IL`.`Feature_15` + 0.1037695 * `IL`.`Feature_16` + 0.04051906 * `IL`.`Feature_17` + 0.02759064 * `IL`.`Feature_18` + 0.01515087 * `IL`.`Feature_19` + -0.2535786 * `IL`.`Feature_20` + 25.40398 * `IL`.`Feature_21` + 26.11353 * `IL`.`Feature_22` + -15.33097 * `IL`.`Feature_23` + 0.2188512 * `IL`.`Feature_24` + 1.174715 * `IL`.`Feature_25` + 1.756629 * `IL`.`Feature_26` + 0.499643 * `IL`.`Feature_27` + 0.4251463 * `IL`.`Feature_28` + 0.1373388 * `IL`.`Feature_29` + -0.3665894 AS `NEUR_1_8`, 0.03098877 * `IL`.`Feature_0` + 0.06020092 * `IL`.`Feature_1` + 0.1581557 * `IL`.`Feature_2` + 0.5862178 * `IL`.`Feature_3` + 0.004933233 * `IL`.`Feature_4` + -0.002502849 * `IL`.`Feature_5` + -0.002744771 * `IL`.`Feature_6` + 0.0001937088 * `IL`.`Feature_7` + -0.003156583 * `IL`.`Feature_8` + 0.0018443 * `IL`.`Feature_9` + -0.006762499 * `IL`.`Feature_10` + 0.007952694 * `IL`.`Feature_11` + -0.0009193961 * `IL`.`Feature_12` + 0.03915426 * `IL`.`Feature_13` + -0.007243606 * `IL`.`Feature_14` + 0.003184976 * `IL`.`Feature_15` + 0.005411436 * `IL`.`Feature_16` + -0.007246799 * `IL`.`Feature_17` + 0.007267009 * `IL`.`Feature_18` + -0.0004418271 * `IL`.`Feature_19` + 0.03541371 * `IL`.`Feature_20` + 0.06779593 * `IL`.`Feature_21` + 0.1800425 * `IL`.`Feature_22` + 0.7311655 * `IL`.`Feature_23` + 0.008016749 * `IL`.`Feature_24` + 0.0008984686 * `IL`.`Feature_25` + -0.003104752 * `IL`.`Feature_26` + -0.001176483 * `IL`.`Feature_27` + -0.0002802782 * `IL`.`Feature_28` + -0.0009846536 * `IL`.`Feature_29` + 0.0002015694 AS `NEUR_1_9`, -0.04337332 * `IL`.`Feature_0` + -0.1007694 * `IL`.`Feature_1` + -0.3024567 * `IL`.`Feature_2` + -1.184795 * `IL`.`Feature_3` + 0.004506658 * `IL`.`Feature_4` + -0.002333353 * `IL`.`Feature_5` + 0.004578976 * `IL`.`Feature_6` + 0.001716559 * `IL`.`Feature_7` + -0.004985446 * `IL`.`Feature_8` + 0.003802366 * `IL`.`Feature_9` + 0.003350062 * `IL`.`Feature_10` + -0.005012186 * `IL`.`Feature_11` + -0.01543318 * `IL`.`Feature_12` + -0.07191491 * `IL`.`Feature_13` + -0.006321297 * `IL`.`Feature_14` + -0.005490142 * `IL`.`Feature_15` + 0.002527688 * `IL`.`Feature_16` + -0.003289606 * `IL`.`Feature_17` + -0.005779471 * `IL`.`Feature_18` + 0.004223271 * `IL`.`Feature_19` + -0.04928806 * `IL`.`Feature_20` + -0.1357279 * `IL`.`Feature_21` + -0.3377179 * `IL`.`Feature_22` + -1.458026 * `IL`.`Feature_23` + 0.003992751 * `IL`.`Feature_24` + 0.005077668 * `IL`.`Feature_25` + 0.004147086 * `IL`.`Feature_26` + 0.003574699 * `IL`.`Feature_27` + -0.005330631 * `IL`.`Feature_28` + -0.00465028 * `IL`.`Feature_29` + -0.00934738 AS `NEUR_1_10`, 0.0003956167 * `IL`.`Feature_0` + 0.002805757 * `IL`.`Feature_1` + 0.02627821 * `IL`.`Feature_2` + 0.1591395 * `IL`.`Feature_3` + 0.0005351609 * `IL`.`Feature_4` + 0.003674136 * `IL`.`Feature_5` + -0.006168989 * `IL`.`Feature_6` + -0.00126378 * `IL`.`Feature_7` + 0.0007088391 * `IL`.`Feature_8` + -0.00370609 * `IL`.`Feature_9` + -0.006286039 * `IL`.`Feature_10` + -0.001355766 * `IL`.`Feature_11` + 0.003813398 * `IL`.`Feature_12` + 0.004097183 * `IL`.`Feature_13` + 0.004590522 * `IL`.`Feature_14` + -0.006851816 * `IL`.`Feature_15` + -0.004402611 * `IL`.`Feature_16` + 0.002414182 * `IL`.`Feature_17` + -0.004857836 * `IL`.`Feature_18` + 0.001754739 * `IL`.`Feature_19` + 0.0008650277 * `IL`.`Feature_20` + 0.01581882 * `IL`.`Feature_21` + 0.02697163 * `IL`.`Feature_22` + 0.1851243 * `IL`.`Feature_23` + 0.002218215 * `IL`.`Feature_24` + -0.007176081 * `IL`.`Feature_25` + 0.002977038 * `IL`.`Feature_26` + -0.007135643 * `IL`.`Feature_27` + -0.006810379 * `IL`.`Feature_28` + 0.007311674 * `IL`.`Feature_29` + 0.007223683 AS `NEUR_1_11`, -0.02160311 * `IL`.`Feature_0` + -0.0464027 * `IL`.`Feature_1` + -0.1435448 * `IL`.`Feature_2` + -0.5770935 * `IL`.`Feature_3` + -0.003399934 * `IL`.`Feature_4` + -0.007707017 * `IL`.`Feature_5` + 0.003607865 * `IL`.`Feature_6` + 0.004511829 * `IL`.`Feature_7` + 0.003102664 * `IL`.`Feature_8` + 0.002444715 * `IL`.`Feature_9` + 0.004592558 * `IL`.`Feature_10` + -0.007112525 * `IL`.`Feature_11` + -0.0009885662 * `IL`.`Feature_12` + -0.0355252 * `IL`.`Feature_13` + -0.004652017 * `IL`.`Feature_14` + 0.0007354271 * `IL`.`Feature_15` + 0.004422122 * `IL`.`Feature_16` + 0.001400287 * `IL`.`Feature_17` + -0.002693056 * `IL`.`Feature_18` + -0.00115733 * `IL`.`Feature_19` + -0.02275488 * `IL`.`Feature_20` + -0.06934944 * `IL`.`Feature_21` + -0.1708083 * `IL`.`Feature_22` + -0.7070089 * `IL`.`Feature_23` + 0.005674856 * `IL`.`Feature_24` + -0.00102673 * `IL`.`Feature_25` + -0.006287743 * `IL`.`Feature_26` + -0.001584572 * `IL`.`Feature_27` + -0.00528196 * `IL`.`Feature_28` + -0.004891951 * `IL`.`Feature_29` + 0.0008384833 AS `NEUR_1_12` 
FROM `IL`), 
`HL_1_logistic` AS 
(SELECT `HL_BA_1`.`KEY` AS `KEY`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_1`)))) AS `NEUR_1_1`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_2`)))) AS `NEUR_1_2`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_3`)))) AS `NEUR_1_3`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_4`)))) AS `NEUR_1_4`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_5`)))) AS `NEUR_1_5`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_6`)))) AS `NEUR_1_6`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_7`)))) AS `NEUR_1_7`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_8`)))) AS `NEUR_1_8`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_9`)))) AS `NEUR_1_9`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_10`)))) AS `NEUR_1_10`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_11`)))) AS `NEUR_1_11`, 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -`HL_BA_1`.`NEUR_1_12`)))) AS `NEUR_1_12` 
FROM `HL_BA_1`), 
`HL_1_logistic_1` AS 
(SELECT `HL_1_logistic`.`KEY` AS `KEY`, `HL_1_logistic`.`NEUR_1_1` AS `NEUR_1_1`, `HL_1_logistic`.`NEUR_1_2` AS `NEUR_1_2`, `HL_1_logistic`.`NEUR_1_3` AS `NEUR_1_3`, `HL_1_logistic`.`NEUR_1_4` AS `NEUR_1_4`, `HL_1_logistic`.`NEUR_1_5` AS `NEUR_1_5`, `HL_1_logistic`.`NEUR_1_6` AS `NEUR_1_6`, `HL_1_logistic`.`NEUR_1_7` AS `NEUR_1_7`, `HL_1_logistic`.`NEUR_1_8` AS `NEUR_1_8`, `HL_1_logistic`.`NEUR_1_9` AS `NEUR_1_9`, `HL_1_logistic`.`NEUR_1_10` AS `NEUR_1_10`, `HL_1_logistic`.`NEUR_1_11` AS `NEUR_1_11`, `HL_1_logistic`.`NEUR_1_12` AS `NEUR_1_12` 
FROM `HL_1_logistic`), 
`OL_BA` AS 
(SELECT `HL_1_logistic_1`.`KEY` AS `KEY`, -2.437058 * `HL_1_logistic_1`.`NEUR_1_1` + 0.4479586 * `HL_1_logistic_1`.`NEUR_1_2` + -0.4543029 * `HL_1_logistic_1`.`NEUR_1_3` + 0.1051001 * `HL_1_logistic_1`.`NEUR_1_4` + 0.9336391 * `HL_1_logistic_1`.`NEUR_1_5` + 0.08338073 * `HL_1_logistic_1`.`NEUR_1_6` + 0.09773149 * `HL_1_logistic_1`.`NEUR_1_7` + 4.679375 * `HL_1_logistic_1`.`NEUR_1_8` + 0.1673569 * `HL_1_logistic_1`.`NEUR_1_9` + 0.3920722 * `HL_1_logistic_1`.`NEUR_1_10` + 0.1886823 * `HL_1_logistic_1`.`NEUR_1_11` + 0.1655874 * `HL_1_logistic_1`.`NEUR_1_12` + 0.1976872 AS `NEUR_2_1` 
FROM `HL_1_logistic_1`), 
`OL_softmax` AS 
(SELECT `OL_BA`.`KEY` AS `KEY`, `OL_BA`.`NEUR_2_1` AS `NEUR_2_1` 
FROM `OL_BA`), 
`OL_softmax_1` AS 
(SELECT `OL_softmax`.`KEY` AS `KEY`, `OL_softmax`.`NEUR_2_1` AS `NEUR_2_1` 
FROM `OL_softmax`), 
orig_cte AS 
(SELECT `OL_softmax_1`.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, 1.0 - `OL_softmax_1`.`NEUR_2_1` AS `Proba_0`, `OL_softmax_1`.`NEUR_2_1` AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, CAST(NULL AS SIGNED INTEGER) AS `Decision`, NULL AS `DecisionProba` 
FROM `OL_softmax_1`), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`Decision` AS `Decision`, orig_cte.`DecisionProba` AS `DecisionProba`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_Proba` AS `max_Proba` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`Proba`) AS `max_Proba` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.class AS class, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Proba` AS `max_Proba` 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.`KEY_u` = score_max.`KEY`), 
arg_max_cte AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Proba` AS `max_Proba`, `arg_max_t_Proba`.`KEY_Proba` AS `KEY_Proba`, `arg_max_t_Proba`.`arg_max_Proba` AS `arg_max_Proba` 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Proba`, max(union_with_max.class) AS `arg_max_Proba` 
FROM union_with_max 
WHERE union_with_max.`max_Proba` <= union_with_max.`Proba` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Proba` ON score_max.`KEY` = `arg_max_t_Proba`.`KEY_Proba`)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Proba_0` AS `Proba_0`, arg_max_cte.`Proba_1` AS `Proba_1`, CASE WHEN (arg_max_cte.`Proba_0` IS NULL OR arg_max_cte.`Proba_0` > 0.0) THEN ln(arg_max_cte.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`Proba_1` IS NULL OR arg_max_cte.`Proba_1` > 0.0) THEN ln(arg_max_cte.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, arg_max_cte.`arg_max_Proba` AS `Decision`, arg_max_cte.`max_Proba` AS `DecisionProba` 
FROM arg_max_cte