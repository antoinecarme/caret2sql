-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretClassifier_glmnet
-- Dataset : digits
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH linear_input AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS DOUBLE PRECISION) AS "Feature_0", CAST("ADS"."Feature_1" AS DOUBLE PRECISION) AS "Feature_1", CAST("ADS"."Feature_2" AS DOUBLE PRECISION) AS "Feature_2", CAST("ADS"."Feature_3" AS DOUBLE PRECISION) AS "Feature_3", CAST("ADS"."Feature_4" AS DOUBLE PRECISION) AS "Feature_4", CAST("ADS"."Feature_5" AS DOUBLE PRECISION) AS "Feature_5", CAST("ADS"."Feature_6" AS DOUBLE PRECISION) AS "Feature_6", CAST("ADS"."Feature_7" AS DOUBLE PRECISION) AS "Feature_7", CAST("ADS"."Feature_8" AS DOUBLE PRECISION) AS "Feature_8", CAST("ADS"."Feature_9" AS DOUBLE PRECISION) AS "Feature_9", CAST("ADS"."Feature_10" AS DOUBLE PRECISION) AS "Feature_10", CAST("ADS"."Feature_11" AS DOUBLE PRECISION) AS "Feature_11", CAST("ADS"."Feature_12" AS DOUBLE PRECISION) AS "Feature_12", CAST("ADS"."Feature_13" AS DOUBLE PRECISION) AS "Feature_13", CAST("ADS"."Feature_14" AS DOUBLE PRECISION) AS "Feature_14", CAST("ADS"."Feature_15" AS DOUBLE PRECISION) AS "Feature_15", CAST("ADS"."Feature_16" AS DOUBLE PRECISION) AS "Feature_16", CAST("ADS"."Feature_17" AS DOUBLE PRECISION) AS "Feature_17", CAST("ADS"."Feature_18" AS DOUBLE PRECISION) AS "Feature_18", CAST("ADS"."Feature_19" AS DOUBLE PRECISION) AS "Feature_19", CAST("ADS"."Feature_20" AS DOUBLE PRECISION) AS "Feature_20", CAST("ADS"."Feature_21" AS DOUBLE PRECISION) AS "Feature_21", CAST("ADS"."Feature_22" AS DOUBLE PRECISION) AS "Feature_22", CAST("ADS"."Feature_23" AS DOUBLE PRECISION) AS "Feature_23", CAST("ADS"."Feature_24" AS DOUBLE PRECISION) AS "Feature_24", CAST("ADS"."Feature_25" AS DOUBLE PRECISION) AS "Feature_25", CAST("ADS"."Feature_26" AS DOUBLE PRECISION) AS "Feature_26", CAST("ADS"."Feature_27" AS DOUBLE PRECISION) AS "Feature_27", CAST("ADS"."Feature_28" AS DOUBLE PRECISION) AS "Feature_28", CAST("ADS"."Feature_29" AS DOUBLE PRECISION) AS "Feature_29", CAST("ADS"."Feature_30" AS DOUBLE PRECISION) AS "Feature_30", CAST("ADS"."Feature_31" AS DOUBLE PRECISION) AS "Feature_31", CAST("ADS"."Feature_32" AS DOUBLE PRECISION) AS "Feature_32", CAST("ADS"."Feature_33" AS DOUBLE PRECISION) AS "Feature_33", CAST("ADS"."Feature_34" AS DOUBLE PRECISION) AS "Feature_34", CAST("ADS"."Feature_35" AS DOUBLE PRECISION) AS "Feature_35", CAST("ADS"."Feature_36" AS DOUBLE PRECISION) AS "Feature_36", CAST("ADS"."Feature_37" AS DOUBLE PRECISION) AS "Feature_37", CAST("ADS"."Feature_38" AS DOUBLE PRECISION) AS "Feature_38", CAST("ADS"."Feature_39" AS DOUBLE PRECISION) AS "Feature_39", CAST("ADS"."Feature_40" AS DOUBLE PRECISION) AS "Feature_40", CAST("ADS"."Feature_41" AS DOUBLE PRECISION) AS "Feature_41", CAST("ADS"."Feature_42" AS DOUBLE PRECISION) AS "Feature_42", CAST("ADS"."Feature_43" AS DOUBLE PRECISION) AS "Feature_43", CAST("ADS"."Feature_44" AS DOUBLE PRECISION) AS "Feature_44", CAST("ADS"."Feature_45" AS DOUBLE PRECISION) AS "Feature_45", CAST("ADS"."Feature_46" AS DOUBLE PRECISION) AS "Feature_46", CAST("ADS"."Feature_47" AS DOUBLE PRECISION) AS "Feature_47", CAST("ADS"."Feature_48" AS DOUBLE PRECISION) AS "Feature_48", CAST("ADS"."Feature_49" AS DOUBLE PRECISION) AS "Feature_49", CAST("ADS"."Feature_50" AS DOUBLE PRECISION) AS "Feature_50", CAST("ADS"."Feature_51" AS DOUBLE PRECISION) AS "Feature_51", CAST("ADS"."Feature_52" AS DOUBLE PRECISION) AS "Feature_52", CAST("ADS"."Feature_53" AS DOUBLE PRECISION) AS "Feature_53", CAST("ADS"."Feature_54" AS DOUBLE PRECISION) AS "Feature_54", CAST("ADS"."Feature_55" AS DOUBLE PRECISION) AS "Feature_55", CAST("ADS"."Feature_56" AS DOUBLE PRECISION) AS "Feature_56", CAST("ADS"."Feature_57" AS DOUBLE PRECISION) AS "Feature_57", CAST("ADS"."Feature_58" AS DOUBLE PRECISION) AS "Feature_58", CAST("ADS"."Feature_59" AS DOUBLE PRECISION) AS "Feature_59", CAST("ADS"."Feature_60" AS DOUBLE PRECISION) AS "Feature_60", CAST("ADS"."Feature_61" AS DOUBLE PRECISION) AS "Feature_61", CAST("ADS"."Feature_62" AS DOUBLE PRECISION) AS "Feature_62", CAST("ADS"."Feature_63" AS DOUBLE PRECISION) AS "Feature_63" 
FROM digits AS "ADS"), 
linear_model_cte AS 
(SELECT linear_input."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_0" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_1" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_2" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_3" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_4" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_5" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_6" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_7" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_8" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_9" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_10" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_11" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_12" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_13" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_14" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_15" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_16" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_17" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_18" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_19" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_20" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_21" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_22" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_23" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_24" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_25" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_26" + CAST(-0.001808024649447 AS DOUBLE PRECISION) * linear_input."Feature_27" + CAST(-0.008647379477473 AS DOUBLE PRECISION) * linear_input."Feature_28" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_29" + CAST(0.000489831594483 AS DOUBLE PRECISION) * linear_input."Feature_30" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_31" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_32" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_33" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_34" + CAST(-0.003441009411856 AS DOUBLE PRECISION) * linear_input."Feature_35" + CAST(-0.010612287370255 AS DOUBLE PRECISION) * linear_input."Feature_36" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_37" + CAST(0.002270963770014 AS DOUBLE PRECISION) * linear_input."Feature_38" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_39" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_40" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_41" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_42" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_43" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_44" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_45" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_46" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_47" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_48" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_49" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_50" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_51" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_52" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_53" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_54" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_55" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_56" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_57" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_58" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_59" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_60" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_61" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_62" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_63" + CAST(0.144620980083361 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_0" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_1" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_2" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_3" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_4" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_5" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_6" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_7" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_8" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_9" + CAST(-0.002659065544021 AS DOUBLE PRECISION) * linear_input."Feature_10" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_11" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_12" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_13" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_14" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_15" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_16" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_17" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_18" + CAST(0.00659570942353 AS DOUBLE PRECISION) * linear_input."Feature_19" + CAST(0.002340753023211 AS DOUBLE PRECISION) * linear_input."Feature_20" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_21" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_22" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_23" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_24" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_25" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_26" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_27" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_28" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_29" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_30" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_31" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_32" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_33" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_34" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_35" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_36" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_37" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_38" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_39" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_40" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_41" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_42" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_43" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_44" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_45" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_46" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_47" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_48" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_49" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_50" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_51" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_52" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_53" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_54" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_55" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_56" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_57" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_58" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_59" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_60" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_61" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_62" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_63" + CAST(-0.058919334448548 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_0" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_1" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_2" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_3" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_4" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_5" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_6" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_7" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_8" + CAST(0.000358973310938 AS DOUBLE PRECISION) * linear_input."Feature_9" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_10" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_11" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_12" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_13" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_14" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_15" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_16" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_17" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_18" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_19" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_20" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_21" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_22" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_23" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_24" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_25" + CAST(-0.003389363803215 AS DOUBLE PRECISION) * linear_input."Feature_26" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_27" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_28" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_29" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_30" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_31" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_32" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_33" + CAST(-0.000118518162123 AS DOUBLE PRECISION) * linear_input."Feature_34" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_35" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_36" + CAST(-0.00178663784935 AS DOUBLE PRECISION) * linear_input."Feature_37" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_38" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_39" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_40" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_41" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_42" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_43" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_44" + CAST(-0.001575452995325 AS DOUBLE PRECISION) * linear_input."Feature_45" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_46" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_47" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_48" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_49" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_50" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_51" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_52" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_53" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_54" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_55" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_56" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_57" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_58" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_59" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_60" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_61" + CAST(0.01072917842643 AS DOUBLE PRECISION) * linear_input."Feature_62" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_63" + CAST(0.020485494076458 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_0" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_1" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_2" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_3" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_4" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_5" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_6" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_7" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_8" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_9" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_10" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_11" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_12" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_13" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_14" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_15" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_16" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_17" + CAST(-0.002017044543385 AS DOUBLE PRECISION) * linear_input."Feature_18" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_19" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_20" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_21" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_22" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_23" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_24" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_25" + CAST(-0.003598884811575 AS DOUBLE PRECISION) * linear_input."Feature_26" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_27" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_28" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_29" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_30" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_31" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_32" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_33" + CAST(-0.000628706948599 AS DOUBLE PRECISION) * linear_input."Feature_34" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_35" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_36" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_37" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_38" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_39" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_40" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_41" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_42" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_43" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_44" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_45" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_46" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_47" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_48" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_49" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_50" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_51" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_52" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_53" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_54" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_55" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_56" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_57" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_58" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_59" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_60" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_61" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_62" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_63" + CAST(0.021423960415098 AS DOUBLE PRECISION) AS "Score_3", CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_0" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_1" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_2" + CAST(-0.002236938312976 AS DOUBLE PRECISION) * linear_input."Feature_3" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_4" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_5" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_6" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_7" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_8" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_9" + CAST(-0.005530251577147 AS DOUBLE PRECISION) * linear_input."Feature_10" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_11" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_12" + CAST(-0.000393751942225 AS DOUBLE PRECISION) * linear_input."Feature_13" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_14" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_15" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_16" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_17" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_18" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_19" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_20" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_21" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_22" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_23" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_24" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_25" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_26" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_27" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_28" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_29" + CAST(0.00079652191129 AS DOUBLE PRECISION) * linear_input."Feature_30" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_31" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_32" + CAST(0.02337944328869 AS DOUBLE PRECISION) * linear_input."Feature_33" + CAST(0.001104441083748 AS DOUBLE PRECISION) * linear_input."Feature_34" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_35" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_36" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_37" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_38" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_39" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_40" + CAST(0.01953407041724 AS DOUBLE PRECISION) * linear_input."Feature_41" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_42" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_43" + CAST(0.001513407567588 AS DOUBLE PRECISION) * linear_input."Feature_44" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_45" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_46" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_47" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_48" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_49" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_50" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_51" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_52" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_53" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_54" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_55" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_56" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_57" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_58" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_59" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_60" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_61" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_62" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_63" + CAST(-0.024935522874663 AS DOUBLE PRECISION) AS "Score_4", CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_0" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_1" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_2" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_3" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_4" + CAST(0.002577221477999 AS DOUBLE PRECISION) * linear_input."Feature_5" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_6" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_7" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_8" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_9" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_10" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_11" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_12" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_13" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_14" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_15" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_16" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_17" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_18" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_19" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_20" + CAST(-0.003362363359178 AS DOUBLE PRECISION) * linear_input."Feature_21" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_22" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_23" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_24" + CAST(0.000444207992116 AS DOUBLE PRECISION) * linear_input."Feature_25" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_26" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_27" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_28" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_29" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_30" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_31" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_32" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_33" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_34" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_35" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_36" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_37" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_38" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_39" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_40" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_41" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_42" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_43" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_44" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_45" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_46" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_47" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_48" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_49" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_50" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_51" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_52" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_53" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_54" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_55" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_56" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_57" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_58" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_59" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_60" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_61" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_62" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_63" + CAST(-0.032497820925933 AS DOUBLE PRECISION) AS "Score_5", CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_0" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_1" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_2" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_3" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_4" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_5" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_6" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_7" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_8" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_9" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_10" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_11" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_12" + CAST(-0.002696124236176 AS DOUBLE PRECISION) * linear_input."Feature_13" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_14" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_15" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_16" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_17" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_18" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_19" + CAST(-8.9862820002e-05 AS DOUBLE PRECISION) * linear_input."Feature_20" + CAST(-0.003191085841959 AS DOUBLE PRECISION) * linear_input."Feature_21" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_22" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_23" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_24" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_25" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_26" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_27" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_28" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_29" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_30" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_31" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_32" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_33" + CAST(0.001962192788726 AS DOUBLE PRECISION) * linear_input."Feature_34" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_35" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_36" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_37" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_38" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_39" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_40" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_41" + CAST(0.002694952378905 AS DOUBLE PRECISION) * linear_input."Feature_42" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_43" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_44" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_45" + CAST(0.007254515334028 AS DOUBLE PRECISION) * linear_input."Feature_46" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_47" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_48" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_49" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_50" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_51" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_52" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_53" + CAST(0.00806694156688 AS DOUBLE PRECISION) * linear_input."Feature_54" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_55" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_56" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_57" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_58" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_59" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_60" + CAST(0.000342438898546 AS DOUBLE PRECISION) * linear_input."Feature_61" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_62" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_63" + CAST(-0.103005737355811 AS DOUBLE PRECISION) AS "Score_6", CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_0" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_1" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_2" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_3" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_4" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_5" + CAST(0.003819671039887 AS DOUBLE PRECISION) * linear_input."Feature_6" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_7" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_8" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_9" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_10" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_11" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_12" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_13" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_14" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_15" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_16" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_17" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_18" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_19" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_20" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_21" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_22" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_23" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_24" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_25" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_26" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_27" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_28" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_29" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_30" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_31" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_32" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_33" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_34" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_35" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_36" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_37" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_38" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_39" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_40" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_41" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_42" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_43" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_44" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_45" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_46" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_47" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_48" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_49" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_50" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_51" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_52" + CAST(-0.005389015536533 AS DOUBLE PRECISION) * linear_input."Feature_53" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_54" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_55" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_56" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_57" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_58" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_59" + CAST(-0.017450787679554 AS DOUBLE PRECISION) * linear_input."Feature_60" + CAST(-0.000772919277635 AS DOUBLE PRECISION) * linear_input."Feature_61" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_62" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_63" + CAST(0.176840840435869 AS DOUBLE PRECISION) AS "Score_7", CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_0" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_1" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_2" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_3" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_4" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_5" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_6" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_7" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_8" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_9" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_10" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_11" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_12" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_13" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_14" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_15" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_16" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_17" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_18" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_19" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_20" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_21" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_22" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_23" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_24" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_25" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_26" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_27" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_28" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_29" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_30" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_31" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_32" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_33" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_34" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_35" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_36" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_37" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_38" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_39" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_40" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_41" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_42" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_43" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_44" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_45" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_46" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_47" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_48" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_49" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_50" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_51" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_52" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_53" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_54" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_55" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_56" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_57" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_58" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_59" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_60" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_61" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_62" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_63" + CAST(-0.107036599735244 AS DOUBLE PRECISION) AS "Score_8", CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_0" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_1" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_2" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_3" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_4" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_5" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_6" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_7" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_8" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_9" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_10" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_11" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_12" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_13" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_14" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_15" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_16" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_17" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_18" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_19" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_20" + CAST(0.000442548767571 AS DOUBLE PRECISION) * linear_input."Feature_21" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_22" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_23" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_24" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_25" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_26" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_27" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_28" + CAST(0.002255642393791 AS DOUBLE PRECISION) * linear_input."Feature_29" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_30" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_31" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_32" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_33" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_34" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_35" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_36" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_37" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_38" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_39" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_40" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_41" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_42" + CAST(-0.000787619989069 AS DOUBLE PRECISION) * linear_input."Feature_43" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_44" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_45" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_46" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_47" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_48" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_49" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_50" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_51" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_52" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_53" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_54" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_55" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_56" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_57" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_58" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_59" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_60" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_61" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_62" + CAST(0.0 AS DOUBLE PRECISION) * linear_input."Feature_63" + CAST(-0.036976259670587 AS DOUBLE PRECISION) AS "Score_9" 
FROM linear_input), 
linear_model_cte_logistic AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", linear_model_cte."Score_4" AS "Score_4", linear_model_cte."Score_5" AS "Score_5", linear_model_cte."Score_6" AS "Score_6", linear_model_cte."Score_7" AS "Score_7", linear_model_cte."Score_8" AS "Score_8", linear_model_cte."Score_9" AS "Score_9" 
FROM linear_model_cte), 
orig_cte AS 
(SELECT linear_model_cte_logistic."KEY" AS "KEY", linear_model_cte_logistic."Score_0" AS "Score_0", linear_model_cte_logistic."Score_1" AS "Score_1", linear_model_cte_logistic."Score_2" AS "Score_2", linear_model_cte_logistic."Score_3" AS "Score_3", linear_model_cte_logistic."Score_4" AS "Score_4", linear_model_cte_logistic."Score_5" AS "Score_5", linear_model_cte_logistic."Score_6" AS "Score_6", linear_model_cte_logistic."Score_7" AS "Score_7", linear_model_cte_logistic."Score_8" AS "Score_8", linear_model_cte_logistic."Score_9" AS "Score_9", CAST(NULL AS DOUBLE PRECISION) AS "Proba_0", CAST(NULL AS DOUBLE PRECISION) AS "Proba_1", CAST(NULL AS DOUBLE PRECISION) AS "Proba_2", CAST(NULL AS DOUBLE PRECISION) AS "Proba_3", CAST(NULL AS DOUBLE PRECISION) AS "Proba_4", CAST(NULL AS DOUBLE PRECISION) AS "Proba_5", CAST(NULL AS DOUBLE PRECISION) AS "Proba_6", CAST(NULL AS DOUBLE PRECISION) AS "Proba_7", CAST(NULL AS DOUBLE PRECISION) AS "Proba_8", CAST(NULL AS DOUBLE PRECISION) AS "Proba_9", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_1", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_2", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_3", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_4", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_5", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_6", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_7", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_8", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE PRECISION) AS "DecisionProba" 
FROM linear_model_cte_logistic), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu."class" AS "class", scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS "class", orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS "class", orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS "class", orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS "class", orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS "class", orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS "class", orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS "class", orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS "class", orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS "class", orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS "class", orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_0" - score_max."max_Score")) AS "exp_delta_Score_0", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_1" - score_max."max_Score")) AS "exp_delta_Score_1", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_2" - score_max."max_Score")) AS "exp_delta_Score_2", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_3" - score_max."max_Score")) AS "exp_delta_Score_3", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_4" - score_max."max_Score")) AS "exp_delta_Score_4", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_5" - score_max."max_Score")) AS "exp_delta_Score_5", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_6" - score_max."max_Score")) AS "exp_delta_Score_6", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_7" - score_max."max_Score")) AS "exp_delta_Score_7", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_8" - score_max."max_Score")) AS "exp_delta_Score_8", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_9" - score_max."max_Score")) AS "exp_delta_Score_9" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu."class" AS "class", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS "class", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS "class", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS "class", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS "class", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 4 AS "class", score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 5 AS "class", score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 6 AS "class", score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 7 AS "class", score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 8 AS "class", score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 9 AS "class", score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Score_4" AS "Score_4", score_soft_max_deltas."Score_5" AS "Score_5", score_soft_max_deltas."Score_6" AS "Score_6", score_soft_max_deltas."Score_7" AS "Score_7", score_soft_max_deltas."Score_8" AS "Score_8", score_soft_max_deltas."Score_9" AS "Score_9", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."Proba_4" AS "Proba_4", score_soft_max_deltas."Proba_5" AS "Proba_5", score_soft_max_deltas."Proba_6" AS "Proba_6", score_soft_max_deltas."Proba_7" AS "Proba_7", score_soft_max_deltas."Proba_8" AS "Proba_8", score_soft_max_deltas."Proba_9" AS "Proba_9", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."LogProba_4" AS "LogProba_4", score_soft_max_deltas."LogProba_5" AS "LogProba_5", score_soft_max_deltas."LogProba_6" AS "LogProba_6", score_soft_max_deltas."LogProba_7" AS "LogProba_7", score_soft_max_deltas."LogProba_8" AS "LogProba_8", score_soft_max_deltas."LogProba_9" AS "LogProba_9", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score_9", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union."class" AS "class", score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3", soft_max_comp."SoftProba_4" AS "SoftProba_4", soft_max_comp."SoftProba_5" AS "SoftProba_5", soft_max_comp."SoftProba_6" AS "SoftProba_6", soft_max_comp."SoftProba_7" AS "SoftProba_7", soft_max_comp."SoftProba_8" AS "SoftProba_8", soft_max_comp."SoftProba_9" AS "SoftProba_9" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", max(union_with_max."class") AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3", score_soft_max."exp_delta_Score_4" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_4", score_soft_max."exp_delta_Score_5" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_5", score_soft_max."exp_delta_Score_6" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_6", score_soft_max."exp_delta_Score_7" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_7", score_soft_max."exp_delta_Score_8" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_8", score_soft_max."exp_delta_Score_9" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_9" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_2", CAST(NULL AS DOUBLE PRECISION) AS "Score_3", CAST(NULL AS DOUBLE PRECISION) AS "Score_4", CAST(NULL AS DOUBLE PRECISION) AS "Score_5", CAST(NULL AS DOUBLE PRECISION) AS "Score_6", CAST(NULL AS DOUBLE PRECISION) AS "Score_7", CAST(NULL AS DOUBLE PRECISION) AS "Score_8", CAST(NULL AS DOUBLE PRECISION) AS "Score_9", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", arg_max_cte."SoftProba_4" AS "Proba_4", arg_max_cte."SoftProba_5" AS "Proba_5", arg_max_cte."SoftProba_6" AS "Proba_6", arg_max_cte."SoftProba_7" AS "Proba_7", arg_max_cte."SoftProba_8" AS "Proba_8", arg_max_cte."SoftProba_9" AS "Proba_9", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", CASE WHEN (arg_max_cte."SoftProba_4" IS NULL OR arg_max_cte."SoftProba_4" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_4") ELSE -1.79769313486231e+308 END AS "LogProba_4", CASE WHEN (arg_max_cte."SoftProba_5" IS NULL OR arg_max_cte."SoftProba_5" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_5") ELSE -1.79769313486231e+308 END AS "LogProba_5", CASE WHEN (arg_max_cte."SoftProba_6" IS NULL OR arg_max_cte."SoftProba_6" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_6") ELSE -1.79769313486231e+308 END AS "LogProba_6", CASE WHEN (arg_max_cte."SoftProba_7" IS NULL OR arg_max_cte."SoftProba_7" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_7") ELSE -1.79769313486231e+308 END AS "LogProba_7", CASE WHEN (arg_max_cte."SoftProba_8" IS NULL OR arg_max_cte."SoftProba_8" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_8") ELSE -1.79769313486231e+308 END AS "LogProba_8", CASE WHEN (arg_max_cte."SoftProba_9" IS NULL OR arg_max_cte."SoftProba_9" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_9") ELSE -1.79769313486231e+308 END AS "LogProba_9", arg_max_cte."arg_max_Score" AS "Decision", greatest(arg_max_cte."SoftProba_0", arg_max_cte."SoftProba_1", arg_max_cte."SoftProba_2", arg_max_cte."SoftProba_3", arg_max_cte."SoftProba_4", arg_max_cte."SoftProba_5", arg_max_cte."SoftProba_6", arg_max_cte."SoftProba_7", arg_max_cte."SoftProba_8", arg_max_cte."SoftProba_9") AS "DecisionProba" 
FROM arg_max_cte