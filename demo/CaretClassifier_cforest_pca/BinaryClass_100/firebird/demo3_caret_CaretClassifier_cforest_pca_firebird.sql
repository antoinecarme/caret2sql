-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretClassifier_cforest_pca
-- Dataset : BinaryClass_100
-- Database : firebird


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "ADS_sca_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", (CAST("ADS"."Feature_0" AS DOUBLE PRECISION) - 0.14903440845324958) / 0.8691099870450097 AS "Feature_0", (CAST("ADS"."Feature_1" AS DOUBLE PRECISION) - -0.033676364930322625) / 0.9638893720113904 AS "Feature_1", (CAST("ADS"."Feature_2" AS DOUBLE PRECISION) - 0.11933316355610832) / 0.9951801463609388 AS "Feature_2", (CAST("ADS"."Feature_3" AS DOUBLE PRECISION) - -0.1736920313018926) / 0.9313950675106036 AS "Feature_3", (CAST("ADS"."Feature_4" AS DOUBLE PRECISION) - 0.06534355492106353) / 1.262824129765315 AS "Feature_4", (CAST("ADS"."Feature_5" AS DOUBLE PRECISION) - 0.24362289937641535) / 1.035490758815846 AS "Feature_5", (CAST("ADS"."Feature_6" AS DOUBLE PRECISION) - -0.11367357911147097) / 0.8979434847923439 AS "Feature_6", (CAST("ADS"."Feature_7" AS DOUBLE PRECISION) - -0.21176443876708545) / 0.9059790755862294 AS "Feature_7", (CAST("ADS"."Feature_8" AS DOUBLE PRECISION) - 0.11513979914587345) / 1.0473597010523412 AS "Feature_8", (CAST("ADS"."Feature_9" AS DOUBLE PRECISION) - 0.02911192493858983) / 0.824356699285006 AS "Feature_9", (CAST("ADS"."Feature_10" AS DOUBLE PRECISION) - 0.11077189268614673) / 1.132132513765829 AS "Feature_10", (CAST("ADS"."Feature_11" AS DOUBLE PRECISION) - 0.001458037542456893) / 1.0648515291804037 AS "Feature_11", (CAST("ADS"."Feature_12" AS DOUBLE PRECISION) - -0.07737392918672288) / 0.9478519645907606 AS "Feature_12", (CAST("ADS"."Feature_13" AS DOUBLE PRECISION) - -0.1139572875884789) / 0.9906450190430408 AS "Feature_13", (CAST("ADS"."Feature_14" AS DOUBLE PRECISION) - -0.1256763128504336) / 1.076445004016802 AS "Feature_14", (CAST("ADS"."Feature_15" AS DOUBLE PRECISION) - -0.057995978339856875) / 0.963264019360671 AS "Feature_15", (CAST("ADS"."Feature_16" AS DOUBLE PRECISION) - -0.14181264174476002) / 0.946210645427208 AS "Feature_16", (CAST("ADS"."Feature_17" AS DOUBLE PRECISION) - -0.1265454286904762) / 1.0459654190309742 AS "Feature_17", (CAST("ADS"."Feature_18" AS DOUBLE PRECISION) - -0.07812248683518372) / 1.3307191722212133 AS "Feature_18", (CAST("ADS"."Feature_19" AS DOUBLE PRECISION) - -0.07648737683022473) / 0.954881716165812 AS "Feature_19", (CAST("ADS"."Feature_20" AS DOUBLE PRECISION) - 0.058642624278694815) / 0.9598762348106546 AS "Feature_20", (CAST("ADS"."Feature_21" AS DOUBLE PRECISION) - 0.10844037074552848) / 1.2185700957895491 AS "Feature_21", (CAST("ADS"."Feature_22" AS DOUBLE PRECISION) - 0.06006596933344149) / 0.9249493281671358 AS "Feature_22", (CAST("ADS"."Feature_23" AS DOUBLE PRECISION) - 0.15255771271935042) / 0.9358249141560888 AS "Feature_23", (CAST("ADS"."Feature_24" AS DOUBLE PRECISION) - -0.047123256877991036) / 0.7770574254927761 AS "Feature_24", (CAST("ADS"."Feature_25" AS DOUBLE PRECISION) - -0.056962969140892016) / 0.8709691145904845 AS "Feature_25", (CAST("ADS"."Feature_26" AS DOUBLE PRECISION) - 0.09614684099943516) / 0.9754949971761556 AS "Feature_26", (CAST("ADS"."Feature_27" AS DOUBLE PRECISION) - 0.10433833409752225) / 1.1043973403915843 AS "Feature_27", (CAST("ADS"."Feature_28" AS DOUBLE PRECISION) - 0.03257716191960928) / 0.9494591776776004 AS "Feature_28", (CAST("ADS"."Feature_29" AS DOUBLE PRECISION) - 0.06142905749366726) / 1.124121124146741 AS "Feature_29", (CAST("ADS"."Feature_30" AS DOUBLE PRECISION) - -0.014540423460679415) / 1.0639876544866875 AS "Feature_30", (CAST("ADS"."Feature_31" AS DOUBLE PRECISION) - -0.1123380099941879) / 0.9847894554012948 AS "Feature_31", (CAST("ADS"."Feature_32" AS DOUBLE PRECISION) - 0.11891284460491455) / 1.0127056544203412 AS "Feature_32", (CAST("ADS"."Feature_33" AS DOUBLE PRECISION) - 0.22868649300780436) / 1.0050531255428268 AS "Feature_33", (CAST("ADS"."Feature_34" AS DOUBLE PRECISION) - 0.23566181549921905) / 0.8948227870637869 AS "Feature_34", (CAST("ADS"."Feature_35" AS DOUBLE PRECISION) - 0.07316970399964387) / 0.8532086547540568 AS "Feature_35", (CAST("ADS"."Feature_36" AS DOUBLE PRECISION) - -0.033194098274696236) / 0.9477180235403924 AS "Feature_36", (CAST("ADS"."Feature_37" AS DOUBLE PRECISION) - 0.273493877417745) / 0.8898501468940359 AS "Feature_37", (CAST("ADS"."Feature_38" AS DOUBLE PRECISION) - -0.023289567742236197) / 1.0010407543777553 AS "Feature_38", (CAST("ADS"."Feature_39" AS DOUBLE PRECISION) - 0.03028837926064595) / 1.0450917662157826 AS "Feature_39", (CAST("ADS"."Feature_40" AS DOUBLE PRECISION) - -0.10736826233135917) / 0.9892138238013032 AS "Feature_40", (CAST("ADS"."Feature_41" AS DOUBLE PRECISION) - 0.026402950097887942) / 1.0463892528310912 AS "Feature_41", (CAST("ADS"."Feature_42" AS DOUBLE PRECISION) - -0.09677146654911455) / 1.0078413733925038 AS "Feature_42", (CAST("ADS"."Feature_43" AS DOUBLE PRECISION) - 0.00597424834297036) / 0.9250244190388238 AS "Feature_43", (CAST("ADS"."Feature_44" AS DOUBLE PRECISION) - 0.03691726812707108) / 1.0765042484443903 AS "Feature_44", (CAST("ADS"."Feature_45" AS DOUBLE PRECISION) - -0.1452571738237413) / 1.0085374836582215 AS "Feature_45", (CAST("ADS"."Feature_46" AS DOUBLE PRECISION) - -0.16675269881177784) / 1.0329740072638318 AS "Feature_46", (CAST("ADS"."Feature_47" AS DOUBLE PRECISION) - 0.2508446569565272) / 1.0240556041572138 AS "Feature_47", (CAST("ADS"."Feature_48" AS DOUBLE PRECISION) - 0.1462339832225762) / 0.955894214500948 AS "Feature_48", (CAST("ADS"."Feature_49" AS DOUBLE PRECISION) - 0.10185431133406105) / 1.0903272774089203 AS "Feature_49", (CAST("ADS"."Feature_50" AS DOUBLE PRECISION) - -0.13292560945085746) / 1.2106332649749378 AS "Feature_50", (CAST("ADS"."Feature_51" AS DOUBLE PRECISION) - -0.04219179136544037) / 1.0959430321200747 AS "Feature_51", (CAST("ADS"."Feature_52" AS DOUBLE PRECISION) - 0.15214028404681923) / 1.0421265897015586 AS "Feature_52", (CAST("ADS"."Feature_53" AS DOUBLE PRECISION) - -0.15821372314298) / 0.8182147811652902 AS "Feature_53", (CAST("ADS"."Feature_54" AS DOUBLE PRECISION) - 0.17926260535776067) / 1.077220949271224 AS "Feature_54", (CAST("ADS"."Feature_55" AS DOUBLE PRECISION) - 0.050775332104376784) / 1.0115988693047424 AS "Feature_55", (CAST("ADS"."Feature_56" AS DOUBLE PRECISION) - -0.011884551362322145) / 0.975255826656699 AS "Feature_56", (CAST("ADS"."Feature_57" AS DOUBLE PRECISION) - -0.04948745069141103) / 1.2689325956763289 AS "Feature_57", (CAST("ADS"."Feature_58" AS DOUBLE PRECISION) - -0.1325673355248287) / 0.8741054411554627 AS "Feature_58", (CAST("ADS"."Feature_59" AS DOUBLE PRECISION) - 0.11866238202513517) / 1.0698732201757528 AS "Feature_59", (CAST("ADS"."Feature_60" AS DOUBLE PRECISION) - -0.06590828520229043) / 1.0484461859492231 AS "Feature_60", (CAST("ADS"."Feature_61" AS DOUBLE PRECISION) - 0.1554857338869047) / 0.90029652738263 AS "Feature_61", (CAST("ADS"."Feature_62" AS DOUBLE PRECISION) - -0.006608301490984007) / 0.9223984334600788 AS "Feature_62", (CAST("ADS"."Feature_63" AS DOUBLE PRECISION) - -0.018275801484938268) / 1.0438258940865377 AS "Feature_63", (CAST("ADS"."Feature_64" AS DOUBLE PRECISION) - -0.027366317428668553) / 0.8932685572396625 AS "Feature_64", (CAST("ADS"."Feature_65" AS DOUBLE PRECISION) - 0.014366250036689628) / 0.9242926600291264 AS "Feature_65", (CAST("ADS"."Feature_66" AS DOUBLE PRECISION) - 0.05407530008955789) / 0.9354534591565988 AS "Feature_66", (CAST("ADS"."Feature_67" AS DOUBLE PRECISION) - -0.23085273383923546) / 0.9500452229821283 AS "Feature_67", (CAST("ADS"."Feature_68" AS DOUBLE PRECISION) - -0.2439652880837512) / 1.0525227506953618 AS "Feature_68", (CAST("ADS"."Feature_69" AS DOUBLE PRECISION) - 0.06545065787659607) / 0.9024280760364656 AS "Feature_69", (CAST("ADS"."Feature_70" AS DOUBLE PRECISION) - 0.04266518302023079) / 0.8891136232043574 AS "Feature_70", (CAST("ADS"."Feature_71" AS DOUBLE PRECISION) - -0.15404518203492792) / 0.9932062157056704 AS "Feature_71", (CAST("ADS"."Feature_72" AS DOUBLE PRECISION) - -0.22223525645724515) / 0.9598104207102034 AS "Feature_72", (CAST("ADS"."Feature_73" AS DOUBLE PRECISION) - 0.0685606372972674) / 0.9597349233176262 AS "Feature_73", (CAST("ADS"."Feature_74" AS DOUBLE PRECISION) - -0.09639592085393561) / 1.04241310179476 AS "Feature_74", (CAST("ADS"."Feature_75" AS DOUBLE PRECISION) - 0.2074751892752457) / 1.0678023739523776 AS "Feature_75", (CAST("ADS"."Feature_76" AS DOUBLE PRECISION) - -0.13945256367132466) / 1.0288204015556526 AS "Feature_76", (CAST("ADS"."Feature_77" AS DOUBLE PRECISION) - 0.021954208773706786) / 0.4906003700406369 AS "Feature_77", (CAST("ADS"."Feature_78" AS DOUBLE PRECISION) - 0.07033517037026027) / 1.004727168181851 AS "Feature_78", (CAST("ADS"."Feature_79" AS DOUBLE PRECISION) - 0.1206247219069475) / 1.054905328765965 AS "Feature_79", (CAST("ADS"."Feature_80" AS DOUBLE PRECISION) - -0.0337659474424792) / 1.0184246746044388 AS "Feature_80", (CAST("ADS"."Feature_81" AS DOUBLE PRECISION) - -0.11063521313283847) / 0.8541517644660686 AS "Feature_81", (CAST("ADS"."Feature_82" AS DOUBLE PRECISION) - 0.040264280436689885) / 0.933740783902334 AS "Feature_82", (CAST("ADS"."Feature_83" AS DOUBLE PRECISION) - 0.04761969863470352) / 1.0237869579681855 AS "Feature_83", (CAST("ADS"."Feature_84" AS DOUBLE PRECISION) - 0.10294542896565008) / 0.942282901857709 AS "Feature_84", (CAST("ADS"."Feature_85" AS DOUBLE PRECISION) - 0.035431390865410375) / 0.9828193326422184 AS "Feature_85", (CAST("ADS"."Feature_86" AS DOUBLE PRECISION) - 0.15812674995414755) / 1.0129186495906697 AS "Feature_86", (CAST("ADS"."Feature_87" AS DOUBLE PRECISION) - -0.09370679202503558) / 0.9581514391979012 AS "Feature_87", (CAST("ADS"."Feature_88" AS DOUBLE PRECISION) - -0.05352174133125278) / 1.040189616964707 AS "Feature_88", (CAST("ADS"."Feature_89" AS DOUBLE PRECISION) - -0.056711421357499875) / 1.091956973876087 AS "Feature_89", (CAST("ADS"."Feature_90" AS DOUBLE PRECISION) - 0.1683501919918398) / 0.8338825988787877 AS "Feature_90", (CAST("ADS"."Feature_91" AS DOUBLE PRECISION) - -0.08014687785959376) / 1.077173940760175 AS "Feature_91", (CAST("ADS"."Feature_92" AS DOUBLE PRECISION) - 0.06732751721128641) / 1.1823924116230542 AS "Feature_92", (CAST("ADS"."Feature_93" AS DOUBLE PRECISION) - -0.00888651681786577) / 1.0817897856778684 AS "Feature_93", (CAST("ADS"."Feature_94" AS DOUBLE PRECISION) - 0.026095385517810574) / 1.114807847616779 AS "Feature_94", (CAST("ADS"."Feature_95" AS DOUBLE PRECISION) - 0.04435425200996612) / 0.8917283697118223 AS "Feature_95", (CAST("ADS"."Feature_96" AS DOUBLE PRECISION) - 0.0268954080705686) / 1.0158982129743612 AS "Feature_96", (CAST("ADS"."Feature_97" AS DOUBLE PRECISION) - 0.18232971539070067) / 0.9611643739572162 AS "Feature_97", (CAST("ADS"."Feature_98" AS DOUBLE PRECISION) - -0.12132540363011565) / 0.931727364145596 AS "Feature_98", (CAST("ADS"."Feature_99" AS DOUBLE PRECISION) - 0.004420132524286944) / 0.9431095691702032 AS "Feature_99" 
FROM "BinaryClass_100" AS "ADS"), 
"ADS_pre_1_OUT" AS 
(SELECT "ADS_sca_1_OUT"."KEY" AS "KEY", "ADS_sca_1_OUT"."Feature_0" * -0.11845764760497382 + "ADS_sca_1_OUT"."Feature_1" * 0.0169526752382028 + "ADS_sca_1_OUT"."Feature_2" * -0.07032857124329005 + "ADS_sca_1_OUT"."Feature_3" * 0.04271724861405116 + "ADS_sca_1_OUT"."Feature_4" * 0.36836997411913536 + "ADS_sca_1_OUT"."Feature_5" * 0.037619003572343275 + "ADS_sca_1_OUT"."Feature_6" * -0.020653186973927373 + "ADS_sca_1_OUT"."Feature_7" * 0.13996190165458866 + "ADS_sca_1_OUT"."Feature_8" * -0.10397246475950256 + "ADS_sca_1_OUT"."Feature_9" * 0.07605117327560837 + "ADS_sca_1_OUT"."Feature_10" * 0.14014571548579863 + "ADS_sca_1_OUT"."Feature_11" * -0.04517737837192064 + "ADS_sca_1_OUT"."Feature_12" * 0.0315267432670062 + "ADS_sca_1_OUT"."Feature_13" * 0.024641501592911008 + "ADS_sca_1_OUT"."Feature_14" * 0.049739399672148604 + "ADS_sca_1_OUT"."Feature_15" * 0.10006527052784127 + "ADS_sca_1_OUT"."Feature_16" * 0.013027775623498751 + "ADS_sca_1_OUT"."Feature_17" * -0.0903266737619177 + "ADS_sca_1_OUT"."Feature_18" * -0.04688676999971148 + "ADS_sca_1_OUT"."Feature_19" * -0.01701705964417581 + "ADS_sca_1_OUT"."Feature_20" * -0.024661973758568014 + "ADS_sca_1_OUT"."Feature_21" * 0.09088135207578184 + "ADS_sca_1_OUT"."Feature_22" * 0.05765396151969576 + "ADS_sca_1_OUT"."Feature_23" * 0.10162240624188172 + "ADS_sca_1_OUT"."Feature_24" * 0.16328574891259756 + "ADS_sca_1_OUT"."Feature_25" * 0.0073005840402938 + "ADS_sca_1_OUT"."Feature_26" * -0.0325250092939744 + "ADS_sca_1_OUT"."Feature_27" * -0.11387814358313438 + "ADS_sca_1_OUT"."Feature_28" * -0.14384027826597678 + "ADS_sca_1_OUT"."Feature_29" * -0.020376020871900345 + "ADS_sca_1_OUT"."Feature_30" * 0.052505644267670085 + "ADS_sca_1_OUT"."Feature_31" * -0.001562385840169753 + "ADS_sca_1_OUT"."Feature_32" * 0.021275857754348447 + "ADS_sca_1_OUT"."Feature_33" * -0.019198587638488675 + "ADS_sca_1_OUT"."Feature_34" * -0.04155001282479891 + "ADS_sca_1_OUT"."Feature_35" * -0.10535023210983713 + "ADS_sca_1_OUT"."Feature_36" * 0.1199397704276528 + "ADS_sca_1_OUT"."Feature_37" * 0.0611560743795784 + "ADS_sca_1_OUT"."Feature_38" * 0.1392840114754355 + "ADS_sca_1_OUT"."Feature_39" * 0.0977375857532088 + "ADS_sca_1_OUT"."Feature_40" * 0.027435220139511246 + "ADS_sca_1_OUT"."Feature_41" * -0.02024130872474881 + "ADS_sca_1_OUT"."Feature_42" * -0.023481733454771232 + "ADS_sca_1_OUT"."Feature_43" * 0.08690133360145126 + "ADS_sca_1_OUT"."Feature_44" * -0.09132182284944823 + "ADS_sca_1_OUT"."Feature_45" * 0.13141517771298772 + "ADS_sca_1_OUT"."Feature_46" * -0.05409069343882543 + "ADS_sca_1_OUT"."Feature_47" * -0.05663613990242945 + "ADS_sca_1_OUT"."Feature_48" * 0.08869815406357126 + "ADS_sca_1_OUT"."Feature_49" * 0.020903746575343062 + "ADS_sca_1_OUT"."Feature_50" * 0.07196744388997324 + "ADS_sca_1_OUT"."Feature_51" * 0.08139512687458182 + "ADS_sca_1_OUT"."Feature_52" * 0.03345860516104577 + "ADS_sca_1_OUT"."Feature_53" * 0.12358898669529644 + "ADS_sca_1_OUT"."Feature_54" * 0.05224347527723462 + "ADS_sca_1_OUT"."Feature_55" * 0.013797999458400243 + "ADS_sca_1_OUT"."Feature_56" * 0.02749289893147893 + "ADS_sca_1_OUT"."Feature_57" * -0.36675710013192664 + "ADS_sca_1_OUT"."Feature_58" * 0.010983587310748423 + "ADS_sca_1_OUT"."Feature_59" * 0.006933155258503797 + "ADS_sca_1_OUT"."Feature_60" * 0.14718663735867463 + "ADS_sca_1_OUT"."Feature_61" * -0.07439024368329406 + "ADS_sca_1_OUT"."Feature_62" * 0.003131139729153798 + "ADS_sca_1_OUT"."Feature_63" * -0.05275054270576463 + "ADS_sca_1_OUT"."Feature_64" * -0.11436991962448045 + "ADS_sca_1_OUT"."Feature_65" * -0.09084380121737116 + "ADS_sca_1_OUT"."Feature_66" * -0.1911396295342505 + "ADS_sca_1_OUT"."Feature_67" * -0.06352354755209057 + "ADS_sca_1_OUT"."Feature_68" * 0.03808432934898081 + "ADS_sca_1_OUT"."Feature_69" * 0.1542859173428119 + "ADS_sca_1_OUT"."Feature_70" * 0.10362888687882847 + "ADS_sca_1_OUT"."Feature_71" * -0.033003174964249364 + "ADS_sca_1_OUT"."Feature_72" * -0.03655794165311679 + "ADS_sca_1_OUT"."Feature_73" * 0.04797728240326216 + "ADS_sca_1_OUT"."Feature_74" * -0.12914371326077692 + "ADS_sca_1_OUT"."Feature_75" * 0.03638657244257429 + "ADS_sca_1_OUT"."Feature_76" * -0.003269817515497083 + "ADS_sca_1_OUT"."Feature_77" * 0.3699691091090368 + "ADS_sca_1_OUT"."Feature_78" * 0.0612638386015472 + "ADS_sca_1_OUT"."Feature_79" * -0.06576475579138515 + "ADS_sca_1_OUT"."Feature_80" * -0.10638331341479533 + "ADS_sca_1_OUT"."Feature_81" * -0.03545404270873 + "ADS_sca_1_OUT"."Feature_82" * -0.06930326566060484 + "ADS_sca_1_OUT"."Feature_83" * -0.08313898915174507 + "ADS_sca_1_OUT"."Feature_84" * 0.05288998288962314 + "ADS_sca_1_OUT"."Feature_85" * 0.043292928570447364 + "ADS_sca_1_OUT"."Feature_86" * 0.07873494563617328 + "ADS_sca_1_OUT"."Feature_87" * 0.042571178500550894 + "ADS_sca_1_OUT"."Feature_88" * 0.0921349273592132 + "ADS_sca_1_OUT"."Feature_89" * -0.07203534173357558 + "ADS_sca_1_OUT"."Feature_90" * 0.1164516761863659 + "ADS_sca_1_OUT"."Feature_91" * -0.018482286527922928 + "ADS_sca_1_OUT"."Feature_92" * -0.07417219867777301 + "ADS_sca_1_OUT"."Feature_93" * 0.006610552349741827 + "ADS_sca_1_OUT"."Feature_94" * -0.031132849879869758 + "ADS_sca_1_OUT"."Feature_95" * -0.08430670523359862 + "ADS_sca_1_OUT"."Feature_96" * 0.1132312580831495 + "ADS_sca_1_OUT"."Feature_97" * 0.0020941572720169213 + "ADS_sca_1_OUT"."Feature_98" * 0.0463200160118436 + "ADS_sca_1_OUT"."Feature_99" * 0.0784666394518591 AS "PC1", "ADS_sca_1_OUT"."Feature_0" * -0.013791843146342742 + "ADS_sca_1_OUT"."Feature_1" * -0.02574548979890912 + "ADS_sca_1_OUT"."Feature_2" * -0.06415057043559869 + "ADS_sca_1_OUT"."Feature_3" * -0.0428871054387088 + "ADS_sca_1_OUT"."Feature_4" * -0.11586253500340035 + "ADS_sca_1_OUT"."Feature_5" * 0.10707517517909088 + "ADS_sca_1_OUT"."Feature_6" * 0.046333567998771766 + "ADS_sca_1_OUT"."Feature_7" * 0.08218916701100981 + "ADS_sca_1_OUT"."Feature_8" * -0.05667445411306865 + "ADS_sca_1_OUT"."Feature_9" * 0.042748715856370745 + "ADS_sca_1_OUT"."Feature_10" * 0.19719401539908474 + "ADS_sca_1_OUT"."Feature_11" * 0.08235357405656744 + "ADS_sca_1_OUT"."Feature_12" * 0.220663251476028 + "ADS_sca_1_OUT"."Feature_13" * -0.05652927895928748 + "ADS_sca_1_OUT"."Feature_14" * 0.047295336476235315 + "ADS_sca_1_OUT"."Feature_15" * 0.05747198906542026 + "ADS_sca_1_OUT"."Feature_16" * -0.13664095655531702 + "ADS_sca_1_OUT"."Feature_17" * -0.0943315364478656 + "ADS_sca_1_OUT"."Feature_18" * 0.07196649330803781 + "ADS_sca_1_OUT"."Feature_19" * -0.06357691420496572 + "ADS_sca_1_OUT"."Feature_20" * 0.06746718028406458 + "ADS_sca_1_OUT"."Feature_21" * 0.0638498940124763 + "ADS_sca_1_OUT"."Feature_22" * -0.07495071270668655 + "ADS_sca_1_OUT"."Feature_23" * 0.049958234445205765 + "ADS_sca_1_OUT"."Feature_24" * 0.00183127194622251 + "ADS_sca_1_OUT"."Feature_25" * -0.10226698568126143 + "ADS_sca_1_OUT"."Feature_26" * -0.15474532194132473 + "ADS_sca_1_OUT"."Feature_27" * 0.0606531380561522 + "ADS_sca_1_OUT"."Feature_28" * -0.08590982811180183 + "ADS_sca_1_OUT"."Feature_29" * 0.035069552129453445 + "ADS_sca_1_OUT"."Feature_30" * -0.11336115715992398 + "ADS_sca_1_OUT"."Feature_31" * -0.11947590267898665 + "ADS_sca_1_OUT"."Feature_32" * 0.01518362183942588 + "ADS_sca_1_OUT"."Feature_33" * -0.025631198246948983 + "ADS_sca_1_OUT"."Feature_34" * -0.12221813733615315 + "ADS_sca_1_OUT"."Feature_35" * -0.07201611739358814 + "ADS_sca_1_OUT"."Feature_36" * 0.04671377924830519 + "ADS_sca_1_OUT"."Feature_37" * 0.007665491800843816 + "ADS_sca_1_OUT"."Feature_38" * 0.11712911430430288 + "ADS_sca_1_OUT"."Feature_39" * 0.03657490848773765 + "ADS_sca_1_OUT"."Feature_40" * -0.019401716682088 + "ADS_sca_1_OUT"."Feature_41" * -0.061033379887375484 + "ADS_sca_1_OUT"."Feature_42" * -0.02272890863169164 + "ADS_sca_1_OUT"."Feature_43" * -0.003309429349239679 + "ADS_sca_1_OUT"."Feature_44" * -0.1076844501822204 + "ADS_sca_1_OUT"."Feature_45" * 0.01960630438267472 + "ADS_sca_1_OUT"."Feature_46" * 0.09359417929848805 + "ADS_sca_1_OUT"."Feature_47" * 0.1124593184798075 + "ADS_sca_1_OUT"."Feature_48" * 0.10341554970654701 + "ADS_sca_1_OUT"."Feature_49" * 0.08879929278924857 + "ADS_sca_1_OUT"."Feature_50" * 0.03396464529816958 + "ADS_sca_1_OUT"."Feature_51" * -0.11175992606626349 + "ADS_sca_1_OUT"."Feature_52" * -0.047821343865228 + "ADS_sca_1_OUT"."Feature_53" * -0.09667888495687124 + "ADS_sca_1_OUT"."Feature_54" * -0.031688848576240304 + "ADS_sca_1_OUT"."Feature_55" * -0.045941397840428826 + "ADS_sca_1_OUT"."Feature_56" * 0.010901045194004722 + "ADS_sca_1_OUT"."Feature_57" * 0.10161257434792928 + "ADS_sca_1_OUT"."Feature_58" * -0.046290231179527984 + "ADS_sca_1_OUT"."Feature_59" * -0.05713552693554965 + "ADS_sca_1_OUT"."Feature_60" * 0.06819507674755504 + "ADS_sca_1_OUT"."Feature_61" * 0.10992835942415942 + "ADS_sca_1_OUT"."Feature_62" * 0.01073690976787193 + "ADS_sca_1_OUT"."Feature_63" * -0.15568616066798174 + "ADS_sca_1_OUT"."Feature_64" * 0.042149471832923516 + "ADS_sca_1_OUT"."Feature_65" * -0.024094535763602928 + "ADS_sca_1_OUT"."Feature_66" * -0.04631946883782411 + "ADS_sca_1_OUT"."Feature_67" * -0.10617733459083452 + "ADS_sca_1_OUT"."Feature_68" * -0.1102738096215133 + "ADS_sca_1_OUT"."Feature_69" * 0.03772145049895474 + "ADS_sca_1_OUT"."Feature_70" * 0.02806256656800645 + "ADS_sca_1_OUT"."Feature_71" * -0.05895916918004245 + "ADS_sca_1_OUT"."Feature_72" * -0.020351024048067403 + "ADS_sca_1_OUT"."Feature_73" * -0.06851631353312244 + "ADS_sca_1_OUT"."Feature_74" * -0.06195305180908025 + "ADS_sca_1_OUT"."Feature_75" * -0.07307944197039212 + "ADS_sca_1_OUT"."Feature_76" * 0.13157328827471873 + "ADS_sca_1_OUT"."Feature_77" * -0.10844042470434931 + "ADS_sca_1_OUT"."Feature_78" * 0.17568757176700583 + "ADS_sca_1_OUT"."Feature_79" * 0.1297268042855338 + "ADS_sca_1_OUT"."Feature_80" * -0.037845605007056284 + "ADS_sca_1_OUT"."Feature_81" * -0.05336443400762442 + "ADS_sca_1_OUT"."Feature_82" * 0.17030538765893083 + "ADS_sca_1_OUT"."Feature_83" * 0.1368952735853146 + "ADS_sca_1_OUT"."Feature_84" * -0.0622995263063591 + "ADS_sca_1_OUT"."Feature_85" * 0.21022568927812976 + "ADS_sca_1_OUT"."Feature_86" * 0.12349462785943517 + "ADS_sca_1_OUT"."Feature_87" * 0.08388292395652201 + "ADS_sca_1_OUT"."Feature_88" * -0.10237333016221464 + "ADS_sca_1_OUT"."Feature_89" * -0.3173080911320166 + "ADS_sca_1_OUT"."Feature_90" * -0.034240692711325835 + "ADS_sca_1_OUT"."Feature_91" * -0.1264830804270301 + "ADS_sca_1_OUT"."Feature_92" * -0.047579206221079515 + "ADS_sca_1_OUT"."Feature_93" * -0.13290058947562775 + "ADS_sca_1_OUT"."Feature_94" * 0.2317382075160909 + "ADS_sca_1_OUT"."Feature_95" * -0.014637020135514604 + "ADS_sca_1_OUT"."Feature_96" * -0.16194368039135956 + "ADS_sca_1_OUT"."Feature_97" * 0.0899207759295309 + "ADS_sca_1_OUT"."Feature_98" * 0.09178145783006947 + "ADS_sca_1_OUT"."Feature_99" * -0.22736859738735635 AS "PC2", "ADS_sca_1_OUT"."Feature_0" * -0.061295866163470984 + "ADS_sca_1_OUT"."Feature_1" * -0.14201391971592486 + "ADS_sca_1_OUT"."Feature_2" * -0.1465336467375965 + "ADS_sca_1_OUT"."Feature_3" * -0.09570604507565308 + "ADS_sca_1_OUT"."Feature_4" * -0.08722468433750513 + "ADS_sca_1_OUT"."Feature_5" * 0.061314227261130484 + "ADS_sca_1_OUT"."Feature_6" * -0.1225040612180966 + "ADS_sca_1_OUT"."Feature_7" * -0.19681108836267164 + "ADS_sca_1_OUT"."Feature_8" * -0.04706528684854465 + "ADS_sca_1_OUT"."Feature_9" * -0.12700119253968306 + "ADS_sca_1_OUT"."Feature_10" * 0.03297287471501617 + "ADS_sca_1_OUT"."Feature_11" * -0.03146589978980596 + "ADS_sca_1_OUT"."Feature_12" * 0.02451346995153669 + "ADS_sca_1_OUT"."Feature_13" * 0.1687965728916985 + "ADS_sca_1_OUT"."Feature_14" * 0.020842397493445408 + "ADS_sca_1_OUT"."Feature_15" * 0.08209672051962046 + "ADS_sca_1_OUT"."Feature_16" * -0.1688653737250779 + "ADS_sca_1_OUT"."Feature_17" * 0.06956986782134779 + "ADS_sca_1_OUT"."Feature_18" * 0.09150000584524184 + "ADS_sca_1_OUT"."Feature_19" * 0.1181203340401851 + "ADS_sca_1_OUT"."Feature_20" * 0.1066204623567607 + "ADS_sca_1_OUT"."Feature_21" * 0.05569346715833277 + "ADS_sca_1_OUT"."Feature_22" * 0.06574031638886177 + "ADS_sca_1_OUT"."Feature_23" * 0.01700504302278477 + "ADS_sca_1_OUT"."Feature_24" * -0.04963195632985397 + "ADS_sca_1_OUT"."Feature_25" * -0.04791287835460517 + "ADS_sca_1_OUT"."Feature_26" * -0.13618558600649705 + "ADS_sca_1_OUT"."Feature_27" * 0.01286933718102816 + "ADS_sca_1_OUT"."Feature_28" * -0.03891374854887152 + "ADS_sca_1_OUT"."Feature_29" * 0.06866148330000758 + "ADS_sca_1_OUT"."Feature_30" * 0.12270948100956802 + "ADS_sca_1_OUT"."Feature_31" * 0.08996550921439761 + "ADS_sca_1_OUT"."Feature_32" * 0.09923751198785696 + "ADS_sca_1_OUT"."Feature_33" * -0.08767976647581606 + "ADS_sca_1_OUT"."Feature_34" * -0.026368724051729988 + "ADS_sca_1_OUT"."Feature_35" * -0.0504458930916214 + "ADS_sca_1_OUT"."Feature_36" * 0.10377911085271944 + "ADS_sca_1_OUT"."Feature_37" * 0.14773841039525226 + "ADS_sca_1_OUT"."Feature_38" * 0.011378584606744315 + "ADS_sca_1_OUT"."Feature_39" * 0.0633244133210457 + "ADS_sca_1_OUT"."Feature_40" * 0.1313204232367013 + "ADS_sca_1_OUT"."Feature_41" * -0.09208515627160062 + "ADS_sca_1_OUT"."Feature_42" * 0.05878111404493201 + "ADS_sca_1_OUT"."Feature_43" * -0.1319483663196935 + "ADS_sca_1_OUT"."Feature_44" * -0.031132974925345905 + "ADS_sca_1_OUT"."Feature_45" * 0.061577783108562635 + "ADS_sca_1_OUT"."Feature_46" * -0.0604085387198167 + "ADS_sca_1_OUT"."Feature_47" * -0.03433935615936577 + "ADS_sca_1_OUT"."Feature_48" * 0.016071379329989508 + "ADS_sca_1_OUT"."Feature_49" * -0.16070880205251603 + "ADS_sca_1_OUT"."Feature_50" * 0.06811217177369791 + "ADS_sca_1_OUT"."Feature_51" * -0.17430046792312684 + "ADS_sca_1_OUT"."Feature_52" * 0.21582809063402786 + "ADS_sca_1_OUT"."Feature_53" * 0.19531216572801746 + "ADS_sca_1_OUT"."Feature_54" * -0.054111321410588886 + "ADS_sca_1_OUT"."Feature_55" * -0.2038725481022016 + "ADS_sca_1_OUT"."Feature_56" * -0.10193246294179793 + "ADS_sca_1_OUT"."Feature_57" * 0.06753318651580224 + "ADS_sca_1_OUT"."Feature_58" * -0.021901940443869203 + "ADS_sca_1_OUT"."Feature_59" * -0.1687703853521353 + "ADS_sca_1_OUT"."Feature_60" * -0.11412574521873517 + "ADS_sca_1_OUT"."Feature_61" * 0.2223384699689403 + "ADS_sca_1_OUT"."Feature_62" * 0.0641268451715198 + "ADS_sca_1_OUT"."Feature_63" * -0.05591787693319202 + "ADS_sca_1_OUT"."Feature_64" * -0.1421352710221654 + "ADS_sca_1_OUT"."Feature_65" * 0.018180901053703985 + "ADS_sca_1_OUT"."Feature_66" * -0.026226861144741445 + "ADS_sca_1_OUT"."Feature_67" * 0.030259123389954918 + "ADS_sca_1_OUT"."Feature_68" * 0.17763839060228734 + "ADS_sca_1_OUT"."Feature_69" * -0.10692653752613974 + "ADS_sca_1_OUT"."Feature_70" * 0.12098250167831585 + "ADS_sca_1_OUT"."Feature_71" * 0.002162539049863302 + "ADS_sca_1_OUT"."Feature_72" * -0.03322758295675686 + "ADS_sca_1_OUT"."Feature_73" * -0.05837443963430384 + "ADS_sca_1_OUT"."Feature_74" * -0.05268150976129919 + "ADS_sca_1_OUT"."Feature_75" * 0.14289876919972402 + "ADS_sca_1_OUT"."Feature_76" * -0.19732929895797408 + "ADS_sca_1_OUT"."Feature_77" * -0.07646793518811697 + "ADS_sca_1_OUT"."Feature_78" * -0.04039469360335372 + "ADS_sca_1_OUT"."Feature_79" * 0.014782171595155729 + "ADS_sca_1_OUT"."Feature_80" * 0.18186320312446916 + "ADS_sca_1_OUT"."Feature_81" * -0.08499502896762144 + "ADS_sca_1_OUT"."Feature_82" * -0.06357843999054909 + "ADS_sca_1_OUT"."Feature_83" * -0.04059022470610426 + "ADS_sca_1_OUT"."Feature_84" * 0.0880318277041461 + "ADS_sca_1_OUT"."Feature_85" * 0.07165573784154282 + "ADS_sca_1_OUT"."Feature_86" * -0.01748474521117989 + "ADS_sca_1_OUT"."Feature_87" * 0.057983071759798686 + "ADS_sca_1_OUT"."Feature_88" * 0.07500697306534287 + "ADS_sca_1_OUT"."Feature_89" * 0.001193433691449099 + "ADS_sca_1_OUT"."Feature_90" * 0.05710623664704559 + "ADS_sca_1_OUT"."Feature_91" * 0.07291283219743312 + "ADS_sca_1_OUT"."Feature_92" * 0.0037494399480601866 + "ADS_sca_1_OUT"."Feature_93" * -0.03618817184397211 + "ADS_sca_1_OUT"."Feature_94" * -0.0320903719046742 + "ADS_sca_1_OUT"."Feature_95" * -0.15547344387495163 + "ADS_sca_1_OUT"."Feature_96" * 0.058309927671686086 + "ADS_sca_1_OUT"."Feature_97" * -0.11437523756528024 + "ADS_sca_1_OUT"."Feature_98" * -0.0556319662032304 + "ADS_sca_1_OUT"."Feature_99" * -0.03801381315890976 AS "PC3", "ADS_sca_1_OUT"."Feature_0" * 0.109381072536252 + "ADS_sca_1_OUT"."Feature_1" * 0.09928972666617007 + "ADS_sca_1_OUT"."Feature_2" * 0.07389376588220577 + "ADS_sca_1_OUT"."Feature_3" * -0.08021026843336074 + "ADS_sca_1_OUT"."Feature_4" * 0.06922350804149963 + "ADS_sca_1_OUT"."Feature_5" * -0.06062906869756056 + "ADS_sca_1_OUT"."Feature_6" * 0.03844888859353749 + "ADS_sca_1_OUT"."Feature_7" * -0.08265006096522481 + "ADS_sca_1_OUT"."Feature_8" * 0.003658273978441096 + "ADS_sca_1_OUT"."Feature_9" * 0.14911461059737927 + "ADS_sca_1_OUT"."Feature_10" * -0.014399196587508769 + "ADS_sca_1_OUT"."Feature_11" * -0.041824829064945 + "ADS_sca_1_OUT"."Feature_12" * -0.0980754795392804 + "ADS_sca_1_OUT"."Feature_13" * 0.06504324741682563 + "ADS_sca_1_OUT"."Feature_14" * 0.04370655028448545 + "ADS_sca_1_OUT"."Feature_15" * -0.07416556936419345 + "ADS_sca_1_OUT"."Feature_16" * -0.10469717582441244 + "ADS_sca_1_OUT"."Feature_17" * -0.1781849769338456 + "ADS_sca_1_OUT"."Feature_18" * -0.04308019573064471 + "ADS_sca_1_OUT"."Feature_19" * 0.22387485964749232 + "ADS_sca_1_OUT"."Feature_20" * 0.11780854901194172 + "ADS_sca_1_OUT"."Feature_21" * 0.07955852404230576 + "ADS_sca_1_OUT"."Feature_22" * 0.08747237895118767 + "ADS_sca_1_OUT"."Feature_23" * -0.013124710973231908 + "ADS_sca_1_OUT"."Feature_24" * 0.18886321104004716 + "ADS_sca_1_OUT"."Feature_25" * -0.1815598289757462 + "ADS_sca_1_OUT"."Feature_26" * 0.010259342055768532 + "ADS_sca_1_OUT"."Feature_27" * 0.14266784992812162 + "ADS_sca_1_OUT"."Feature_28" * -0.03591958479604357 + "ADS_sca_1_OUT"."Feature_29" * 0.1966093299350362 + "ADS_sca_1_OUT"."Feature_30" * -0.003099686830399461 + "ADS_sca_1_OUT"."Feature_31" * 0.029819205671570224 + "ADS_sca_1_OUT"."Feature_32" * -0.14597757309426096 + "ADS_sca_1_OUT"."Feature_33" * -0.007213213654586059 + "ADS_sca_1_OUT"."Feature_34" * 0.17570285399983165 + "ADS_sca_1_OUT"."Feature_35" * -0.020949556729661083 + "ADS_sca_1_OUT"."Feature_36" * -0.07355993591334452 + "ADS_sca_1_OUT"."Feature_37" * -0.05255227376379639 + "ADS_sca_1_OUT"."Feature_38" * 0.06878251489554302 + "ADS_sca_1_OUT"."Feature_39" * -0.003924211149566567 + "ADS_sca_1_OUT"."Feature_40" * 0.058360088850618136 + "ADS_sca_1_OUT"."Feature_41" * -0.01895104741083931 + "ADS_sca_1_OUT"."Feature_42" * 0.08381534599811914 + "ADS_sca_1_OUT"."Feature_43" * 0.20157444696608048 + "ADS_sca_1_OUT"."Feature_44" * 0.014253767494124688 + "ADS_sca_1_OUT"."Feature_45" * -0.07605921405347396 + "ADS_sca_1_OUT"."Feature_46" * 0.052359312920770736 + "ADS_sca_1_OUT"."Feature_47" * 0.1530939226459757 + "ADS_sca_1_OUT"."Feature_48" * -0.10685283499610218 + "ADS_sca_1_OUT"."Feature_49" * -0.06159070814093723 + "ADS_sca_1_OUT"."Feature_50" * -0.1845162236404284 + "ADS_sca_1_OUT"."Feature_51" * 0.06355234109744401 + "ADS_sca_1_OUT"."Feature_52" * -0.08012211008643766 + "ADS_sca_1_OUT"."Feature_53" * 0.023949298872638317 + "ADS_sca_1_OUT"."Feature_54" * -0.1432316464158235 + "ADS_sca_1_OUT"."Feature_55" * -0.16156260674824824 + "ADS_sca_1_OUT"."Feature_56" * -0.19477062479962784 + "ADS_sca_1_OUT"."Feature_57" * -0.060689776542755126 + "ADS_sca_1_OUT"."Feature_58" * -0.08082012950558899 + "ADS_sca_1_OUT"."Feature_59" * 0.008248930824731096 + "ADS_sca_1_OUT"."Feature_60" * 0.056711321486897566 + "ADS_sca_1_OUT"."Feature_61" * -0.04175966560844727 + "ADS_sca_1_OUT"."Feature_62" * 0.07505982639891502 + "ADS_sca_1_OUT"."Feature_63" * 0.020413620946981858 + "ADS_sca_1_OUT"."Feature_64" * 0.1389048679353571 + "ADS_sca_1_OUT"."Feature_65" * -0.06992647643680905 + "ADS_sca_1_OUT"."Feature_66" * -0.029688951980769807 + "ADS_sca_1_OUT"."Feature_67" * -0.013887959194746868 + "ADS_sca_1_OUT"."Feature_68" * 0.017542549958489726 + "ADS_sca_1_OUT"."Feature_69" * -0.046105292531142573 + "ADS_sca_1_OUT"."Feature_70" * -0.14395761826604708 + "ADS_sca_1_OUT"."Feature_71" * -0.05377528127317634 + "ADS_sca_1_OUT"."Feature_72" * -0.08084451129209126 + "ADS_sca_1_OUT"."Feature_73" * -0.11167191313716457 + "ADS_sca_1_OUT"."Feature_74" * 0.06007619503992177 + "ADS_sca_1_OUT"."Feature_75" * -0.08041302310253862 + "ADS_sca_1_OUT"."Feature_76" * -0.02422066719976332 + "ADS_sca_1_OUT"."Feature_77" * 0.06477759121742985 + "ADS_sca_1_OUT"."Feature_78" * -0.049158461492632435 + "ADS_sca_1_OUT"."Feature_79" * 0.11161619312049104 + "ADS_sca_1_OUT"."Feature_80" * 0.04174309890721592 + "ADS_sca_1_OUT"."Feature_81" * 0.1411161631594126 + "ADS_sca_1_OUT"."Feature_82" * -0.08723163333575341 + "ADS_sca_1_OUT"."Feature_83" * 0.13823530164466383 + "ADS_sca_1_OUT"."Feature_84" * -0.09977499904867651 + "ADS_sca_1_OUT"."Feature_85" * 0.119331747812209 + "ADS_sca_1_OUT"."Feature_86" * -0.11365313760634985 + "ADS_sca_1_OUT"."Feature_87" * 0.03291173730409973 + "ADS_sca_1_OUT"."Feature_88" * 0.04190802040180561 + "ADS_sca_1_OUT"."Feature_89" * -0.11434434998867522 + "ADS_sca_1_OUT"."Feature_90" * 0.23962449421392715 + "ADS_sca_1_OUT"."Feature_91" * 0.011509021474654305 + "ADS_sca_1_OUT"."Feature_92" * 0.10078363140136512 + "ADS_sca_1_OUT"."Feature_93" * 0.02776615049574016 + "ADS_sca_1_OUT"."Feature_94" * -0.08480658056620789 + "ADS_sca_1_OUT"."Feature_95" * -0.09167856615555252 + "ADS_sca_1_OUT"."Feature_96" * 0.05110780544808661 + "ADS_sca_1_OUT"."Feature_97" * 0.05968731689197265 + "ADS_sca_1_OUT"."Feature_98" * -0.18573621330563456 + "ADS_sca_1_OUT"."Feature_99" * -0.09934351860823509 AS "PC4", "ADS_sca_1_OUT"."Feature_0" * -0.12299047545850456 + "ADS_sca_1_OUT"."Feature_1" * -0.009829117841598673 + "ADS_sca_1_OUT"."Feature_2" * 0.006578722117153334 + "ADS_sca_1_OUT"."Feature_3" * -0.06535457091147544 + "ADS_sca_1_OUT"."Feature_4" * 0.08615287931217365 + "ADS_sca_1_OUT"."Feature_5" * -0.18535891076050334 + "ADS_sca_1_OUT"."Feature_6" * 0.13870128652702174 + "ADS_sca_1_OUT"."Feature_7" * -0.12442854079865898 + "ADS_sca_1_OUT"."Feature_8" * -0.028107878063279048 + "ADS_sca_1_OUT"."Feature_9" * 0.0007512345013221955 + "ADS_sca_1_OUT"."Feature_10" * 0.008427030788309559 + "ADS_sca_1_OUT"."Feature_11" * -0.04625022046349278 + "ADS_sca_1_OUT"."Feature_12" * -0.13186774657778352 + "ADS_sca_1_OUT"."Feature_13" * -0.08467812083814084 + "ADS_sca_1_OUT"."Feature_14" * -0.005256502073456848 + "ADS_sca_1_OUT"."Feature_15" * -0.07027905176988639 + "ADS_sca_1_OUT"."Feature_16" * 0.04293098872013768 + "ADS_sca_1_OUT"."Feature_17" * 0.1282466766561023 + "ADS_sca_1_OUT"."Feature_18" * 0.011239648418990222 + "ADS_sca_1_OUT"."Feature_19" * -0.03345839792677274 + "ADS_sca_1_OUT"."Feature_20" * 0.03580077713961491 + "ADS_sca_1_OUT"."Feature_21" * -0.04094248800335905 + "ADS_sca_1_OUT"."Feature_22" * 0.10979108686620967 + "ADS_sca_1_OUT"."Feature_23" * -0.14336163495198775 + "ADS_sca_1_OUT"."Feature_24" * 0.026836475564433776 + "ADS_sca_1_OUT"."Feature_25" * -0.17002097922867143 + "ADS_sca_1_OUT"."Feature_26" * 0.007637191073689792 + "ADS_sca_1_OUT"."Feature_27" * 0.06455337082620285 + "ADS_sca_1_OUT"."Feature_28" * -0.025717186282849268 + "ADS_sca_1_OUT"."Feature_29" * 0.0357130034577474 + "ADS_sca_1_OUT"."Feature_30" * -0.005668316561552514 + "ADS_sca_1_OUT"."Feature_31" * -0.10718587780604515 + "ADS_sca_1_OUT"."Feature_32" * -0.06355071977758818 + "ADS_sca_1_OUT"."Feature_33" * -0.07825332524856321 + "ADS_sca_1_OUT"."Feature_34" * -0.1266607890865137 + "ADS_sca_1_OUT"."Feature_35" * 0.1474084818822521 + "ADS_sca_1_OUT"."Feature_36" * -0.01948114619529764 + "ADS_sca_1_OUT"."Feature_37" * 0.028116819568941416 + "ADS_sca_1_OUT"."Feature_38" * -0.057891211266231674 + "ADS_sca_1_OUT"."Feature_39" * 0.02566025101570441 + "ADS_sca_1_OUT"."Feature_40" * 0.11131262528712704 + "ADS_sca_1_OUT"."Feature_41" * 0.032411834719529145 + "ADS_sca_1_OUT"."Feature_42" * -0.1483378509265424 + "ADS_sca_1_OUT"."Feature_43" * -0.08260082994578588 + "ADS_sca_1_OUT"."Feature_44" * -0.11267250079946288 + "ADS_sca_1_OUT"."Feature_45" * 0.054366512614824336 + "ADS_sca_1_OUT"."Feature_46" * -0.0084095903175294 + "ADS_sca_1_OUT"."Feature_47" * -0.009593859508915031 + "ADS_sca_1_OUT"."Feature_48" * 0.03886670280676592 + "ADS_sca_1_OUT"."Feature_49" * -0.0935249451799293 + "ADS_sca_1_OUT"."Feature_50" * -0.07903021313553571 + "ADS_sca_1_OUT"."Feature_51" * -0.05289738760188881 + "ADS_sca_1_OUT"."Feature_52" * 0.007768675640449291 + "ADS_sca_1_OUT"."Feature_53" * 0.0006584187021099046 + "ADS_sca_1_OUT"."Feature_54" * -0.15866609233852316 + "ADS_sca_1_OUT"."Feature_55" * 0.06349111773037443 + "ADS_sca_1_OUT"."Feature_56" * 0.2751869780828435 + "ADS_sca_1_OUT"."Feature_57" * -0.0911088412355257 + "ADS_sca_1_OUT"."Feature_58" * 0.29635399289242564 + "ADS_sca_1_OUT"."Feature_59" * 0.030854430581012383 + "ADS_sca_1_OUT"."Feature_60" * -0.10311565382657684 + "ADS_sca_1_OUT"."Feature_61" * -0.015759140885842845 + "ADS_sca_1_OUT"."Feature_62" * -0.047887856614244106 + "ADS_sca_1_OUT"."Feature_63" * -0.2190270607812592 + "ADS_sca_1_OUT"."Feature_64" * -0.09814090242683816 + "ADS_sca_1_OUT"."Feature_65" * 0.13712734214148306 + "ADS_sca_1_OUT"."Feature_66" * 0.1013578334522935 + "ADS_sca_1_OUT"."Feature_67" * 0.1685891254802991 + "ADS_sca_1_OUT"."Feature_68" * 0.0761030418154756 + "ADS_sca_1_OUT"."Feature_69" * 0.0068719559214201024 + "ADS_sca_1_OUT"."Feature_70" * 0.06959086927203802 + "ADS_sca_1_OUT"."Feature_71" * -0.002413018344795628 + "ADS_sca_1_OUT"."Feature_72" * 0.029673170800561977 + "ADS_sca_1_OUT"."Feature_73" * -0.1387270120008792 + "ADS_sca_1_OUT"."Feature_74" * 0.1638380380301023 + "ADS_sca_1_OUT"."Feature_75" * -0.0441580543575785 + "ADS_sca_1_OUT"."Feature_76" * -0.015790802684651353 + "ADS_sca_1_OUT"."Feature_77" * 0.08960239843354521 + "ADS_sca_1_OUT"."Feature_78" * -0.047060545047301776 + "ADS_sca_1_OUT"."Feature_79" * 0.1885168394058963 + "ADS_sca_1_OUT"."Feature_80" * -0.10098572168319037 + "ADS_sca_1_OUT"."Feature_81" * -0.09830930081672543 + "ADS_sca_1_OUT"."Feature_82" * -0.09567305671175824 + "ADS_sca_1_OUT"."Feature_83" * 0.08241015395090812 + "ADS_sca_1_OUT"."Feature_84" * 0.029374435097456724 + "ADS_sca_1_OUT"."Feature_85" * 0.1338982070185099 + "ADS_sca_1_OUT"."Feature_86" * 0.12629036079542866 + "ADS_sca_1_OUT"."Feature_87" * -0.06923876165299471 + "ADS_sca_1_OUT"."Feature_88" * -0.0018293394126327298 + "ADS_sca_1_OUT"."Feature_89" * -0.07256640311317229 + "ADS_sca_1_OUT"."Feature_90" * 0.11738925022505123 + "ADS_sca_1_OUT"."Feature_91" * -0.054484841456969135 + "ADS_sca_1_OUT"."Feature_92" * 0.0737589779632023 + "ADS_sca_1_OUT"."Feature_93" * 0.17899419980547923 + "ADS_sca_1_OUT"."Feature_94" * 0.01439959465138519 + "ADS_sca_1_OUT"."Feature_95" * 0.2042981639266566 + "ADS_sca_1_OUT"."Feature_96" * 0.03584803861850872 + "ADS_sca_1_OUT"."Feature_97" * -0.033879773176509656 + "ADS_sca_1_OUT"."Feature_98" * 0.06903279281427616 + "ADS_sca_1_OUT"."Feature_99" * -0.13621064072175906 AS "PC5", "ADS_sca_1_OUT"."Feature_0" * -0.14002417883343451 + "ADS_sca_1_OUT"."Feature_1" * 0.10827108734337032 + "ADS_sca_1_OUT"."Feature_2" * 0.09381620239089902 + "ADS_sca_1_OUT"."Feature_3" * -0.015308483268418 + "ADS_sca_1_OUT"."Feature_4" * 0.002360381143245799 + "ADS_sca_1_OUT"."Feature_5" * 0.05511239641182885 + "ADS_sca_1_OUT"."Feature_6" * 0.07037396327913976 + "ADS_sca_1_OUT"."Feature_7" * -0.0035519535202892393 + "ADS_sca_1_OUT"."Feature_8" * -0.058932047613651325 + "ADS_sca_1_OUT"."Feature_9" * -0.09396000180607075 + "ADS_sca_1_OUT"."Feature_10" * -0.053189615442203055 + "ADS_sca_1_OUT"."Feature_11" * -0.17313088955336134 + "ADS_sca_1_OUT"."Feature_12" * -0.12225255637781775 + "ADS_sca_1_OUT"."Feature_13" * 0.0483968726941668 + "ADS_sca_1_OUT"."Feature_14" * 0.08226810253992725 + "ADS_sca_1_OUT"."Feature_15" * -0.01622532114955491 + "ADS_sca_1_OUT"."Feature_16" * 0.020854483878243263 + "ADS_sca_1_OUT"."Feature_17" * -0.18654029315857984 + "ADS_sca_1_OUT"."Feature_18" * -0.090677946019246 + "ADS_sca_1_OUT"."Feature_19" * -0.05547437133036172 + "ADS_sca_1_OUT"."Feature_20" * -0.05492021252171003 + "ADS_sca_1_OUT"."Feature_21" * -0.01092483679482803 + "ADS_sca_1_OUT"."Feature_22" * -0.0578567020194285 + "ADS_sca_1_OUT"."Feature_23" * -0.2000081522380973 + "ADS_sca_1_OUT"."Feature_24" * 0.002183948588368512 + "ADS_sca_1_OUT"."Feature_25" * -0.010704728225103322 + "ADS_sca_1_OUT"."Feature_26" * 0.003656685302778656 + "ADS_sca_1_OUT"."Feature_27" * 0.0777706970076485 + "ADS_sca_1_OUT"."Feature_28" * -0.0709422190011584 + "ADS_sca_1_OUT"."Feature_29" * 0.01728757979831559 + "ADS_sca_1_OUT"."Feature_30" * 0.14341719070093437 + "ADS_sca_1_OUT"."Feature_31" * 0.1373265920976655 + "ADS_sca_1_OUT"."Feature_32" * 0.06121128930017455 + "ADS_sca_1_OUT"."Feature_33" * 0.0208588485640813 + "ADS_sca_1_OUT"."Feature_34" * 0.08027386029625398 + "ADS_sca_1_OUT"."Feature_35" * -0.2216172186064014 + "ADS_sca_1_OUT"."Feature_36" * 0.045263515802195724 + "ADS_sca_1_OUT"."Feature_37" * -0.05009198590594094 + "ADS_sca_1_OUT"."Feature_38" * -0.12235471365089373 + "ADS_sca_1_OUT"."Feature_39" * 0.032670491590650504 + "ADS_sca_1_OUT"."Feature_40" * 0.15618375378883037 + "ADS_sca_1_OUT"."Feature_41" * 0.14069989373770322 + "ADS_sca_1_OUT"."Feature_42" * -0.11169287842171194 + "ADS_sca_1_OUT"."Feature_43" * 0.09684698513986874 + "ADS_sca_1_OUT"."Feature_44" * -0.110400351741088 + "ADS_sca_1_OUT"."Feature_45" * -0.040399426206129636 + "ADS_sca_1_OUT"."Feature_46" * -0.06347866732106389 + "ADS_sca_1_OUT"."Feature_47" * -0.0015218267810151972 + "ADS_sca_1_OUT"."Feature_48" * 0.07687341768884617 + "ADS_sca_1_OUT"."Feature_49" * -0.016532165968457586 + "ADS_sca_1_OUT"."Feature_50" * -0.1651448098307524 + "ADS_sca_1_OUT"."Feature_51" * -0.03182231440407509 + "ADS_sca_1_OUT"."Feature_52" * -0.05401491145410451 + "ADS_sca_1_OUT"."Feature_53" * -0.01617297852590861 + "ADS_sca_1_OUT"."Feature_54" * -0.0703397798021817 + "ADS_sca_1_OUT"."Feature_55" * -0.0197107263829586 + "ADS_sca_1_OUT"."Feature_56" * -0.15682694374084544 + "ADS_sca_1_OUT"."Feature_57" * 0.019356403880776283 + "ADS_sca_1_OUT"."Feature_58" * 0.11186885592026029 + "ADS_sca_1_OUT"."Feature_59" * 0.17034096138750598 + "ADS_sca_1_OUT"."Feature_60" * -0.1311273084678427 + "ADS_sca_1_OUT"."Feature_61" * 0.03694603066530884 + "ADS_sca_1_OUT"."Feature_62" * 0.13801986908684594 + "ADS_sca_1_OUT"."Feature_63" * -0.01378629236466493 + "ADS_sca_1_OUT"."Feature_64" * 0.03786624900287729 + "ADS_sca_1_OUT"."Feature_65" * -0.05034736716932076 + "ADS_sca_1_OUT"."Feature_66" * -0.005152576623066518 + "ADS_sca_1_OUT"."Feature_67" * -0.11703824067849955 + "ADS_sca_1_OUT"."Feature_68" * 0.02694094671660416 + "ADS_sca_1_OUT"."Feature_69" * 0.06895348871483689 + "ADS_sca_1_OUT"."Feature_70" * 0.21938639626215803 + "ADS_sca_1_OUT"."Feature_71" * 0.10966830111940126 + "ADS_sca_1_OUT"."Feature_72" * -0.10847603434580612 + "ADS_sca_1_OUT"."Feature_73" * -0.041467754328189305 + "ADS_sca_1_OUT"."Feature_74" * 0.0073347343778993185 + "ADS_sca_1_OUT"."Feature_75" * -0.021518345464156728 + "ADS_sca_1_OUT"."Feature_76" * 0.0692749920400055 + "ADS_sca_1_OUT"."Feature_77" * -0.010146986510271405 + "ADS_sca_1_OUT"."Feature_78" * 0.14391330623664272 + "ADS_sca_1_OUT"."Feature_79" * -0.11122071501150212 + "ADS_sca_1_OUT"."Feature_80" * 0.052798879677079975 + "ADS_sca_1_OUT"."Feature_81" * -0.05815923437960833 + "ADS_sca_1_OUT"."Feature_82" * -0.01943782789637324 + "ADS_sca_1_OUT"."Feature_83" * 0.21849259406013216 + "ADS_sca_1_OUT"."Feature_84" * 0.060453384697700965 + "ADS_sca_1_OUT"."Feature_85" * -0.13959077108266035 + "ADS_sca_1_OUT"."Feature_86" * 0.1411573216900146 + "ADS_sca_1_OUT"."Feature_87" * -0.07394365901518805 + "ADS_sca_1_OUT"."Feature_88" * -0.12070275284990375 + "ADS_sca_1_OUT"."Feature_89" * -0.057794632097237786 + "ADS_sca_1_OUT"."Feature_90" * -0.183892460280159 + "ADS_sca_1_OUT"."Feature_91" * 0.21256470978050596 + "ADS_sca_1_OUT"."Feature_92" * -0.11490756290047585 + "ADS_sca_1_OUT"."Feature_93" * -0.002356498565442536 + "ADS_sca_1_OUT"."Feature_94" * -0.027208843768842642 + "ADS_sca_1_OUT"."Feature_95" * -0.0507032223926478 + "ADS_sca_1_OUT"."Feature_96" * -0.22456762153148227 + "ADS_sca_1_OUT"."Feature_97" * -0.1437509027514271 + "ADS_sca_1_OUT"."Feature_98" * 0.06010818075071477 + "ADS_sca_1_OUT"."Feature_99" * 0.021288763752850562 AS "PC6", "ADS_sca_1_OUT"."Feature_0" * -0.013964581158903313 + "ADS_sca_1_OUT"."Feature_1" * 0.12855106462495666 + "ADS_sca_1_OUT"."Feature_2" * 0.06796269201003949 + "ADS_sca_1_OUT"."Feature_3" * 0.035498888786590826 + "ADS_sca_1_OUT"."Feature_4" * 0.08223136340625037 + "ADS_sca_1_OUT"."Feature_5" * 0.1319093102868746 + "ADS_sca_1_OUT"."Feature_6" * -0.001801988888851025 + "ADS_sca_1_OUT"."Feature_7" * 0.044693812831605166 + "ADS_sca_1_OUT"."Feature_8" * 0.041494513589897 + "ADS_sca_1_OUT"."Feature_9" * -0.20299726281852504 + "ADS_sca_1_OUT"."Feature_10" * -0.13994775658056569 + "ADS_sca_1_OUT"."Feature_11" * 0.16795084713406683 + "ADS_sca_1_OUT"."Feature_12" * -0.05694156509052989 + "ADS_sca_1_OUT"."Feature_13" * 0.08279478783520723 + "ADS_sca_1_OUT"."Feature_14" * 0.1238773785968971 + "ADS_sca_1_OUT"."Feature_15" * -0.0187671461494983 + "ADS_sca_1_OUT"."Feature_16" * 0.03371733944769492 + "ADS_sca_1_OUT"."Feature_17" * 0.044837630125560766 + "ADS_sca_1_OUT"."Feature_18" * 0.08563936948244255 + "ADS_sca_1_OUT"."Feature_19" * 0.11518056361153588 + "ADS_sca_1_OUT"."Feature_20" * 0.006326496622584221 + "ADS_sca_1_OUT"."Feature_21" * 0.012240603418726202 + "ADS_sca_1_OUT"."Feature_22" * -0.07271891687796411 + "ADS_sca_1_OUT"."Feature_23" * 0.040826141934791456 + "ADS_sca_1_OUT"."Feature_24" * -0.06256073487264212 + "ADS_sca_1_OUT"."Feature_25" * -0.09867020575536958 + "ADS_sca_1_OUT"."Feature_26" * -0.0852863551090468 + "ADS_sca_1_OUT"."Feature_27" * 0.10928307277466733 + "ADS_sca_1_OUT"."Feature_28" * 0.08666282865244745 + "ADS_sca_1_OUT"."Feature_29" * 0.028469866337131236 + "ADS_sca_1_OUT"."Feature_30" * 0.014515708077095912 + "ADS_sca_1_OUT"."Feature_31" * 0.09287643364247032 + "ADS_sca_1_OUT"."Feature_32" * 0.12206326386478637 + "ADS_sca_1_OUT"."Feature_33" * -0.05663511232355195 + "ADS_sca_1_OUT"."Feature_34" * 0.033694962653777145 + "ADS_sca_1_OUT"."Feature_35" * -0.12075243537591428 + "ADS_sca_1_OUT"."Feature_36" * 0.1852013210168523 + "ADS_sca_1_OUT"."Feature_37" * 0.08960670707663025 + "ADS_sca_1_OUT"."Feature_38" * 0.2773787231997204 + "ADS_sca_1_OUT"."Feature_39" * 0.1550866960039162 + "ADS_sca_1_OUT"."Feature_40" * -0.11251730087917623 + "ADS_sca_1_OUT"."Feature_41" * 0.08501310982324616 + "ADS_sca_1_OUT"."Feature_42" * -0.059258533429052615 + "ADS_sca_1_OUT"."Feature_43" * -0.09539355462544252 + "ADS_sca_1_OUT"."Feature_44" * 0.19659318923381885 + "ADS_sca_1_OUT"."Feature_45" * -0.03858124178884043 + "ADS_sca_1_OUT"."Feature_46" * -0.1486794396370042 + "ADS_sca_1_OUT"."Feature_47" * -0.053689733298985284 + "ADS_sca_1_OUT"."Feature_48" * -0.0037032151660286077 + "ADS_sca_1_OUT"."Feature_49" * 0.1682639057258644 + "ADS_sca_1_OUT"."Feature_50" * -0.14695763905750814 + "ADS_sca_1_OUT"."Feature_51" * -0.16652605468364515 + "ADS_sca_1_OUT"."Feature_52" * -0.019571532868436242 + "ADS_sca_1_OUT"."Feature_53" * -0.012784795066897508 + "ADS_sca_1_OUT"."Feature_54" * -0.08611176460527133 + "ADS_sca_1_OUT"."Feature_55" * 0.043982379964471234 + "ADS_sca_1_OUT"."Feature_56" * -0.03375710870848111 + "ADS_sca_1_OUT"."Feature_57" * -0.10495359354777188 + "ADS_sca_1_OUT"."Feature_58" * -0.031129343329834174 + "ADS_sca_1_OUT"."Feature_59" * 0.05693561372518316 + "ADS_sca_1_OUT"."Feature_60" * -0.02204256760448507 + "ADS_sca_1_OUT"."Feature_61" * -0.042147342296641035 + "ADS_sca_1_OUT"."Feature_62" * -0.20608334785620103 + "ADS_sca_1_OUT"."Feature_63" * -0.06792538250526896 + "ADS_sca_1_OUT"."Feature_64" * -0.05799976772373961 + "ADS_sca_1_OUT"."Feature_65" * 0.035034460566328904 + "ADS_sca_1_OUT"."Feature_66" * -0.11075350902087308 + "ADS_sca_1_OUT"."Feature_67" * 0.08708411070763425 + "ADS_sca_1_OUT"."Feature_68" * -0.05562656687799866 + "ADS_sca_1_OUT"."Feature_69" * -0.14057549089776789 + "ADS_sca_1_OUT"."Feature_70" * -0.21637522490311295 + "ADS_sca_1_OUT"."Feature_71" * -0.03063529778343373 + "ADS_sca_1_OUT"."Feature_72" * -0.13511145929178078 + "ADS_sca_1_OUT"."Feature_73" * -0.01879838505149401 + "ADS_sca_1_OUT"."Feature_74" * 0.03973498159354205 + "ADS_sca_1_OUT"."Feature_75" * -0.014550994331882176 + "ADS_sca_1_OUT"."Feature_76" * 0.04820825666356952 + "ADS_sca_1_OUT"."Feature_77" * 0.09589935851861661 + "ADS_sca_1_OUT"."Feature_78" * -0.025559552067036518 + "ADS_sca_1_OUT"."Feature_79" * 0.1471202294454008 + "ADS_sca_1_OUT"."Feature_80" * 0.01871426499687463 + "ADS_sca_1_OUT"."Feature_81" * -0.05892952161460081 + "ADS_sca_1_OUT"."Feature_82" * 0.031894669112016084 + "ADS_sca_1_OUT"."Feature_83" * -0.03456617811192169 + "ADS_sca_1_OUT"."Feature_84" * 0.006171934565655389 + "ADS_sca_1_OUT"."Feature_85" * 0.07241083322455487 + "ADS_sca_1_OUT"."Feature_86" * -0.07696880684559552 + "ADS_sca_1_OUT"."Feature_87" * -0.28739980847107993 + "ADS_sca_1_OUT"."Feature_88" * -0.1973511979600826 + "ADS_sca_1_OUT"."Feature_89" * 0.10819972422662433 + "ADS_sca_1_OUT"."Feature_90" * 0.008066662511188082 + "ADS_sca_1_OUT"."Feature_91" * 0.025305919123234655 + "ADS_sca_1_OUT"."Feature_92" * 0.03551630180396712 + "ADS_sca_1_OUT"."Feature_93" * -0.039193215632702116 + "ADS_sca_1_OUT"."Feature_94" * 0.011380859473436302 + "ADS_sca_1_OUT"."Feature_95" * -0.010435783149535222 + "ADS_sca_1_OUT"."Feature_96" * -0.05041653227847525 + "ADS_sca_1_OUT"."Feature_97" * 0.019160360674642142 + "ADS_sca_1_OUT"."Feature_98" * 0.13888747748029226 + "ADS_sca_1_OUT"."Feature_99" * 0.008266098891697958 AS "PC7" 
FROM "ADS_sca_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.2167564785824958) THEN 2 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.038651351721480286) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 2.004103742171583) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -1.8478782509369909) THEN 6 ELSE 7 END ELSE 8 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.6223727161216661) THEN 10 ELSE 11 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 6 AS nid, 0.857142857142857 AS "P_0", 0.142857142857143 AS "P_1", 0 AS "D", 0.857142857142857 AS "DP" FROM rdb$database UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 8 AS nid, 0.625 AS "P_0", 0.375 AS "P_1", 0 AS "D", 0.625 AS "DP" FROM rdb$database UNION ALL SELECT 10 AS nid, 0.277777777777778 AS "P_0", 0.722222222222222 AS "P_1", 1 AS "D", 0.722222222222222 AS "DP" FROM rdb$database UNION ALL SELECT 11 AS nid, 0.9 AS "P_0", 0.1 AS "P_1", 0 AS "D", 0.9 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_0" AS "P_0", "DT_node_data"."P_1" AS "P_1", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"RF_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output"."P_0" AS "Proba_0", CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output"."P_1" AS "Proba_1", CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.6823559812957789) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.503005963933337) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.5372170741996694) THEN 6 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.1269358874089282) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.4363296967960558) THEN 9 ELSE 10 END ELSE 11 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 4 AS nid, 0.142857142857143 AS "P_0", 0.857142857142857 AS "P_1", 1 AS "D", 0.857142857142857 AS "DP" FROM rdb$database UNION ALL SELECT 6 AS nid, 0.142857142857143 AS "P_0", 0.857142857142857 AS "P_1", 1 AS "D", 0.857142857142857 AS "DP" FROM rdb$database UNION ALL SELECT 9 AS nid, 0.714285714285714 AS "P_0", 0.285714285714286 AS "P_1", 0 AS "D", 0.714285714285714 AS "DP" FROM rdb$database UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 11 AS nid, 0.375 AS "P_0", 0.625 AS "P_1", 1 AS "D", 0.625 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_0" AS "P_0", "DT_node_data_1"."P_1" AS "P_1", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"RF_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_1"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_1"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_1"), 
"RF_0" AS 
(SELECT "RF_esu_0"."KEY" AS "KEY", "RF_esu_0"."Score_0" AS "Score_0", "RF_esu_0"."Proba_0" AS "Proba_0", "RF_esu_0"."LogProba_0" AS "LogProba_0", "RF_esu_0"."Score_1" AS "Score_1", "RF_esu_0"."Proba_1" AS "Proba_1", "RF_esu_0"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_Model_0"."KEY" AS "KEY", CAST("RF_Model_0"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_0"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_0"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_0"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_0"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_0"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_0" UNION ALL SELECT "RF_Model_1"."KEY" AS "KEY", CAST("RF_Model_1"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_1"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_1"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_1"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_1"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_1"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_1") AS "RF_esu_0"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.107028264585997) THEN 2 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.5892966906782531) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -2.783908450971333) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.014743005782567) THEN 8 ELSE 9 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 5 AS nid, 0.714285714285714 AS "P_0", 0.285714285714286 AS "P_1", 0 AS "D", 0.714285714285714 AS "DP" FROM rdb$database UNION ALL SELECT 6 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 8 AS nid, 0.210526315789474 AS "P_0", 0.789473684210526 AS "P_1", 1 AS "D", 0.789473684210526 AS "DP" FROM rdb$database UNION ALL SELECT 9 AS nid, 0.714285714285714 AS "P_0", 0.285714285714286 AS "P_1", 0 AS "D", 0.714285714285714 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_0" AS "P_0", "DT_node_data_2"."P_1" AS "P_1", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"RF_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_2"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_2"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.107028264585997) THEN 2 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.1030454951858462) THEN 4 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.3496233609994581) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -1.310045451239163) THEN 7 ELSE 8 END ELSE 9 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 4 AS nid, 0.96 AS "P_0", 0.04 AS "P_1", 0 AS "D", 0.96 AS "DP" FROM rdb$database UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 8 AS nid, 0.545454545454545 AS "P_0", 0.454545454545455 AS "P_1", 0 AS "D", 0.545454545454545 AS "DP" FROM rdb$database UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_0" AS "P_0", "DT_node_data_3"."P_1" AS "P_1", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"RF_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_3"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_3"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_3"), 
"RF_1" AS 
(SELECT "RF_esu_1"."KEY" AS "KEY", "RF_esu_1"."Score_0" AS "Score_0", "RF_esu_1"."Proba_0" AS "Proba_0", "RF_esu_1"."LogProba_0" AS "LogProba_0", "RF_esu_1"."Score_1" AS "Score_1", "RF_esu_1"."Proba_1" AS "Proba_1", "RF_esu_1"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_Model_2"."KEY" AS "KEY", CAST("RF_Model_2"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_2"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_2"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_2"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_2"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_2"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_2" UNION ALL SELECT "RF_Model_3"."KEY" AS "KEY", CAST("RF_Model_3"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_3"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_3"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_3"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_3"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_3"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_3") AS "RF_esu_1"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.107028264585997) THEN 2 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.221985974611417) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.3788869577753703) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.4847605113492978) THEN 6 ELSE 7 END ELSE 8 END ELSE 9 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 6 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 7 AS nid, 0.428571428571429 AS "P_0", 0.571428571428571 AS "P_1", 1 AS "D", 0.571428571428571 AS "DP" FROM rdb$database UNION ALL SELECT 8 AS nid, 0.142857142857143 AS "P_0", 0.857142857142857 AS "P_1", 1 AS "D", 0.857142857142857 AS "DP" FROM rdb$database UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."P_0" AS "P_0", "DT_node_data_4"."P_1" AS "P_1", "DT_node_data_4"."D" AS "D", "DT_node_data_4"."DP" AS "DP" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"RF_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_4"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_4"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.014743005782567) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.0787938323074742) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.9452681784852506) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.802326670925144) THEN 7 ELSE 8 END END ELSE 9 END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.25 AS "P_0", 0.75 AS "P_1", 1 AS "D", 0.75 AS "DP" FROM rdb$database UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 8 AS nid, 0.6875 AS "P_0", 0.3125 AS "P_1", 0 AS "D", 0.6875 AS "DP" FROM rdb$database UNION ALL SELECT 9 AS nid, 0.9565217391304348 AS "P_0", 0.043478260869565195 AS "P_1", 0 AS "D", 0.9565217391304348 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."P_0" AS "P_0", "DT_node_data_5"."P_1" AS "P_1", "DT_node_data_5"."D" AS "D", "DT_node_data_5"."DP" AS "DP" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"RF_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_5"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_5"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_5"), 
"RF_2" AS 
(SELECT "RF_esu_2"."KEY" AS "KEY", "RF_esu_2"."Score_0" AS "Score_0", "RF_esu_2"."Proba_0" AS "Proba_0", "RF_esu_2"."LogProba_0" AS "LogProba_0", "RF_esu_2"."Score_1" AS "Score_1", "RF_esu_2"."Proba_1" AS "Proba_1", "RF_esu_2"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_Model_4"."KEY" AS "KEY", CAST("RF_Model_4"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_4"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_4"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_4"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_4"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_4"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_4" UNION ALL SELECT "RF_Model_5"."KEY" AS "KEY", CAST("RF_Model_5"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_5"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_5"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_5"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_5"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_5"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_5") AS "RF_esu_2"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.014743005782567) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.4556464835150689) THEN 3 ELSE 4 END ELSE 5 END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.103448275862069 AS "P_0", 0.896551724137931 AS "P_1", 1 AS "D", 0.896551724137931 AS "DP" FROM rdb$database UNION ALL SELECT 4 AS nid, 0.647058823529412 AS "P_0", 0.352941176470588 AS "P_1", 0 AS "D", 0.647058823529412 AS "DP" FROM rdb$database UNION ALL SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."P_0" AS "P_0", "DT_node_data_6"."P_1" AS "P_1", "DT_node_data_6"."D" AS "D", "DT_node_data_6"."DP" AS "DP" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"RF_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_6"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_6"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.2012192631075055) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.2167564785824958) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -3.664043180363785) THEN 6 ELSE 7 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 4 AS nid, 0.384615384615385 AS "P_0", 0.615384615384615 AS "P_1", 1 AS "D", 0.615384615384615 AS "DP" FROM rdb$database UNION ALL SELECT 6 AS nid, 0.428571428571429 AS "P_0", 0.571428571428571 AS "P_1", 1 AS "D", 0.571428571428571 AS "DP" FROM rdb$database UNION ALL SELECT 7 AS nid, 0.9 AS "P_0", 0.1 AS "P_1", 0 AS "D", 0.9 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."P_0" AS "P_0", "DT_node_data_7"."P_1" AS "P_1", "DT_node_data_7"."D" AS "D", "DT_node_data_7"."DP" AS "DP" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"RF_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_7"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_7"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_7"), 
"RF_3" AS 
(SELECT "RF_esu_3"."KEY" AS "KEY", "RF_esu_3"."Score_0" AS "Score_0", "RF_esu_3"."Proba_0" AS "Proba_0", "RF_esu_3"."LogProba_0" AS "LogProba_0", "RF_esu_3"."Score_1" AS "Score_1", "RF_esu_3"."Proba_1" AS "Proba_1", "RF_esu_3"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_Model_6"."KEY" AS "KEY", CAST("RF_Model_6"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_6"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_6"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_6"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_6"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_6"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_6" UNION ALL SELECT "RF_Model_7"."KEY" AS "KEY", CAST("RF_Model_7"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_7"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_7"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_7"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_7"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_7"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_7") AS "RF_esu_3"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.6823559812957789) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.503005963933337) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.1432134504820471) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 2.706240861800641) THEN 7 ELSE 8 END ELSE 9 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 4 AS nid, 0.222222222222222 AS "P_0", 0.777777777777778 AS "P_1", 1 AS "D", 0.777777777777778 AS "DP" FROM rdb$database UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 8 AS nid, 0.857142857142857 AS "P_0", 0.142857142857143 AS "P_1", 0 AS "D", 0.857142857142857 AS "DP" FROM rdb$database UNION ALL SELECT 9 AS nid, 0.428571428571429 AS "P_0", 0.571428571428571 AS "P_1", 1 AS "D", 0.571428571428571 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."P_0" AS "P_0", "DT_node_data_8"."P_1" AS "P_1", "DT_node_data_8"."D" AS "D", "DT_node_data_8"."DP" AS "DP" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"RF_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_8"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_8"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.107028264585997) THEN 2 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.3496233609994581) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.1507931172042664) THEN 5 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.0236486601786436) THEN 7 ELSE 8 END END ELSE 9 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 5 AS nid, 0.235294117647059 AS "P_0", 0.764705882352941 AS "P_1", 1 AS "D", 0.764705882352941 AS "DP" FROM rdb$database UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 8 AS nid, 0.636363636363636 AS "P_0", 0.363636363636364 AS "P_1", 0 AS "D", 0.636363636363636 AS "DP" FROM rdb$database UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."P_0" AS "P_0", "DT_node_data_9"."P_1" AS "P_1", "DT_node_data_9"."D" AS "D", "DT_node_data_9"."DP" AS "DP" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"RF_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_9"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_9"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_9"), 
"RF_4" AS 
(SELECT "RF_esu_4"."KEY" AS "KEY", "RF_esu_4"."Score_0" AS "Score_0", "RF_esu_4"."Proba_0" AS "Proba_0", "RF_esu_4"."LogProba_0" AS "LogProba_0", "RF_esu_4"."Score_1" AS "Score_1", "RF_esu_4"."Proba_1" AS "Proba_1", "RF_esu_4"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_Model_8"."KEY" AS "KEY", CAST("RF_Model_8"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_8"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_8"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_8"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_8"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_8"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_8" UNION ALL SELECT "RF_Model_9"."KEY" AS "KEY", CAST("RF_Model_9"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_9"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_9"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_9"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_9"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_9"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_9") AS "RF_esu_4"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.107028264585997) THEN 2 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.07986066320894032) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -1.840709433278658) THEN 5 ELSE 6 END ELSE 7 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 5 AS nid, 0.714285714285714 AS "P_0", 0.285714285714286 AS "P_1", 0 AS "D", 0.714285714285714 AS "DP" FROM rdb$database UNION ALL SELECT 6 AS nid, 0.9615384615384616 AS "P_0", 0.038461538461538484 AS "P_1", 0 AS "D", 0.9615384615384616 AS "DP" FROM rdb$database UNION ALL SELECT 7 AS nid, 0.52 AS "P_0", 0.48 AS "P_1", 0 AS "D", 0.52 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."P_0" AS "P_0", "DT_node_data_10"."P_1" AS "P_1", "DT_node_data_10"."D" AS "D", "DT_node_data_10"."DP" AS "DP" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"RF_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_10"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_10"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.107028264585997) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.7597594268619898) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.597757265534941) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.9583322770924382) THEN 7 ELSE 8 END ELSE 9 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.111111111111111 AS "P_0", 0.888888888888889 AS "P_1", 1 AS "D", 0.888888888888889 AS "DP" FROM rdb$database UNION ALL SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 7 AS nid, 0.529411764705882 AS "P_0", 0.470588235294118 AS "P_1", 0 AS "D", 0.529411764705882 AS "DP" FROM rdb$database UNION ALL SELECT 8 AS nid, 0.8 AS "P_0", 0.2 AS "P_1", 0 AS "D", 0.8 AS "DP" FROM rdb$database UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."P_0" AS "P_0", "DT_node_data_11"."P_1" AS "P_1", "DT_node_data_11"."D" AS "D", "DT_node_data_11"."DP" AS "DP" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"RF_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_11"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_11"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_11"), 
"RF_5" AS 
(SELECT "RF_esu_5"."KEY" AS "KEY", "RF_esu_5"."Score_0" AS "Score_0", "RF_esu_5"."Proba_0" AS "Proba_0", "RF_esu_5"."LogProba_0" AS "LogProba_0", "RF_esu_5"."Score_1" AS "Score_1", "RF_esu_5"."Proba_1" AS "Proba_1", "RF_esu_5"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_Model_10"."KEY" AS "KEY", CAST("RF_Model_10"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_10"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_10"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_10"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_10"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_10"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_10" UNION ALL SELECT "RF_Model_11"."KEY" AS "KEY", CAST("RF_Model_11"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_11"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_11"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_11"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_11"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_11"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_11") AS "RF_esu_5"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.3715927844103102) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.1336125627294152) THEN 3 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.3782684618307748) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.038651351721480286) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -1.32021474439122) THEN 9 ELSE 10 END ELSE 11 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 6 AS nid, 0.25 AS "P_0", 0.75 AS "P_1", 1 AS "D", 0.75 AS "DP" FROM rdb$database UNION ALL SELECT 9 AS nid, 0.875 AS "P_0", 0.125 AS "P_1", 0 AS "D", 0.875 AS "DP" FROM rdb$database UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 11 AS nid, 0.368421052631579 AS "P_0", 0.631578947368421 AS "P_1", 1 AS "D", 0.631578947368421 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."P_0" AS "P_0", "DT_node_data_12"."P_1" AS "P_1", "DT_node_data_12"."D" AS "D", "DT_node_data_12"."DP" AS "DP" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"RF_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_12"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_12"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.107028264585997) THEN 2 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.1432134504820471) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -1.082753577915646) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.09600684728902184) THEN 8 ELSE 9 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 5 AS nid, 0.857142857142857 AS "P_0", 0.142857142857143 AS "P_1", 0 AS "D", 0.857142857142857 AS "DP" FROM rdb$database UNION ALL SELECT 6 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 8 AS nid, 0.9090909090909091 AS "P_0", 0.09090909090909091 AS "P_1", 0 AS "D", 0.9090909090909091 AS "DP" FROM rdb$database UNION ALL SELECT 9 AS nid, 0.4 AS "P_0", 0.6 AS "P_1", 1 AS "D", 0.6 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."P_0" AS "P_0", "DT_node_data_13"."P_1" AS "P_1", "DT_node_data_13"."D" AS "D", "DT_node_data_13"."DP" AS "DP" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"RF_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_13"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_13"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_13"), 
"RF_6" AS 
(SELECT "RF_esu_6"."KEY" AS "KEY", "RF_esu_6"."Score_0" AS "Score_0", "RF_esu_6"."Proba_0" AS "Proba_0", "RF_esu_6"."LogProba_0" AS "LogProba_0", "RF_esu_6"."Score_1" AS "Score_1", "RF_esu_6"."Proba_1" AS "Proba_1", "RF_esu_6"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_Model_12"."KEY" AS "KEY", CAST("RF_Model_12"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_12"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_12"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_12"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_12"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_12"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_12" UNION ALL SELECT "RF_Model_13"."KEY" AS "KEY", CAST("RF_Model_13"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_13"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_13"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_13"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_13"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_13"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_13") AS "RF_esu_6"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.277653782003191) THEN 2 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.1612927727138902) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 1.1730022710002619) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.340764300329048) THEN 6 ELSE 7 END ELSE 8 END ELSE 9 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 6 AS nid, 0.363636363636364 AS "P_0", 0.636363636363636 AS "P_1", 1 AS "D", 0.636363636363636 AS "DP" FROM rdb$database UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 8 AS nid, 0.166666666666667 AS "P_0", 0.833333333333333 AS "P_1", 1 AS "D", 0.833333333333333 AS "DP" FROM rdb$database UNION ALL SELECT 9 AS nid, 0.896551724137931 AS "P_0", 0.103448275862069 AS "P_1", 0 AS "D", 0.896551724137931 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."P_0" AS "P_0", "DT_node_data_14"."P_1" AS "P_1", "DT_node_data_14"."D" AS "D", "DT_node_data_14"."DP" AS "DP" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"RF_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_14"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_14"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.107028264585997) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.9937395266464478) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.07986066320894032) THEN 6 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.3496233609994581) THEN 8 ELSE 9 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.142857142857143 AS "P_0", 0.857142857142857 AS "P_1", 1 AS "D", 0.857142857142857 AS "DP" FROM rdb$database UNION ALL SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" FROM rdb$database UNION ALL SELECT 6 AS nid, 0.894736842105263 AS "P_0", 0.105263157894737 AS "P_1", 0 AS "D", 0.894736842105263 AS "DP" FROM rdb$database UNION ALL SELECT 8 AS nid, 0.333333333333333 AS "P_0", 0.666666666666667 AS "P_1", 1 AS "D", 0.666666666666667 AS "DP" FROM rdb$database UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" FROM rdb$database) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."P_0" AS "P_0", "DT_node_data_15"."P_1" AS "P_1", "DT_node_data_15"."D" AS "D", "DT_node_data_15"."DP" AS "DP" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"RF_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", "DT_Output_15"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", "DT_Output_15"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -1.79769313486231e+308 END AS "LogProba_1" 
FROM "DT_Output_15"), 
"RF_7" AS 
(SELECT "RF_esu_7"."KEY" AS "KEY", "RF_esu_7"."Score_0" AS "Score_0", "RF_esu_7"."Proba_0" AS "Proba_0", "RF_esu_7"."LogProba_0" AS "LogProba_0", "RF_esu_7"."Score_1" AS "Score_1", "RF_esu_7"."Proba_1" AS "Proba_1", "RF_esu_7"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_Model_14"."KEY" AS "KEY", CAST("RF_Model_14"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_14"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_14"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_14"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_14"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_14"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_14" UNION ALL SELECT "RF_Model_15"."KEY" AS "KEY", CAST("RF_Model_15"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_Model_15"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_Model_15"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_Model_15"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_Model_15"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_Model_15"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_Model_15") AS "RF_esu_7"), 
"RF" AS 
(SELECT "RFbig_esu"."KEY" AS "KEY", "RFbig_esu"."Score_0" AS "Score_0", "RFbig_esu"."Proba_0" AS "Proba_0", "RFbig_esu"."LogProba_0" AS "LogProba_0", "RFbig_esu"."Score_1" AS "Score_1", "RFbig_esu"."Proba_1" AS "Proba_1", "RFbig_esu"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_0"."KEY" AS "KEY", CAST("RF_0"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_0"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_0"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_0"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_0"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_0"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_0" UNION ALL SELECT "RF_1"."KEY" AS "KEY", CAST("RF_1"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_1"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_1"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_1"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_1"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_1"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_1" UNION ALL SELECT "RF_2"."KEY" AS "KEY", CAST("RF_2"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_2"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_2"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_2"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_2"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_2"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_2" UNION ALL SELECT "RF_3"."KEY" AS "KEY", CAST("RF_3"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_3"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_3"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_3"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_3"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_3"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_3" UNION ALL SELECT "RF_4"."KEY" AS "KEY", CAST("RF_4"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_4"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_4"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_4"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_4"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_4"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_4" UNION ALL SELECT "RF_5"."KEY" AS "KEY", CAST("RF_5"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_5"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_5"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_5"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_5"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_5"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_5" UNION ALL SELECT "RF_6"."KEY" AS "KEY", CAST("RF_6"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_6"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_6"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_6"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_6"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_6"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_6" UNION ALL SELECT "RF_7"."KEY" AS "KEY", CAST("RF_7"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("RF_7"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("RF_7"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("RF_7"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("RF_7"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("RF_7"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF_7") AS "RFbig_esu"), 
"RF_avg" AS 
(SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("T"."Proba_0" AS DOUBLE PRECISION) AS "Proba_0", CAST("T"."LogProba_0" AS DOUBLE PRECISION) AS "LogProba_0", CAST("T"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("T"."Proba_1" AS DOUBLE PRECISION) AS "Proba_1", CAST("T"."LogProba_1" AS DOUBLE PRECISION) AS "LogProba_1" 
FROM (SELECT "RF"."KEY" AS "KEY", avg(CAST("RF"."Score_0" AS DOUBLE PRECISION)) AS "Score_0", avg(CAST("RF"."Proba_0" AS DOUBLE PRECISION)) AS "Proba_0", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_0", avg(CAST("RF"."Score_1" AS DOUBLE PRECISION)) AS "Score_1", avg(CAST("RF"."Proba_1" AS DOUBLE PRECISION)) AS "Proba_1", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_1" 
FROM "RF" GROUP BY "RF"."KEY") AS "T"), 
orig_cte AS 
(SELECT "RF_avg"."KEY" AS "KEY", "RF_avg"."Score_0" AS "Score_0", "RF_avg"."Score_1" AS "Score_1", "RF_avg"."Proba_0" AS "Proba_0", "RF_avg"."Proba_1" AS "Proba_1", "RF_avg"."LogProba_0" AS "LogProba_0", "RF_avg"."LogProba_1" AS "LogProba_1", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE PRECISION) AS "DecisionProba" 
FROM "RF_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte