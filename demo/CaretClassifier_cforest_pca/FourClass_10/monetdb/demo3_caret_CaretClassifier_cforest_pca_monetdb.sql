-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretClassifier_cforest_pca
-- Dataset : FourClass_10
-- Database : monetdb


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "ADS_sca_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", (CAST("ADS"."Feature_0" AS DOUBLE) - -0.003903374463034224) / 0.985685974308334 AS "Feature_0", (CAST("ADS"."Feature_1" AS DOUBLE) - 0.6152232215702326) / 1.398851036008891 AS "Feature_1", (CAST("ADS"."Feature_2" AS DOUBLE) - 0.04279623691429167) / 1.5057087871323842 AS "Feature_2", (CAST("ADS"."Feature_3" AS DOUBLE) - 0.770981955890407) / 2.3480777416797296 AS "Feature_3", (CAST("ADS"."Feature_4" AS DOUBLE) - -0.43300733624893323) / 1.4118274472656485 AS "Feature_4", (CAST("ADS"."Feature_5" AS DOUBLE) - -0.04249569657940362) / 0.961839508883184 AS "Feature_5", (CAST("ADS"."Feature_6" AS DOUBLE) - -0.29809080119845444) / 1.0234297313191445 AS "Feature_6", (CAST("ADS"."Feature_7" AS DOUBLE) - 0.14672241507251668) / 1.610898315451602 AS "Feature_7", (CAST("ADS"."Feature_8" AS DOUBLE) - 0.01746942384662041) / 1.1559772136551034 AS "Feature_8", (CAST("ADS"."Feature_9" AS DOUBLE) - 0.11507331415602873) / 0.975205386360447 AS "Feature_9" 
FROM "FourClass_10" AS "ADS"), 
"ADS_pre_1_OUT" AS 
(SELECT "ADS_sca_1_OUT"."KEY" AS "KEY", "ADS_sca_1_OUT"."Feature_0" * -0.04932772619908273 + "ADS_sca_1_OUT"."Feature_1" * -0.30424192738374856 + "ADS_sca_1_OUT"."Feature_2" * -0.3679687561849888 + "ADS_sca_1_OUT"."Feature_3" * -0.5380769831115797 + "ADS_sca_1_OUT"."Feature_4" * 0.10802988742400396 + "ADS_sca_1_OUT"."Feature_5" * 0.13910407016754714 + "ADS_sca_1_OUT"."Feature_6" * 0.5384086347891889 + "ADS_sca_1_OUT"."Feature_7" * -0.3713071820395216 + "ADS_sca_1_OUT"."Feature_8" * 0.0483137135579316 + "ADS_sca_1_OUT"."Feature_9" * 0.13772539520944088 AS "PC1", "ADS_sca_1_OUT"."Feature_0" * 0.4566046379002287 + "ADS_sca_1_OUT"."Feature_1" * 0.22867203934764516 + "ADS_sca_1_OUT"."Feature_2" * -0.2673956790968541 + "ADS_sca_1_OUT"."Feature_3" * 0.01671202428135116 + "ADS_sca_1_OUT"."Feature_4" * -0.7163497555230034 + "ADS_sca_1_OUT"."Feature_5" * 0.3501083253113648 + "ADS_sca_1_OUT"."Feature_6" * -0.02365108420686553 + "ADS_sca_1_OUT"."Feature_7" * -0.15293556467571348 + "ADS_sca_1_OUT"."Feature_8" * -0.04278465473081572 + "ADS_sca_1_OUT"."Feature_9" * -0.07700365586043896 AS "PC2", "ADS_sca_1_OUT"."Feature_0" * -0.4595639307438372 + "ADS_sca_1_OUT"."Feature_1" * 0.3158880900516212 + "ADS_sca_1_OUT"."Feature_2" * -0.23051961282840416 + "ADS_sca_1_OUT"."Feature_3" * -0.0044376721269756845 + "ADS_sca_1_OUT"."Feature_4" * -0.16274384812665132 + "ADS_sca_1_OUT"."Feature_5" * -0.27453767262313855 + "ADS_sca_1_OUT"."Feature_6" * 0.06030524407436345 + "ADS_sca_1_OUT"."Feature_7" * -0.14174903890838467 + "ADS_sca_1_OUT"."Feature_8" * -0.7115147418569482 + "ADS_sca_1_OUT"."Feature_9" * -0.06338366606522455 AS "PC3", "ADS_sca_1_OUT"."Feature_0" * 0.12741284788275034 + "ADS_sca_1_OUT"."Feature_1" * 0.08549541136134871 + "ADS_sca_1_OUT"."Feature_2" * -0.3821190712444285 + "ADS_sca_1_OUT"."Feature_3" * -0.10433262844841386 + "ADS_sca_1_OUT"."Feature_4" * 0.08250986211203802 + "ADS_sca_1_OUT"."Feature_5" * -0.36296260084226667 + "ADS_sca_1_OUT"."Feature_6" * 0.10962886388759648 + "ADS_sca_1_OUT"."Feature_7" * 0.2426374781882909 + "ADS_sca_1_OUT"."Feature_8" * 0.2287736877363014 + "ADS_sca_1_OUT"."Feature_9" * -0.7468451366164522 AS "PC4", "ADS_sca_1_OUT"."Feature_0" * -0.5052628362580355 + "ADS_sca_1_OUT"."Feature_1" * 0.5459531848285842 + "ADS_sca_1_OUT"."Feature_2" * -0.22747468245471705 + "ADS_sca_1_OUT"."Feature_3" * 0.10502795983753949 + "ADS_sca_1_OUT"."Feature_4" * 0.09502215073405063 + "ADS_sca_1_OUT"."Feature_5" * 0.36269377695620797 + "ADS_sca_1_OUT"."Feature_6" * 0.0045813170830969465 + "ADS_sca_1_OUT"."Feature_7" * -0.05707137281293255 + "ADS_sca_1_OUT"."Feature_8" * 0.4879473635061551 + "ADS_sca_1_OUT"."Feature_9" * 0.04384333678041198 AS "PC5", "ADS_sca_1_OUT"."Feature_0" * -0.364462956028093 + "ADS_sca_1_OUT"."Feature_1" * -0.4012918066249357 + "ADS_sca_1_OUT"."Feature_2" * 0.1851889259404308 + "ADS_sca_1_OUT"."Feature_3" * -0.03041929320097767 + "ADS_sca_1_OUT"."Feature_4" * -0.1029513075574872 + "ADS_sca_1_OUT"."Feature_5" * 0.5811919009803136 + "ADS_sca_1_OUT"."Feature_6" * -0.060907389766695234 + "ADS_sca_1_OUT"."Feature_7" * 0.12041134521888586 + "ADS_sca_1_OUT"."Feature_8" * -0.186159059340367 + "ADS_sca_1_OUT"."Feature_9" * -0.5192923770633756 AS "PC6", "ADS_sca_1_OUT"."Feature_0" * 0.20119583886282807 + "ADS_sca_1_OUT"."Feature_1" * 0.0677442703839704 + "ADS_sca_1_OUT"."Feature_2" * -0.41277620208310173 + "ADS_sca_1_OUT"."Feature_3" * -0.019873248265688318 + "ADS_sca_1_OUT"."Feature_4" * 0.327357356668028 + "ADS_sca_1_OUT"."Feature_5" * 0.3399166161542765 + "ADS_sca_1_OUT"."Feature_6" * 0.007401751370061409 + "ADS_sca_1_OUT"."Feature_7" * 0.6352452099253666 + "ADS_sca_1_OUT"."Feature_8" * -0.3190683902934043 + "ADS_sca_1_OUT"."Feature_9" * 0.23674831363349555 AS "PC7" 
FROM "ADS_sca_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.2945049927746002) THEN 2 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.2645603213740096) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.168744139305163) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.004332423735525261) THEN 6 ELSE 7 END ELSE 8 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.1946680897415544) THEN 10 ELSE 11 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 0.705882352941177 AS "P_1", 0.176470588235294 AS "P_2", 0.117647058823529 AS "P_3", 1 AS "D", 0.705882352941177 AS "DP" UNION ALL SELECT 6 AS nid, 0.3 AS "P_0", 0.7 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 0.7 AS "DP" UNION ALL SELECT 7 AS nid, 0.8125 AS "P_0", 0.0 AS "P_1", 0.1875 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.8125 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.888888888888889 AS "P_2", 0.111111111111111 AS "P_3", 2 AS "D", 0.888888888888889 AS "DP" UNION ALL SELECT 10 AS nid, 0.09090909090909091 AS "P_0", 0.09090909090909091 AS "P_1", 0.5454545454545451 AS "P_2", 0.27272727272727304 AS "P_3", 2 AS "D", 0.5454545454545451 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.117647058823529 AS "P_2", 0.882352941176471 AS "P_3", 3 AS "D", 0.882352941176471 AS "DP") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_0" AS "P_0", "DT_node_data"."P_1" AS "P_1", "DT_node_data"."P_2" AS "P_2", "DT_node_data"."P_3" AS "P_3", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"RF_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 1e-100) THEN "DT_Output"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 1e-100) THEN "DT_Output"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 1e-100) THEN "DT_Output"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 1e-100) THEN "DT_Output"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.107677912433695) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.6370928399237632) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.4661878563783589) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.2945049927746002) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.009325891274075696) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.2776372333304645) THEN 10 ELSE 11 END ELSE 12 END END ELSE 13 END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.111111111111111 AS "P_0", 0.555555555555556 AS "P_1", 0.0 AS "P_2", 0.333333333333333 AS "P_3", 1 AS "D", 0.555555555555556 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.06666666666666665 AS "P_1", 0.4666666666666667 AS "P_2", 0.4666666666666667 AS "P_3", 2 AS "D", 0.4666666666666667 AS "DP" UNION ALL SELECT 10 AS nid, 0.3 AS "P_0", 0.7 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 0.7 AS "DP" UNION ALL SELECT 11 AS nid, 0.75 AS "P_0", 0.0 AS "P_1", 0.25 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.75 AS "DP" UNION ALL SELECT 12 AS nid, 0.181818181818182 AS "P_0", 0.0 AS "P_1", 0.181818181818182 AS "P_2", 0.636363636363636 AS "P_3", 3 AS "D", 0.636363636363636 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_0" AS "P_0", "DT_node_data_1"."P_1" AS "P_1", "DT_node_data_1"."P_2" AS "P_2", "DT_node_data_1"."P_3" AS "P_3", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"RF_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_1"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 1e-100) THEN "DT_Output_1"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_1"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 1e-100) THEN "DT_Output_1"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_1"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 1e-100) THEN "DT_Output_1"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_1"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 1e-100) THEN "DT_Output_1"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.9276334407773816) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.4661878563783589) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.7563947011047835) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.151709312421265) THEN 7 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.338456492422144) THEN 9 ELSE 10 END END ELSE 11 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0625 AS "P_0", 0.875 AS "P_1", 0.0 AS "P_2", 0.0625 AS "P_3", 1 AS "D", 0.875 AS "DP" UNION ALL SELECT 4 AS nid, 0.0 AS "P_0", 0.125 AS "P_1", 0.0 AS "P_2", 0.875 AS "P_3", 3 AS "D", 0.875 AS "DP" UNION ALL SELECT 7 AS nid, 0.4444444444444442 AS "P_0", 0.11111111111111105 AS "P_1", 0.05555555555555563 AS "P_2", 0.3888888888888892 AS "P_3", 0 AS "D", 0.4444444444444442 AS "DP" UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.214285714285714 AS "P_2", 0.785714285714286 AS "P_3", 3 AS "D", 0.785714285714286 AS "DP") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_0" AS "P_0", "DT_node_data_2"."P_1" AS "P_1", "DT_node_data_2"."P_2" AS "P_2", "DT_node_data_2"."P_3" AS "P_3", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"RF_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_2"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 1e-100) THEN "DT_Output_2"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_2"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 1e-100) THEN "DT_Output_2"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_2"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 1e-100) THEN "DT_Output_2"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_2"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 1e-100) THEN "DT_Output_2"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.368012930967206) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.2586086716235531) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.3962695786773025) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.168744139305163) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.993778690507791) THEN 8 ELSE 9 END ELSE 10 END END ELSE 11 END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.105263157894737 AS "P_0", 0.684210526315789 AS "P_1", 0.0 AS "P_2", 0.210526315789474 AS "P_3", 1 AS "D", 0.684210526315789 AS "DP" UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 0.5 AS "P_1", 0.5 AS "P_2", 0.0 AS "P_3", 1 AS "D", 0.5 AS "DP" UNION ALL SELECT 8 AS nid, 0.9523809523809524 AS "P_0", 0.04761904761904762 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.9523809523809524 AS "DP" UNION ALL SELECT 9 AS nid, 0.428571428571429 AS "P_0", 0.0 AS "P_1", 0.571428571428571 AS "P_2", 0.0 AS "P_3", 2 AS "D", 0.571428571428571 AS "DP" UNION ALL SELECT 10 AS nid, 0.0625 AS "P_0", 0.0 AS "P_1", 0.5 AS "P_2", 0.4375 AS "P_3", 2 AS "D", 0.5 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.142857142857143 AS "P_2", 0.857142857142857 AS "P_3", 3 AS "D", 0.857142857142857 AS "DP") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_0" AS "P_0", "DT_node_data_3"."P_1" AS "P_1", "DT_node_data_3"."P_2" AS "P_2", "DT_node_data_3"."P_3" AS "P_3", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"RF_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_3"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 1e-100) THEN "DT_Output_3"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_3"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 1e-100) THEN "DT_Output_3"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_3"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 1e-100) THEN "DT_Output_3"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_3"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 1e-100) THEN "DT_Output_3"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.2196329395293148) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.9276334407773816) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.09197033756332557) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.188751346926523) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.1324890879841794) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.6684107244351555) THEN 11 ELSE 12 END END END ELSE 13 END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 0.7499999999999999 AS "P_1", 0.16666666666666696 AS "P_2", 0.08333333333333329 AS "P_3", 1 AS "D", 0.7499999999999999 AS "DP" UNION ALL SELECT 8 AS nid, 0.714285714285714 AS "P_0", 0.142857142857143 AS "P_1", 0.142857142857143 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.714285714285714 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.176470588235294 AS "P_1", 0.176470588235294 AS "P_2", 0.647058823529412 AS "P_3", 3 AS "D", 0.647058823529412 AS "DP" UNION ALL SELECT 11 AS nid, 0.714285714285714 AS "P_0", 0.0 AS "P_1", 0.285714285714286 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.714285714285714 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.857142857142857 AS "P_2", 0.142857142857143 AS "P_3", 2 AS "D", 0.857142857142857 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.142857142857143 AS "P_2", 0.857142857142857 AS "P_3", 3 AS "D", 0.857142857142857 AS "DP") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."P_0" AS "P_0", "DT_node_data_4"."P_1" AS "P_1", "DT_node_data_4"."P_2" AS "P_2", "DT_node_data_4"."P_3" AS "P_3", "DT_node_data_4"."D" AS "D", "DT_node_data_4"."DP" AS "DP" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"RF_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_4"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 1e-100) THEN "DT_Output_4"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_4"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 1e-100) THEN "DT_Output_4"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_4"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 1e-100) THEN "DT_Output_4"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_4"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 1e-100) THEN "DT_Output_4"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.09191634775109143) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.6425135344447334) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.5508123297040655) THEN 4 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.5543611899767722) THEN 6 ELSE 7 END END ELSE 8 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.068802241426013) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.168744139305163) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.2528550725586916) THEN 12 ELSE 13 END ELSE 14 END ELSE 15 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.4545454545454546 AS "P_0", 0.36363636363636365 AS "P_1", 0.0 AS "P_2", 0.18181818181818182 AS "P_3", 0 AS "D", 0.4545454545454546 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.24999999999999994 AS "P_1", 0.08333333333333329 AS "P_2", 0.6666666666666669 AS "P_3", 3 AS "D", 0.6666666666666669 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.875 AS "P_1", 0.125 AS "P_2", 0.0 AS "P_3", 1 AS "D", 0.875 AS "DP" UNION ALL SELECT 8 AS nid, 0.125 AS "P_0", 0.375 AS "P_1", 0.5 AS "P_2", 0.0 AS "P_3", 2 AS "D", 0.5 AS "DP" UNION ALL SELECT 12 AS nid, 0.875 AS "P_0", 0.0 AS "P_1", 0.125 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.875 AS "DP" UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.07142857142857137 AS "P_0", 0.0 AS "P_1", 0.14285714285714293 AS "P_2", 0.7857142857142857 AS "P_3", 3 AS "D", 0.7857142857142857 AS "DP" UNION ALL SELECT 15 AS nid, 0.142857142857143 AS "P_0", 0.0 AS "P_1", 0.857142857142857 AS "P_2", 0.0 AS "P_3", 2 AS "D", 0.857142857142857 AS "DP") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."P_0" AS "P_0", "DT_node_data_5"."P_1" AS "P_1", "DT_node_data_5"."P_2" AS "P_2", "DT_node_data_5"."P_3" AS "P_3", "DT_node_data_5"."D" AS "D", "DT_node_data_5"."DP" AS "DP" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"RF_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_5"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 1e-100) THEN "DT_Output_5"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_5"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 1e-100) THEN "DT_Output_5"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_5"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 1e-100) THEN "DT_Output_5"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_5"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 1e-100) THEN "DT_Output_5"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.2196329395293148) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.107677912433695) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.991034176213928) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.168744139305163) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.5991496758271965) THEN 6 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.3402451903006638) THEN 8 ELSE 9 END END ELSE 10 END ELSE 11 END ELSE 12 END ELSE 13 END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 0.5 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.5 AS "P_3", 0 AS "D", 0.5 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.375 AS "P_0", 0.5625 AS "P_1", 0.0625 AS "P_2", 0.0 AS "P_3", 1 AS "D", 0.5625 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.2941176470588237 AS "P_1", 0.23529411764705876 AS "P_2", 0.47058823529411753 AS "P_3", 3 AS "D", 0.47058823529411753 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.857142857142857 AS "P_2", 0.142857142857143 AS "P_3", 2 AS "D", 0.857142857142857 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."P_0" AS "P_0", "DT_node_data_6"."P_1" AS "P_1", "DT_node_data_6"."P_2" AS "P_2", "DT_node_data_6"."P_3" AS "P_3", "DT_node_data_6"."D" AS "D", "DT_node_data_6"."DP" AS "DP" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"RF_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_6"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 1e-100) THEN "DT_Output_6"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_6"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 1e-100) THEN "DT_Output_6"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_6"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 1e-100) THEN "DT_Output_6"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_6"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 1e-100) THEN "DT_Output_6"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.107677912433695) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.09191634775109143) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.2406891673399278) THEN 4 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.4505643754808104) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.1732747896220992) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.168744139305163) THEN 10 ELSE 11 END ELSE 12 END END ELSE 13 END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 0.5 AS "P_1", 0.0 AS "P_2", 0.5 AS "P_3", 1 AS "D", 0.5 AS "DP" UNION ALL SELECT 6 AS nid, 0.666666666666667 AS "P_0", 0.333333333333333 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.666666666666667 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.8125 AS "P_1", 0.125 AS "P_2", 0.0625 AS "P_3", 1 AS "D", 0.8125 AS "DP" UNION ALL SELECT 10 AS nid, 0.857142857142857 AS "P_0", 0.0 AS "P_1", 0.142857142857143 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.857142857142857 AS "DP" UNION ALL SELECT 11 AS nid, 0.2 AS "P_0", 0.0 AS "P_1", 0.5 AS "P_2", 0.3 AS "P_3", 2 AS "D", 0.5 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."P_0" AS "P_0", "DT_node_data_7"."P_1" AS "P_1", "DT_node_data_7"."P_2" AS "P_2", "DT_node_data_7"."P_3" AS "P_3", "DT_node_data_7"."D" AS "D", "DT_node_data_7"."DP" AS "DP" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"RF_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_7"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 1e-100) THEN "DT_Output_7"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_7"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 1e-100) THEN "DT_Output_7"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_7"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 1e-100) THEN "DT_Output_7"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_7"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 1e-100) THEN "DT_Output_7"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.0286801870471451) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.8809421669930529) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.08239702613342563) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.258637288944231) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.3402451903006638) THEN 8 ELSE 9 END ELSE 10 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.4789489565547067) THEN 12 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.1587797205700172) THEN 14 ELSE 15 END END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 0.375 AS "P_1", 0.0 AS "P_2", 0.625 AS "P_3", 3 AS "D", 0.625 AS "DP" UNION ALL SELECT 4 AS nid, 0.0 AS "P_0", 0.866666666666667 AS "P_1", 0.133333333333333 AS "P_2", 0.0 AS "P_3", 1 AS "D", 0.866666666666667 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.625 AS "P_0", 0.25 AS "P_1", 0.125 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.625 AS "DP" UNION ALL SELECT 10 AS nid, 0.5 AS "P_0", 0.0 AS "P_1", 0.5 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.5 AS "DP" UNION ALL SELECT 12 AS nid, 0.142857142857143 AS "P_0", 0.142857142857143 AS "P_1", 0.571428571428571 AS "P_2", 0.142857142857143 AS "P_3", 2 AS "D", 0.571428571428571 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.125 AS "P_1", 0.0 AS "P_2", 0.875 AS "P_3", 3 AS "D", 0.875 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.07142857142857137 AS "P_2", 0.9285714285714286 AS "P_3", 3 AS "D", 0.9285714285714286 AS "DP") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."P_0" AS "P_0", "DT_node_data_8"."P_1" AS "P_1", "DT_node_data_8"."P_2" AS "P_2", "DT_node_data_8"."P_3" AS "P_3", "DT_node_data_8"."D" AS "D", "DT_node_data_8"."DP" AS "DP" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"RF_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_8"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 1e-100) THEN "DT_Output_8"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_8"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 1e-100) THEN "DT_Output_8"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_8"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 1e-100) THEN "DT_Output_8"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_8"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 1e-100) THEN "DT_Output_8"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.258637288944231) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -1.392672788656661) THEN 3 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.4468389326135301) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.004332423735525261) THEN 6 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.1925433036105295) THEN 8 ELSE 9 END END ELSE 10 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.4445799475111734) THEN 12 ELSE 13 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.2 AS "P_0", 0.4 AS "P_1", 0.0 AS "P_2", 0.4 AS "P_3", 1 AS "D", 0.4 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.08333333333333334 AS "P_0", 0.33333333333333315 AS "P_1", 0.5000000000000002 AS "P_2", 0.08333333333333334 AS "P_3", 2 AS "D", 0.5000000000000002 AS "DP" UNION ALL SELECT 12 AS nid, 0.2 AS "P_0", 0.0 AS "P_1", 0.8 AS "P_2", 0.0 AS "P_3", 2 AS "D", 0.8 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.9090909090909091 AS "P_2", 0.09090909090909091 AS "P_3", 2 AS "D", 0.9090909090909091 AS "DP") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."P_0" AS "P_0", "DT_node_data_9"."P_1" AS "P_1", "DT_node_data_9"."P_2" AS "P_2", "DT_node_data_9"."P_3" AS "P_3", "DT_node_data_9"."D" AS "D", "DT_node_data_9"."DP" AS "DP" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"RF_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_9"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 1e-100) THEN "DT_Output_9"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_9"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 1e-100) THEN "DT_Output_9"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_9"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 1e-100) THEN "DT_Output_9"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_9"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 1e-100) THEN "DT_Output_9"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_9"), 
"RF_0" AS 
(SELECT "RF_esu_0"."KEY" AS "KEY", "RF_esu_0"."Score_0" AS "Score_0", "RF_esu_0"."Proba_0" AS "Proba_0", "RF_esu_0"."LogProba_0" AS "LogProba_0", "RF_esu_0"."Score_1" AS "Score_1", "RF_esu_0"."Proba_1" AS "Proba_1", "RF_esu_0"."LogProba_1" AS "LogProba_1", "RF_esu_0"."Score_2" AS "Score_2", "RF_esu_0"."Proba_2" AS "Proba_2", "RF_esu_0"."LogProba_2" AS "LogProba_2", "RF_esu_0"."Score_3" AS "Score_3", "RF_esu_0"."Proba_3" AS "Proba_3", "RF_esu_0"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_0"."KEY" AS "KEY", CAST("RF_Model_0"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_0"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_0"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_0"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_0"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_0"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_0"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_0"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_0"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_0"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_0"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_0"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_0" UNION ALL SELECT "RF_Model_1"."KEY" AS "KEY", CAST("RF_Model_1"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_1"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_1"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_1"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_1"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_1"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_1"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_1"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_1"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_1"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_1"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_1"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_1" UNION ALL SELECT "RF_Model_2"."KEY" AS "KEY", CAST("RF_Model_2"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_2"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_2"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_2"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_2"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_2"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_2"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_2"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_2"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_2"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_2"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_2"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_2" UNION ALL SELECT "RF_Model_3"."KEY" AS "KEY", CAST("RF_Model_3"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_3"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_3"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_3"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_3"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_3"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_3"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_3"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_3"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_3"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_3"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_3"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_3" UNION ALL SELECT "RF_Model_4"."KEY" AS "KEY", CAST("RF_Model_4"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_4"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_4"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_4"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_4"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_4"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_4"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_4"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_4"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_4"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_4"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_4"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_4" UNION ALL SELECT "RF_Model_5"."KEY" AS "KEY", CAST("RF_Model_5"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_5"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_5"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_5"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_5"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_5"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_5"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_5"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_5"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_5"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_5"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_5"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_5" UNION ALL SELECT "RF_Model_6"."KEY" AS "KEY", CAST("RF_Model_6"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_6"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_6"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_6"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_6"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_6"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_6"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_6"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_6"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_6"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_6"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_6"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_6" UNION ALL SELECT "RF_Model_7"."KEY" AS "KEY", CAST("RF_Model_7"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_7"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_7"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_7"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_7"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_7"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_7"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_7"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_7"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_7"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_7"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_7"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_7" UNION ALL SELECT "RF_Model_8"."KEY" AS "KEY", CAST("RF_Model_8"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_8"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_8"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_8"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_8"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_8"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_8"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_8"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_8"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_8"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_8"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_8"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_8" UNION ALL SELECT "RF_Model_9"."KEY" AS "KEY", CAST("RF_Model_9"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_9"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_9"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_9"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_9"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_9"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_9"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_9"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_9"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_9"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_9"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_9"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_9") AS "RF_esu_0"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.1946680897415544) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.258637288944231) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.09191634775109143) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.4505643754808104) THEN 5 ELSE 6 END ELSE 7 END ELSE 8 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.6821097129639995) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.8441009559199685) THEN 11 ELSE 12 END ELSE 13 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.444444444444444 AS "P_0", 0.555555555555556 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 0.555555555555556 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.846153846153846 AS "P_1", 0.0 AS "P_2", 0.153846153846154 AS "P_3", 1 AS "D", 0.846153846153846 AS "DP" UNION ALL SELECT 7 AS nid, 0.8666666666666667 AS "P_0", 0.0 AS "P_1", 0.06666666666666667 AS "P_2", 0.06666666666666667 AS "P_3", 0 AS "D", 0.8666666666666667 AS "DP" UNION ALL SELECT 8 AS nid, 0.222222222222222 AS "P_0", 0.0 AS "P_1", 0.777777777777778 AS "P_2", 0.0 AS "P_3", 2 AS "D", 0.777777777777778 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.06666666666666667 AS "P_1", 0.8666666666666667 AS "P_2", 0.06666666666666667 AS "P_3", 2 AS "D", 0.8666666666666667 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.08333333333333329 AS "P_1", 0.0 AS "P_2", 0.9166666666666667 AS "P_3", 3 AS "D", 0.9166666666666667 AS "DP") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."P_0" AS "P_0", "DT_node_data_10"."P_1" AS "P_1", "DT_node_data_10"."P_2" AS "P_2", "DT_node_data_10"."P_3" AS "P_3", "DT_node_data_10"."D" AS "D", "DT_node_data_10"."DP" AS "DP" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"RF_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_10"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 1e-100) THEN "DT_Output_10"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_10"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 1e-100) THEN "DT_Output_10"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_10"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 1e-100) THEN "DT_Output_10"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_10"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 1e-100) THEN "DT_Output_10"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.09191634775109143) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.5918920500720478) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -1.143560972710457) THEN 4 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.3025809668480144) THEN 6 ELSE 7 END END ELSE 8 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.3055107667140322) THEN 10 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.1925433036105295) THEN 12 ELSE 13 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 0.285714285714286 AS "P_1", 0.0 AS "P_2", 0.714285714285714 AS "P_3", 3 AS "D", 0.714285714285714 AS "DP" UNION ALL SELECT 6 AS nid, 0.07142857142857137 AS "P_0", 0.9285714285714286 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 0.9285714285714286 AS "DP" UNION ALL SELECT 7 AS nid, 0.2857142857142857 AS "P_0", 0.4285714285714286 AS "P_1", 0.0 AS "P_2", 0.2857142857142857 AS "P_3", 1 AS "D", 0.4285714285714286 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.222222222222222 AS "P_1", 0.555555555555556 AS "P_2", 0.222222222222222 AS "P_3", 2 AS "D", 0.555555555555556 AS "DP" UNION ALL SELECT 10 AS nid, 0.588235294117647 AS "P_0", 0.0 AS "P_1", 0.411764705882353 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.588235294117647 AS "DP" UNION ALL SELECT 12 AS nid, 0.2 AS "P_0", 0.0 AS "P_1", 0.8 AS "P_2", 0.0 AS "P_3", 2 AS "D", 0.8 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.3125 AS "P_2", 0.6875 AS "P_3", 3 AS "D", 0.6875 AS "DP") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."P_0" AS "P_0", "DT_node_data_11"."P_1" AS "P_1", "DT_node_data_11"."P_2" AS "P_2", "DT_node_data_11"."P_3" AS "P_3", "DT_node_data_11"."D" AS "D", "DT_node_data_11"."DP" AS "DP" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"RF_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_11"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 1e-100) THEN "DT_Output_11"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_11"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 1e-100) THEN "DT_Output_11"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_11"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 1e-100) THEN "DT_Output_11"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_11"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 1e-100) THEN "DT_Output_11"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.258637288944231) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.5012100016396627) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.3038646443218691) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.1441309945214362) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.4811997401770442) THEN 6 ELSE 7 END ELSE 8 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.8479475692054699) THEN 10 ELSE 11 END END ELSE 12 END ELSE 13 END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 0.0 AS "P_0", 0.769230769230769 AS "P_1", 0.0 AS "P_2", 0.230769230769231 AS "P_3", 1 AS "D", 0.769230769230769 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.571428571428571 AS "P_1", 0.142857142857143 AS "P_2", 0.285714285714286 AS "P_3", 1 AS "D", 0.571428571428571 AS "DP" UNION ALL SELECT 8 AS nid, 0.285714285714286 AS "P_0", 0.714285714285714 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 0.714285714285714 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.625 AS "P_1", 0.0 AS "P_2", 0.375 AS "P_3", 1 AS "D", 0.625 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.1875 AS "P_2", 0.8125 AS "P_3", 3 AS "D", 0.8125 AS "DP" UNION ALL SELECT 12 AS nid, 0.714285714285714 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.285714285714286 AS "P_3", 0 AS "D", 0.714285714285714 AS "DP" UNION ALL SELECT 13 AS nid, 0.2000000000000001 AS "P_0", 0.0 AS "P_1", 0.7333333333333333 AS "P_2", 0.06666666666666672 AS "P_3", 2 AS "D", 0.7333333333333333 AS "DP") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."P_0" AS "P_0", "DT_node_data_12"."P_1" AS "P_1", "DT_node_data_12"."P_2" AS "P_2", "DT_node_data_12"."P_3" AS "P_3", "DT_node_data_12"."D" AS "D", "DT_node_data_12"."DP" AS "DP" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"RF_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_12"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 1e-100) THEN "DT_Output_12"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_12"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 1e-100) THEN "DT_Output_12"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_12"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 1e-100) THEN "DT_Output_12"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_12"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 1e-100) THEN "DT_Output_12"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.9276334407773816) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.7191732584682756) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.1946680897415544) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.09191634775109143) THEN 7 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.054462292505962115) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.5111281257317619) THEN 12 ELSE 13 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 0.285714285714286 AS "P_1", 0.0 AS "P_2", 0.714285714285714 AS "P_3", 3 AS "D", 0.714285714285714 AS "DP" UNION ALL SELECT 4 AS nid, 0.05263157894736841 AS "P_0", 0.6842105263157892 AS "P_1", 0.21052631578947406 AS "P_2", 0.05263157894736841 AS "P_3", 1 AS "D", 0.6842105263157892 AS "DP" UNION ALL SELECT 7 AS nid, 0.5 AS "P_0", 0.5 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.5 AS "DP" UNION ALL SELECT 9 AS nid, 0.230769230769231 AS "P_0", 0.0 AS "P_1", 0.769230769230769 AS "P_2", 0.0 AS "P_3", 2 AS "D", 0.769230769230769 AS "DP" UNION ALL SELECT 10 AS nid, 0.875 AS "P_0", 0.0 AS "P_1", 0.125 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.875 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.2 AS "P_2", 0.8 AS "P_3", 3 AS "D", 0.8 AS "DP" UNION ALL SELECT 13 AS nid, 0.2 AS "P_0", 0.0 AS "P_1", 0.8 AS "P_2", 0.0 AS "P_3", 2 AS "D", 0.8 AS "DP") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."P_0" AS "P_0", "DT_node_data_13"."P_1" AS "P_1", "DT_node_data_13"."P_2" AS "P_2", "DT_node_data_13"."P_3" AS "P_3", "DT_node_data_13"."D" AS "D", "DT_node_data_13"."DP" AS "DP" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"RF_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_13"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 1e-100) THEN "DT_Output_13"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_13"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 1e-100) THEN "DT_Output_13"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_13"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 1e-100) THEN "DT_Output_13"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_13"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 1e-100) THEN "DT_Output_13"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.258637288944231) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.034104586520244236) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.5012100016396627) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.3679665858087793) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.028544933613234) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.6684107244351555) THEN 12 ELSE 13 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0", 0.7692307692307692 AS "P_1", 0.07692307692307691 AS "P_2", 0.15384615384615402 AS "P_3", 1 AS "D", 0.7692307692307692 AS "DP" UNION ALL SELECT 6 AS nid, 0.4285714285714286 AS "P_0", 0.4285714285714286 AS "P_1", 0.0 AS "P_2", 0.14285714285714285 AS "P_3", 0 AS "D", 0.4285714285714286 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.5 AS "P_1", 0.4 AS "P_2", 0.1 AS "P_3", 1 AS "D", 0.5 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.428571428571429 AS "P_0", 0.0 AS "P_1", 0.571428571428571 AS "P_2", 0.0 AS "P_3", 2 AS "D", 0.571428571428571 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.9375 AS "P_2", 0.0625 AS "P_3", 2 AS "D", 0.9375 AS "DP") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."P_0" AS "P_0", "DT_node_data_14"."P_1" AS "P_1", "DT_node_data_14"."P_2" AS "P_2", "DT_node_data_14"."P_3" AS "P_3", "DT_node_data_14"."D" AS "D", "DT_node_data_14"."DP" AS "DP" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"RF_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_14"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 1e-100) THEN "DT_Output_14"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_14"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 1e-100) THEN "DT_Output_14"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_14"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 1e-100) THEN "DT_Output_14"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_14"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 1e-100) THEN "DT_Output_14"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.09191634775109143) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.3038646443218691) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.2715725749951632) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.338456492422144) THEN 8 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.258637288944231) THEN 10 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.051199911548208764) THEN 12 ELSE 13 END END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 0.777777777777778 AS "P_1", 0.0 AS "P_2", 0.222222222222222 AS "P_3", 1 AS "D", 0.777777777777778 AS "DP" UNION ALL SELECT 5 AS nid, 0.13333333333333305 AS "P_0", 0.8000000000000003 AS "P_1", 0.06666666666666672 AS "P_2", 0.0 AS "P_3", 1 AS "D", 0.8000000000000003 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.166666666666667 AS "P_1", 0.222222222222222 AS "P_2", 0.611111111111111 AS "P_3", 3 AS "D", 0.611111111111111 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.2 AS "P_0", 0.0 AS "P_1", 0.1 AS "P_2", 0.7 AS "P_3", 3 AS "D", 0.7 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.625 AS "P_2", 0.375 AS "P_3", 2 AS "D", 0.625 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."P_0" AS "P_0", "DT_node_data_15"."P_1" AS "P_1", "DT_node_data_15"."P_2" AS "P_2", "DT_node_data_15"."P_3" AS "P_3", "DT_node_data_15"."D" AS "D", "DT_node_data_15"."DP" AS "DP" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"RF_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_15"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 1e-100) THEN "DT_Output_15"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_15"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 1e-100) THEN "DT_Output_15"."P_1" ELSE 1e-100 END) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "Score_2", "DT_Output_15"."P_2" AS "Proba_2", log(CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 1e-100) THEN "DT_Output_15"."P_2" ELSE 1e-100 END) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "Score_3", "DT_Output_15"."P_3" AS "Proba_3", log(CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 1e-100) THEN "DT_Output_15"."P_3" ELSE 1e-100 END) AS "LogProba_3" 
FROM "DT_Output_15"), 
"RF_1" AS 
(SELECT "RF_esu_1"."KEY" AS "KEY", "RF_esu_1"."Score_0" AS "Score_0", "RF_esu_1"."Proba_0" AS "Proba_0", "RF_esu_1"."LogProba_0" AS "LogProba_0", "RF_esu_1"."Score_1" AS "Score_1", "RF_esu_1"."Proba_1" AS "Proba_1", "RF_esu_1"."LogProba_1" AS "LogProba_1", "RF_esu_1"."Score_2" AS "Score_2", "RF_esu_1"."Proba_2" AS "Proba_2", "RF_esu_1"."LogProba_2" AS "LogProba_2", "RF_esu_1"."Score_3" AS "Score_3", "RF_esu_1"."Proba_3" AS "Proba_3", "RF_esu_1"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_10"."KEY" AS "KEY", CAST("RF_Model_10"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_10"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_10"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_10"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_10"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_10"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_10"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_10"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_10"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_10"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_10"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_10"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_10" UNION ALL SELECT "RF_Model_11"."KEY" AS "KEY", CAST("RF_Model_11"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_11"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_11"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_11"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_11"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_11"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_11"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_11"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_11"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_11"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_11"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_11"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_11" UNION ALL SELECT "RF_Model_12"."KEY" AS "KEY", CAST("RF_Model_12"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_12"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_12"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_12"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_12"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_12"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_12"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_12"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_12"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_12"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_12"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_12"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_12" UNION ALL SELECT "RF_Model_13"."KEY" AS "KEY", CAST("RF_Model_13"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_13"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_13"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_13"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_13"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_13"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_13"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_13"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_13"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_13"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_13"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_13"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_13" UNION ALL SELECT "RF_Model_14"."KEY" AS "KEY", CAST("RF_Model_14"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_14"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_14"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_14"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_14"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_14"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_14"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_14"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_14"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_14"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_14"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_14"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_14" UNION ALL SELECT "RF_Model_15"."KEY" AS "KEY", CAST("RF_Model_15"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_15"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_15"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_15"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_15"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_15"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_Model_15"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_Model_15"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_Model_15"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_Model_15"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_Model_15"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_Model_15"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_Model_15") AS "RF_esu_1"), 
"RF" AS 
(SELECT "RFbig_esu"."KEY" AS "KEY", "RFbig_esu"."Score_0" AS "Score_0", "RFbig_esu"."Proba_0" AS "Proba_0", "RFbig_esu"."LogProba_0" AS "LogProba_0", "RFbig_esu"."Score_1" AS "Score_1", "RFbig_esu"."Proba_1" AS "Proba_1", "RFbig_esu"."LogProba_1" AS "LogProba_1", "RFbig_esu"."Score_2" AS "Score_2", "RFbig_esu"."Proba_2" AS "Proba_2", "RFbig_esu"."LogProba_2" AS "LogProba_2", "RFbig_esu"."Score_3" AS "Score_3", "RFbig_esu"."Proba_3" AS "Proba_3", "RFbig_esu"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_0"."KEY" AS "KEY", CAST("RF_0"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_0"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_0"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_0"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_0"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_0"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_0"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_0"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_0"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_0"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_0"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_0"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_0" UNION ALL SELECT "RF_1"."KEY" AS "KEY", CAST("RF_1"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_1"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_1"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_1"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_1"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_1"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("RF_1"."Score_2" AS DOUBLE) AS "Score_2", CAST("RF_1"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("RF_1"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("RF_1"."Score_3" AS DOUBLE) AS "Score_3", CAST("RF_1"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("RF_1"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM "RF_1") AS "RFbig_esu"), 
"RF_avg" AS 
(SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS DOUBLE) AS "Score_0", CAST("T"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("T"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("T"."Score_1" AS DOUBLE) AS "Score_1", CAST("T"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("T"."LogProba_1" AS DOUBLE) AS "LogProba_1", CAST("T"."Score_2" AS DOUBLE) AS "Score_2", CAST("T"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("T"."LogProba_2" AS DOUBLE) AS "LogProba_2", CAST("T"."Score_3" AS DOUBLE) AS "Score_3", CAST("T"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("T"."LogProba_3" AS DOUBLE) AS "LogProba_3" 
FROM (SELECT "RF"."KEY" AS "KEY", avg(CAST("RF"."Score_0" AS DOUBLE)) AS "Score_0", avg(CAST("RF"."Proba_0" AS DOUBLE)) AS "Proba_0", CAST(NULL AS DOUBLE) AS "LogProba_0", avg(CAST("RF"."Score_1" AS DOUBLE)) AS "Score_1", avg(CAST("RF"."Proba_1" AS DOUBLE)) AS "Proba_1", CAST(NULL AS DOUBLE) AS "LogProba_1", avg(CAST("RF"."Score_2" AS DOUBLE)) AS "Score_2", avg(CAST("RF"."Proba_2" AS DOUBLE)) AS "Proba_2", CAST(NULL AS DOUBLE) AS "LogProba_2", avg(CAST("RF"."Score_3" AS DOUBLE)) AS "Score_3", avg(CAST("RF"."Proba_3" AS DOUBLE)) AS "Proba_3", CAST(NULL AS DOUBLE) AS "LogProba_3" 
FROM "RF" GROUP BY "RF"."KEY") AS "T"), 
orig_cte AS 
(SELECT "RF_avg"."KEY" AS "KEY", "RF_avg"."Score_0" AS "Score_0", "RF_avg"."Score_1" AS "Score_1", "RF_avg"."Score_2" AS "Score_2", "RF_avg"."Score_3" AS "Score_3", "RF_avg"."Proba_0" AS "Proba_0", "RF_avg"."Proba_1" AS "Proba_1", "RF_avg"."Proba_2" AS "Proba_2", "RF_avg"."Proba_3" AS "Proba_3", "RF_avg"."LogProba_0" AS "LogProba_0", "RF_avg"."LogProba_1" AS "LogProba_1", "RF_avg"."LogProba_2" AS "LogProba_2", "RF_avg"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba" 
FROM "RF_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", log(CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 1e-100) THEN arg_max_cte."Proba_0" ELSE 1e-100 END) AS "LogProba_0", log(CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 1e-100) THEN arg_max_cte."Proba_1" ELSE 1e-100 END) AS "LogProba_1", log(CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 1e-100) THEN arg_max_cte."Proba_2" ELSE 1e-100 END) AS "LogProba_2", log(CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 1e-100) THEN arg_max_cte."Proba_3" ELSE 1e-100 END) AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte