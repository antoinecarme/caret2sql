-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretRegressor_nnet_pca
-- Dataset : diabetes
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "CenteredDataForPCA" AS 
(SELECT "ADS"."KEY" AS "KEY", (CAST("ADS"."Feature_0" AS FLOAT) - 0.0002686932066652983) / 0.04730915349390602 AS "Feature_0", (CAST("ADS"."Feature_1" AS FLOAT) - 0.0007239580580639588) / 0.047673150284254465 AS "Feature_1", (CAST("ADS"."Feature_2" AS FLOAT) - 0.0007280719825586781) / 0.04700253448417295 AS "Feature_2", (CAST("ADS"."Feature_3" AS FLOAT) - 0.0010135652210843957) / 0.04840388131203584 AS "Feature_3", (CAST("ADS"."Feature_4" AS FLOAT) - 0.0009763580732882078) / 0.04811896752594957 AS "Feature_4", (CAST("ADS"."Feature_5" AS FLOAT) - 0.0017643808242337245) / 0.048129028508581584 AS "Feature_5", (CAST("ADS"."Feature_6" AS FLOAT) - -0.0016512815450565033) / 0.04626798564989309 AS "Feature_6", (CAST("ADS"."Feature_7" AS FLOAT) - 0.0013905501983388132) / 0.04743032244703379 AS "Feature_7", (CAST("ADS"."Feature_8" AS FLOAT) - 0.001272648254809092) / 0.04595800380394428 AS "Feature_8", (CAST("ADS"."Feature_9" AS FLOAT) - 0.0010344250056816262) / 0.04782938024075454 AS "Feature_9" 
FROM diabetes AS "ADS"), 
"ADS_car_1_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA"."Feature_0" * -0.2290778852038531 + "CenteredDataForPCA"."Feature_1" * -0.1753752188773297 + "CenteredDataForPCA"."Feature_2" * -0.3101462867523008 + "CenteredDataForPCA"."Feature_3" * -0.2626680617954629 + "CenteredDataForPCA"."Feature_4" * -0.3479056910483734 + "CenteredDataForPCA"."Feature_5" * -0.3559311512395374 + "CenteredDataForPCA"."Feature_6" * 0.2700667896053253 + "CenteredDataForPCA"."Feature_7" * -0.4281896059050315 + "CenteredDataForPCA"."Feature_8" * -0.3817554053543343 + "CenteredDataForPCA"."Feature_9" * -0.319118586083605 AS caress_2, "CenteredDataForPCA"."Feature_0" * 0.09937121658133408 + "CenteredDataForPCA"."Feature_1" * -0.3974071373222933 + "CenteredDataForPCA"."Feature_2" * -0.0955290657434 + "CenteredDataForPCA"."Feature_3" * -0.10428227480233908 + "CenteredDataForPCA"."Feature_4" * 0.5519944936080498 + "CenteredDataForPCA"."Feature_5" * 0.44169748621486143 + "CenteredDataForPCA"."Feature_6" * 0.5359791630654337 + "CenteredDataForPCA"."Feature_7" * -0.09747648126824032 + "CenteredDataForPCA"."Feature_8" * -0.06464571596604123 + "CenteredDataForPCA"."Feature_9" * -0.1069735796588606 AS caress_3, "CenteredDataForPCA"."Feature_0" * -0.447334397656141 + "CenteredDataForPCA"."Feature_1" * 0.06517171310859735 + "CenteredDataForPCA"."Feature_2" * -0.1813228857818792 + "CenteredDataForPCA"."Feature_3" * -0.5633053550809429 + "CenteredDataForPCA"."Feature_4" * 0.10998840407137493 + "CenteredDataForPCA"."Feature_5" * 0.2893639101113097 + "CenteredDataForPCA"."Feature_6" * -0.3533722834611607 + "CenteredDataForPCA"."Feature_7" * 0.3825782441157001 + "CenteredDataForPCA"."Feature_8" * -0.04470455133576475 + "CenteredDataForPCA"."Feature_9" * -0.2763840995943125 AS caress_4, "CenteredDataForPCA"."Feature_0" * -0.3821475868520689 + "CenteredDataForPCA"."Feature_1" * -0.6833479183061256 + "CenteredDataForPCA"."Feature_2" * 0.5241820976738465 + "CenteredDataForPCA"."Feature_3" * -0.03681239814871951 + "CenteredDataForPCA"."Feature_4" * -0.08445010736913261 + "CenteredDataForPCA"."Feature_5" * -0.16994357503869012 + "CenteredDataForPCA"."Feature_6" * -0.07693340159969728 + "CenteredDataForPCA"."Feature_7" * 0.017466366084080358 + "CenteredDataForPCA"."Feature_8" * 0.2554449000560565 + "CenteredDataForPCA"."Feature_9" * 0.05820877690254081 AS caress_5, "CenteredDataForPCA"."Feature_0" * -0.7351365637973705 + "CenteredDataForPCA"."Feature_1" * 0.3763855813795456 + "CenteredDataForPCA"."Feature_2" * 0.1420393394491647 + "CenteredDataForPCA"."Feature_3" * 0.3926718700192453 + "CenteredDataForPCA"."Feature_4" * 0.1428650665541864 + "CenteredDataForPCA"."Feature_5" * 0.1276726308786394 + "CenteredDataForPCA"."Feature_6" * 0.245950649429653 + "CenteredDataForPCA"."Feature_7" * -0.1284011919823951 + "CenteredDataForPCA"."Feature_8" * -0.1367980851890121 + "CenteredDataForPCA"."Feature_9" * 0.1055401494998786 AS caress_6, "CenteredDataForPCA"."Feature_0" * -0.12368487725974045 + "CenteredDataForPCA"."Feature_1" * -0.06284387588101352 + "CenteredDataForPCA"."Feature_2" * -0.2953969232053042 + "CenteredDataForPCA"."Feature_3" * -0.3412960311712761 + "CenteredDataForPCA"."Feature_4" * -0.01656449034153671 + "CenteredDataForPCA"."Feature_5" * -0.04587438751367261 + "CenteredDataForPCA"."Feature_6" * 0.08082110381516423 + "CenteredDataForPCA"."Feature_7" * -0.030199014358925625 + "CenteredDataForPCA"."Feature_8" * -0.0053457810566821425 + "CenteredDataForPCA"."Feature_9" * 0.8758760898858822 AS caress_7, "CenteredDataForPCA"."Feature_0" * -0.18093645279344808 + "CenteredDataForPCA"."Feature_1" * -0.06987137416766502 + "CenteredDataForPCA"."Feature_2" * -0.5789173338500514 + "CenteredDataForPCA"."Feature_3" * 0.2280204737784956 + "CenteredDataForPCA"."Feature_4" * 0.10126984562459923 + "CenteredDataForPCA"."Feature_5" * -0.2246202656518164 + "CenteredDataForPCA"."Feature_6" * 0.06544614151024082 + "CenteredDataForPCA"."Feature_7" * 0.03808580365663454 + "CenteredDataForPCA"."Feature_8" * 0.6979315085634531 + "CenteredDataForPCA"."Feature_9" * -0.147273260741705 AS caress_8, "CenteredDataForPCA"."Feature_0" * -0.05383172736122197 + "CenteredDataForPCA"."Feature_1" * -0.4351274140391209 + "CenteredDataForPCA"."Feature_2" * -0.37821690169463146 + "CenteredDataForPCA"."Feature_3" * 0.5275864487344293 + "CenteredDataForPCA"."Feature_4" * -0.10231604328930263 + "CenteredDataForPCA"."Feature_5" * 0.18616170017658573 + "CenteredDataForPCA"."Feature_6" * -0.32383229348443515 + "CenteredDataForPCA"."Feature_7" * 0.20648110070520395 + "CenteredDataForPCA"."Feature_8" * -0.4325759465726844 + "CenteredDataForPCA"."Feature_9" * 0.0813774719019286 AS caress_9, "CenteredDataForPCA"."Feature_0" * -0.0118709035580283 + "CenteredDataForPCA"."Feature_1" * -0.01608813015824754 + "CenteredDataForPCA"."Feature_2" * -0.03679649410236003 + "CenteredDataForPCA"."Feature_3" * -0.019988053380157533 + "CenteredDataForPCA"."Feature_4" * 0.043694971359643266 + "CenteredDataForPCA"."Feature_5" * 0.37143600152557 + "CenteredDataForPCA"."Feature_6" * -0.4864756469787478 + "CenteredDataForPCA"."Feature_7" * -0.7682461390900374 + "CenteredDataForPCA"."Feature_8" * 0.17559159913947106 + "CenteredDataForPCA"."Feature_9" * 0.0167242545619639 AS caress_10, "CenteredDataForPCA"."Feature_0" * -0.001831091592284298 + "CenteredDataForPCA"."Feature_1" * 0.00268481872708177 + "CenteredDataForPCA"."Feature_2" * 0.007537615926184184 + "CenteredDataForPCA"."Feature_3" * -0.0069370547321724 + "CenteredDataForPCA"."Feature_4" * 0.7153434315394136 + "CenteredDataForPCA"."Feature_5" * -0.5693190225069522 + "CenteredDataForPCA"."Feature_6" * -0.3101075092440782 + "CenteredDataForPCA"."Feature_7" * -0.09378091486819988 + "CenteredDataForPCA"."Feature_8" * -0.24295700163084485 + "CenteredDataForPCA"."Feature_9" * 0.007382012624339704 AS caress_11 
FROM "CenteredDataForPCA"), 
"IL" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CAST("ADS_car_1_OUT".caress_2 AS FLOAT) AS caress_2, CAST("ADS_car_1_OUT".caress_3 AS FLOAT) AS caress_3, CAST("ADS_car_1_OUT".caress_4 AS FLOAT) AS caress_4, CAST("ADS_car_1_OUT".caress_5 AS FLOAT) AS caress_5, CAST("ADS_car_1_OUT".caress_6 AS FLOAT) AS caress_6, CAST("ADS_car_1_OUT".caress_7 AS FLOAT) AS caress_7, CAST("ADS_car_1_OUT".caress_8 AS FLOAT) AS caress_8, CAST("ADS_car_1_OUT".caress_9 AS FLOAT) AS caress_9, CAST("ADS_car_1_OUT".caress_10 AS FLOAT) AS caress_10, CAST("ADS_car_1_OUT".caress_11 AS FLOAT) AS caress_11 
FROM "ADS_car_1_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 42.72561 * "IL".caress_2 + 14.96347 * "IL".caress_3 + 64.66926 * "IL".caress_4 + 145.9726 * "IL".caress_5 + 5.947826 * "IL".caress_6 + -42.83921 * "IL".caress_7 + 38.32868 * "IL".caress_8 + 162.5039 * "IL".caress_9 + -207.6815 * "IL".caress_10 + -178.1304 * "IL".caress_11 + -276.2745 AS "NEUR_1_1", -36.58336 * "IL".caress_2 + -64.20104 * "IL".caress_3 + 15.19502 * "IL".caress_4 + 95.03259 * "IL".caress_5 + -9.703584 * "IL".caress_6 + -32.42056 * "IL".caress_7 + 5.313111 * "IL".caress_8 + -105.8955 * "IL".caress_9 + -32.70732 * "IL".caress_10 + -61.938 * "IL".caress_11 + 24.10185 AS "NEUR_1_2", -15.88186 * "IL".caress_2 + 1.326264 * "IL".caress_3 + -23.38384 * "IL".caress_4 + 36.48405 * "IL".caress_5 + 14.33299 * "IL".caress_6 + 55.89031 * "IL".caress_7 + -55.86551 * "IL".caress_8 + 32.96334 * "IL".caress_9 + 61.39217 * "IL".caress_10 + 156.7451 * "IL".caress_11 + -73.66943 AS "NEUR_1_3", -29.12111 * "IL".caress_2 + -26.87804 * "IL".caress_3 + -53.41738 * "IL".caress_4 + 18.07602 * "IL".caress_5 + -19.00061 * "IL".caress_6 + -26.89497 * "IL".caress_7 + 77.61994 * "IL".caress_8 + -61.14875 * "IL".caress_9 + -22.57432 * "IL".caress_10 + -58.98432 * "IL".caress_11 + -42.80746 AS "NEUR_1_4", -30.59073 * "IL".caress_2 + 2.50351 * "IL".caress_3 + 0.3618027 * "IL".caress_4 + 10.4828 * "IL".caress_5 + -7.928705 * "IL".caress_6 + -6.088491 * "IL".caress_7 + -4.097506 * "IL".caress_8 + 34.97581 * "IL".caress_9 + 30.04561 * "IL".caress_10 + -115.1806 * "IL".caress_11 + -17.75287 AS "NEUR_1_5" 
FROM "IL"), 
"HL_1_logistic" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_1")))) AS "NEUR_1_1", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_2")))) AS "NEUR_1_2", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_3")))) AS "NEUR_1_3", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_4")))) AS "NEUR_1_4", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_5")))) AS "NEUR_1_5" 
FROM "HL_BA_1"), 
"HL_1_logistic_1" AS 
(SELECT "HL_1_logistic"."KEY" AS "KEY", "HL_1_logistic"."NEUR_1_1" AS "NEUR_1_1", "HL_1_logistic"."NEUR_1_2" AS "NEUR_1_2", "HL_1_logistic"."NEUR_1_3" AS "NEUR_1_3", "HL_1_logistic"."NEUR_1_4" AS "NEUR_1_4", "HL_1_logistic"."NEUR_1_5" AS "NEUR_1_5" 
FROM "HL_1_logistic"), 
"OL_BA" AS 
(SELECT "HL_1_logistic_1"."KEY" AS "KEY", 51.75373 * "HL_1_logistic_1"."NEUR_1_1" + 41.50662 * "HL_1_logistic_1"."NEUR_1_2" + 42.50142 * "HL_1_logistic_1"."NEUR_1_3" + 64.0212 * "HL_1_logistic_1"."NEUR_1_4" + 48.74475 * "HL_1_logistic_1"."NEUR_1_5" + 75.46319 AS "NEUR_2_1" 
FROM "HL_1_logistic_1"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_BA"), 
"OL_identity_1" AS 
(SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_identity")
 SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_2_1" AS "Estimator" 
FROM "OL_identity_1"