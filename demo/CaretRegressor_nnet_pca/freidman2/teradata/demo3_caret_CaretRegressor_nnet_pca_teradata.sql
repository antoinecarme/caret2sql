-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretRegressor_nnet_pca
-- Dataset : freidman2
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "ADS_sca_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", (CAST("ADS"."Feature_0" AS DOUBLE PRECISION) - CAST(43.791281222074 AS DOUBLE PRECISION)) / CAST(26.1998878150635 AS DOUBLE PRECISION) AS "Feature_0", (CAST("ADS"."Feature_1" AS DOUBLE PRECISION) - CAST(945.96728330844 AS DOUBLE PRECISION)) / CAST(464.3666952541536 AS DOUBLE PRECISION) AS "Feature_1", (CAST("ADS"."Feature_2" AS DOUBLE PRECISION) - CAST(0.531000909997521 AS DOUBLE PRECISION)) / CAST(0.292017174945916 AS DOUBLE PRECISION) AS "Feature_2", (CAST("ADS"."Feature_3" AS DOUBLE PRECISION) - CAST(6.139967152050498 AS DOUBLE PRECISION)) / CAST(3.092304925382 AS DOUBLE PRECISION) AS "Feature_3" 
FROM freidman2 AS "ADS"), 
"ADS_pre_1_OUT" AS 
(SELECT "ADS_sca_1_OUT"."KEY" AS "KEY", "ADS_sca_1_OUT"."Feature_0" * CAST(-0.61216507491007 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_1" * CAST(0.546478290332943 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_2" * CAST(-0.570867748564476 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_3" * CAST(-0.026933490380143 AS DOUBLE PRECISION) AS "PC1", "ADS_sca_1_OUT"."Feature_0" * CAST(0.488881338042008 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_1" * CAST(0.274519258456139 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_2" * CAST(-0.223844999535911 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_3" * CAST(-0.797199868435587 AS DOUBLE PRECISION) AS "PC2", "ADS_sca_1_OUT"."Feature_0" * CAST(-0.024686176636209 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_1" * CAST(0.709191857651851 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_2" * CAST(0.703881747208946 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_3" * CAST(0.031432271147406 AS DOUBLE PRECISION) AS "PC3", "ADS_sca_1_OUT"."Feature_0" * CAST(-0.620998833378688 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_1" * CAST(-0.350781362064452 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_2" * CAST(0.358544161544677 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_3" * CAST(-0.602294752752124 AS DOUBLE PRECISION) AS "PC4" 
FROM "ADS_sca_1_OUT"), 
"IL" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CAST("ADS_pre_1_OUT"."PC1" AS DOUBLE PRECISION) AS "PC1", CAST("ADS_pre_1_OUT"."PC2" AS DOUBLE PRECISION) AS "PC2", CAST("ADS_pre_1_OUT"."PC3" AS DOUBLE PRECISION) AS "PC3", CAST("ADS_pre_1_OUT"."PC4" AS DOUBLE PRECISION) AS "PC4" 
FROM "ADS_pre_1_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", CAST(-3.702802 AS DOUBLE PRECISION) * "IL"."PC1" + CAST(-16.06694 AS DOUBLE PRECISION) * "IL"."PC2" + CAST(2.762968 AS DOUBLE PRECISION) * "IL"."PC3" + CAST(-13.43143 AS DOUBLE PRECISION) * "IL"."PC4" + CAST(-29.85076 AS DOUBLE PRECISION) AS "NEUR_1_1", CAST(11.14638 AS DOUBLE PRECISION) * "IL"."PC1" + CAST(-16.52031 AS DOUBLE PRECISION) * "IL"."PC2" + CAST(36.11207 AS DOUBLE PRECISION) * "IL"."PC3" + CAST(16.40362 AS DOUBLE PRECISION) * "IL"."PC4" + CAST(-20.5038 AS DOUBLE PRECISION) AS "NEUR_1_2", CAST(-5.057857 AS DOUBLE PRECISION) * "IL"."PC1" + CAST(24.17754 AS DOUBLE PRECISION) * "IL"."PC2" + CAST(86.04621 AS DOUBLE PRECISION) * "IL"."PC3" + CAST(3.93881 AS DOUBLE PRECISION) * "IL"."PC4" + CAST(-45.53269 AS DOUBLE PRECISION) AS "NEUR_1_3", CAST(-17.24994 AS DOUBLE PRECISION) * "IL"."PC1" + CAST(21.71375 AS DOUBLE PRECISION) * "IL"."PC2" + CAST(-1.603223 AS DOUBLE PRECISION) * "IL"."PC3" + CAST(-21.5058 AS DOUBLE PRECISION) * "IL"."PC4" + CAST(-43.17071 AS DOUBLE PRECISION) AS "NEUR_1_4", CAST(-0.8866956 AS DOUBLE PRECISION) * "IL"."PC1" + CAST(1.697542 AS DOUBLE PRECISION) * "IL"."PC2" + CAST(20.2064 AS DOUBLE PRECISION) * "IL"."PC3" + CAST(-9.564322 AS DOUBLE PRECISION) * "IL"."PC4" + CAST(-1.018177 AS DOUBLE PRECISION) AS "NEUR_1_5", CAST(-8.805498 AS DOUBLE PRECISION) * "IL"."PC1" + CAST(11.20494 AS DOUBLE PRECISION) * "IL"."PC2" + CAST(22.26618 AS DOUBLE PRECISION) * "IL"."PC3" + CAST(-15.10813 AS DOUBLE PRECISION) * "IL"."PC4" + CAST(-27.02548 AS DOUBLE PRECISION) AS "NEUR_1_6", CAST(0.7115305 AS DOUBLE PRECISION) * "IL"."PC1" + CAST(1.520458 AS DOUBLE PRECISION) * "IL"."PC2" + CAST(-5.851449 AS DOUBLE PRECISION) * "IL"."PC3" + CAST(2.220471 AS DOUBLE PRECISION) * "IL"."PC4" + CAST(-23.74959 AS DOUBLE PRECISION) AS "NEUR_1_7", CAST(7.200505 AS DOUBLE PRECISION) * "IL"."PC1" + CAST(-1.266119 AS DOUBLE PRECISION) * "IL"."PC2" + CAST(-11.94298 AS DOUBLE PRECISION) * "IL"."PC3" + CAST(3.876215 AS DOUBLE PRECISION) * "IL"."PC4" + CAST(-44.73042 AS DOUBLE PRECISION) AS "NEUR_1_8", CAST(-0.5120345 AS DOUBLE PRECISION) * "IL"."PC1" + CAST(-0.4863235 AS DOUBLE PRECISION) * "IL"."PC2" + CAST(2.700307 AS DOUBLE PRECISION) * "IL"."PC3" + CAST(0.7636842 AS DOUBLE PRECISION) * "IL"."PC4" + CAST(-0.3551617 AS DOUBLE PRECISION) AS "NEUR_1_9", CAST(-0.5079745 AS DOUBLE PRECISION) * "IL"."PC1" + CAST(-0.2253923 AS DOUBLE PRECISION) * "IL"."PC2" + CAST(22.38803 AS DOUBLE PRECISION) * "IL"."PC3" + CAST(2.136688 AS DOUBLE PRECISION) * "IL"."PC4" + CAST(-28.05076 AS DOUBLE PRECISION) AS "NEUR_1_10", CAST(0.2092006 AS DOUBLE PRECISION) * "IL"."PC1" + CAST(2.121905 AS DOUBLE PRECISION) * "IL"."PC2" + CAST(-4.605309 AS DOUBLE PRECISION) * "IL"."PC3" + CAST(5.672673 AS DOUBLE PRECISION) * "IL"."PC4" + CAST(-48.31988 AS DOUBLE PRECISION) AS "NEUR_1_11", CAST(12.58682 AS DOUBLE PRECISION) * "IL"."PC1" + CAST(1.080118 AS DOUBLE PRECISION) * "IL"."PC2" + CAST(35.88511 AS DOUBLE PRECISION) * "IL"."PC3" + CAST(11.98565 AS DOUBLE PRECISION) * "IL"."PC4" + CAST(22.33681 AS DOUBLE PRECISION) AS "NEUR_1_12" 
FROM "IL"), 
"HL_1_logistic" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_1")))) AS "NEUR_1_1", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_2")))) AS "NEUR_1_2", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_3")))) AS "NEUR_1_3", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_4")))) AS "NEUR_1_4", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_5")))) AS "NEUR_1_5", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_6")))) AS "NEUR_1_6", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_7")))) AS "NEUR_1_7", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_8")))) AS "NEUR_1_8", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_9")))) AS "NEUR_1_9", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_10")))) AS "NEUR_1_10", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_11")))) AS "NEUR_1_11", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_12")))) AS "NEUR_1_12" 
FROM "HL_BA_1"), 
"HL_1_logistic_1" AS 
(SELECT "HL_1_logistic"."KEY" AS "KEY", "HL_1_logistic"."NEUR_1_1" AS "NEUR_1_1", "HL_1_logistic"."NEUR_1_2" AS "NEUR_1_2", "HL_1_logistic"."NEUR_1_3" AS "NEUR_1_3", "HL_1_logistic"."NEUR_1_4" AS "NEUR_1_4", "HL_1_logistic"."NEUR_1_5" AS "NEUR_1_5", "HL_1_logistic"."NEUR_1_6" AS "NEUR_1_6", "HL_1_logistic"."NEUR_1_7" AS "NEUR_1_7", "HL_1_logistic"."NEUR_1_8" AS "NEUR_1_8", "HL_1_logistic"."NEUR_1_9" AS "NEUR_1_9", "HL_1_logistic"."NEUR_1_10" AS "NEUR_1_10", "HL_1_logistic"."NEUR_1_11" AS "NEUR_1_11", "HL_1_logistic"."NEUR_1_12" AS "NEUR_1_12" 
FROM "HL_1_logistic"), 
"OL_BA" AS 
(SELECT "HL_1_logistic_1"."KEY" AS "KEY", CAST(169.3812 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_1" + CAST(190.7739 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_2" + CAST(152.2185 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_3" + CAST(100.8678 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_4" + CAST(187.8023 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_5" + CAST(145.6596 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_6" + CAST(107.4824 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_7" + CAST(169.9927 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_8" + CAST(236.2769 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_9" + CAST(194.4295 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_10" + CAST(173.9552 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_11" + CAST(46.35011 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_12" + CAST(98.25081 AS DOUBLE PRECISION) AS "NEUR_2_1" 
FROM "HL_1_logistic_1"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_BA"), 
"OL_identity_1" AS 
(SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_identity")
 SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_2_1" AS "Estimator" 
FROM "OL_identity_1"