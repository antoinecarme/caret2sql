-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretRegressor_xgbTree_pca
-- Dataset : diabetes
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "ADS_sca_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", (CAST("ADS"."Feature_0" AS DOUBLE PRECISION) - CAST(0.000268693206665 AS DOUBLE PRECISION)) / CAST(0.047309153493906 AS DOUBLE PRECISION) AS "Feature_0", (CAST("ADS"."Feature_1" AS DOUBLE PRECISION) - CAST(0.000723958058064 AS DOUBLE PRECISION)) / CAST(0.047673150284254 AS DOUBLE PRECISION) AS "Feature_1", (CAST("ADS"."Feature_2" AS DOUBLE PRECISION) - CAST(0.000728071982559 AS DOUBLE PRECISION)) / CAST(0.047002534484173 AS DOUBLE PRECISION) AS "Feature_2", (CAST("ADS"."Feature_3" AS DOUBLE PRECISION) - CAST(0.001013565221084 AS DOUBLE PRECISION)) / CAST(0.048403881312036 AS DOUBLE PRECISION) AS "Feature_3", (CAST("ADS"."Feature_4" AS DOUBLE PRECISION) - CAST(0.000976358073288 AS DOUBLE PRECISION)) / CAST(0.04811896752595 AS DOUBLE PRECISION) AS "Feature_4", (CAST("ADS"."Feature_5" AS DOUBLE PRECISION) - CAST(0.001764380824234 AS DOUBLE PRECISION)) / CAST(0.048129028508582 AS DOUBLE PRECISION) AS "Feature_5", (CAST("ADS"."Feature_6" AS DOUBLE PRECISION) - CAST(-0.001651281545057 AS DOUBLE PRECISION)) / CAST(0.046267985649893 AS DOUBLE PRECISION) AS "Feature_6", (CAST("ADS"."Feature_7" AS DOUBLE PRECISION) - CAST(0.001390550198339 AS DOUBLE PRECISION)) / CAST(0.047430322447034 AS DOUBLE PRECISION) AS "Feature_7", (CAST("ADS"."Feature_8" AS DOUBLE PRECISION) - CAST(0.001272648254809 AS DOUBLE PRECISION)) / CAST(0.045958003803944 AS DOUBLE PRECISION) AS "Feature_8", (CAST("ADS"."Feature_9" AS DOUBLE PRECISION) - CAST(0.001034425005682 AS DOUBLE PRECISION)) / CAST(0.047829380240755 AS DOUBLE PRECISION) AS "Feature_9" 
FROM diabetes AS "ADS"), 
"ADS_pre_1_OUT" AS 
(SELECT "ADS_sca_1_OUT"."KEY" AS "KEY", "ADS_sca_1_OUT"."Feature_0" * CAST(-0.229077885203853 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_1" * CAST(-0.17537521887733 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_2" * CAST(-0.310146286752301 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_3" * CAST(-0.262668061795463 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_4" * CAST(-0.347905691048373 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_5" * CAST(-0.355931151239537 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_6" * CAST(0.270066789605325 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_7" * CAST(-0.428189605905032 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_8" * CAST(-0.381755405354334 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_9" * CAST(-0.319118586083605 AS DOUBLE PRECISION) AS "PC1", "ADS_sca_1_OUT"."Feature_0" * CAST(0.099371216581334 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_1" * CAST(-0.397407137322293 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_2" * CAST(-0.0955290657434 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_3" * CAST(-0.104282274802339 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_4" * CAST(0.55199449360805 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_5" * CAST(0.441697486214861 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_6" * CAST(0.535979163065434 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_7" * CAST(-0.09747648126824 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_8" * CAST(-0.064645715966041 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_9" * CAST(-0.106973579658861 AS DOUBLE PRECISION) AS "PC2", "ADS_sca_1_OUT"."Feature_0" * CAST(-0.447334397656141 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_1" * CAST(0.065171713108597 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_2" * CAST(-0.181322885781879 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_3" * CAST(-0.563305355080943 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_4" * CAST(0.109988404071375 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_5" * CAST(0.28936391011131 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_6" * CAST(-0.353372283461161 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_7" * CAST(0.3825782441157 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_8" * CAST(-0.044704551335765 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_9" * CAST(-0.276384099594312 AS DOUBLE PRECISION) AS "PC3", "ADS_sca_1_OUT"."Feature_0" * CAST(-0.382147586852069 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_1" * CAST(-0.683347918306126 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_2" * CAST(0.524182097673846 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_3" * CAST(-0.03681239814872 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_4" * CAST(-0.084450107369133 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_5" * CAST(-0.16994357503869 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_6" * CAST(-0.076933401599697 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_7" * CAST(0.01746636608408 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_8" * CAST(0.255444900056057 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_9" * CAST(0.058208776902541 AS DOUBLE PRECISION) AS "PC4", "ADS_sca_1_OUT"."Feature_0" * CAST(-0.73513656379737 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_1" * CAST(0.376385581379546 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_2" * CAST(0.142039339449165 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_3" * CAST(0.392671870019245 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_4" * CAST(0.142865066554186 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_5" * CAST(0.127672630878639 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_6" * CAST(0.245950649429653 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_7" * CAST(-0.128401191982395 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_8" * CAST(-0.136798085189012 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_9" * CAST(0.105540149499879 AS DOUBLE PRECISION) AS "PC5", "ADS_sca_1_OUT"."Feature_0" * CAST(-0.12368487725974 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_1" * CAST(-0.062843875881014 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_2" * CAST(-0.295396923205304 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_3" * CAST(-0.341296031171276 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_4" * CAST(-0.016564490341537 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_5" * CAST(-0.045874387513673 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_6" * CAST(0.080821103815164 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_7" * CAST(-0.030199014358926 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_8" * CAST(-0.005345781056682 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_9" * CAST(0.875876089885882 AS DOUBLE PRECISION) AS "PC6", "ADS_sca_1_OUT"."Feature_0" * CAST(-0.180936452793448 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_1" * CAST(-0.069871374167665 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_2" * CAST(-0.578917333850051 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_3" * CAST(0.228020473778496 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_4" * CAST(0.101269845624599 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_5" * CAST(-0.224620265651816 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_6" * CAST(0.065446141510241 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_7" * CAST(0.038085803656635 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_8" * CAST(0.697931508563453 AS DOUBLE PRECISION) + "ADS_sca_1_OUT"."Feature_9" * CAST(-0.147273260741705 AS DOUBLE PRECISION) AS "PC7" 
FROM "ADS_sca_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" < CAST(-0.688706696 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" < CAST(-0.910936117 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" < CAST(0.661205113 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
dummy_cte AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS nid, CAST(60.2083321 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 4 AS nid, CAST(86.302269 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(42.8278694 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 6 AS nid, CAST(65.8041687 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"XGB_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC3" < CAST(-0.465674222 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" < CAST(0.395179033 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" < CAST(1.2384119 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS nid, CAST(56.0983162 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 4 AS nid, CAST(26.6974316 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(27.6771088 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 6 AS nid, CAST(46.6368332 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"XGB_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"XGB_0" AS 
(SELECT "XGB_esu_0"."KEY" AS "KEY", "XGB_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "XGB_Model_0"."KEY" AS "KEY", CAST("XGB_Model_0"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM "XGB_Model_0" UNION ALL SELECT "XGB_Model_1"."KEY" AS "KEY", CAST("XGB_Model_1"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM "XGB_Model_1") AS "XGB_esu_0"), 
"XGB" AS 
(SELECT "XGBbig_esu"."KEY" AS "KEY", "XGBbig_esu"."Estimator" AS "Estimator" 
FROM (SELECT "XGB_0"."KEY" AS "KEY", CAST("XGB_0"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM "XGB_0") AS "XGBbig_esu"), 
"XGB_sum" AS 
(SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT "XGB"."KEY" AS "KEY", sum("XGB"."Estimator") AS "Estimator" 
FROM "XGB" GROUP BY "XGB"."KEY") AS "T")
 SELECT "XGB_sum"."KEY" AS "KEY", "XGB_sum"."Estimator" + CAST(0.5 AS DOUBLE PRECISION) AS "Estimator" 
FROM "XGB_sum"