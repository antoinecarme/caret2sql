-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretClassifier_rf_pca
-- Dataset : FourClass_10
-- Database : oracle


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "ADS_sca_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", (CAST("ADS"."Feature_0" AS BINARY_DOUBLE) - -0.003903374463034224) / 0.985685974308334 AS "Feature_0", (CAST("ADS"."Feature_1" AS BINARY_DOUBLE) - 0.6152232215702326) / 1.398851036008891 AS "Feature_1", (CAST("ADS"."Feature_2" AS BINARY_DOUBLE) - 0.04279623691429167) / 1.5057087871323842 AS "Feature_2", (CAST("ADS"."Feature_3" AS BINARY_DOUBLE) - 0.770981955890407) / 2.3480777416797296 AS "Feature_3", (CAST("ADS"."Feature_4" AS BINARY_DOUBLE) - -0.43300733624893323) / 1.4118274472656485 AS "Feature_4", (CAST("ADS"."Feature_5" AS BINARY_DOUBLE) - -0.04249569657940362) / 0.961839508883184 AS "Feature_5", (CAST("ADS"."Feature_6" AS BINARY_DOUBLE) - -0.29809080119845444) / 1.0234297313191445 AS "Feature_6", (CAST("ADS"."Feature_7" AS BINARY_DOUBLE) - 0.14672241507251668) / 1.610898315451602 AS "Feature_7", (CAST("ADS"."Feature_8" AS BINARY_DOUBLE) - 0.01746942384662041) / 1.1559772136551034 AS "Feature_8", (CAST("ADS"."Feature_9" AS BINARY_DOUBLE) - 0.11507331415602873) / 0.975205386360447 AS "Feature_9" 
FROM "FOURCLASS_10" "ADS"), 
"ADS_pre_1_OUT" AS 
(SELECT "ADS_sca_1_OUT"."KEY" AS "KEY", "ADS_sca_1_OUT"."Feature_0" * -0.04932772619908273 + "ADS_sca_1_OUT"."Feature_1" * -0.30424192738374856 + "ADS_sca_1_OUT"."Feature_2" * -0.3679687561849888 + "ADS_sca_1_OUT"."Feature_3" * -0.5380769831115797 + "ADS_sca_1_OUT"."Feature_4" * 0.10802988742400396 + "ADS_sca_1_OUT"."Feature_5" * 0.13910407016754714 + "ADS_sca_1_OUT"."Feature_6" * 0.5384086347891889 + "ADS_sca_1_OUT"."Feature_7" * -0.3713071820395216 + "ADS_sca_1_OUT"."Feature_8" * 0.0483137135579316 + "ADS_sca_1_OUT"."Feature_9" * 0.13772539520944088 AS "PC1", "ADS_sca_1_OUT"."Feature_0" * 0.4566046379002287 + "ADS_sca_1_OUT"."Feature_1" * 0.22867203934764516 + "ADS_sca_1_OUT"."Feature_2" * -0.2673956790968541 + "ADS_sca_1_OUT"."Feature_3" * 0.01671202428135116 + "ADS_sca_1_OUT"."Feature_4" * -0.7163497555230034 + "ADS_sca_1_OUT"."Feature_5" * 0.3501083253113648 + "ADS_sca_1_OUT"."Feature_6" * -0.02365108420686553 + "ADS_sca_1_OUT"."Feature_7" * -0.15293556467571348 + "ADS_sca_1_OUT"."Feature_8" * -0.04278465473081572 + "ADS_sca_1_OUT"."Feature_9" * -0.07700365586043896 AS "PC2", "ADS_sca_1_OUT"."Feature_0" * -0.4595639307438372 + "ADS_sca_1_OUT"."Feature_1" * 0.3158880900516212 + "ADS_sca_1_OUT"."Feature_2" * -0.23051961282840416 + "ADS_sca_1_OUT"."Feature_3" * -0.0044376721269756845 + "ADS_sca_1_OUT"."Feature_4" * -0.16274384812665132 + "ADS_sca_1_OUT"."Feature_5" * -0.27453767262313855 + "ADS_sca_1_OUT"."Feature_6" * 0.06030524407436345 + "ADS_sca_1_OUT"."Feature_7" * -0.14174903890838467 + "ADS_sca_1_OUT"."Feature_8" * -0.7115147418569482 + "ADS_sca_1_OUT"."Feature_9" * -0.06338366606522455 AS "PC3", "ADS_sca_1_OUT"."Feature_0" * 0.12741284788275034 + "ADS_sca_1_OUT"."Feature_1" * 0.08549541136134871 + "ADS_sca_1_OUT"."Feature_2" * -0.3821190712444285 + "ADS_sca_1_OUT"."Feature_3" * -0.10433262844841386 + "ADS_sca_1_OUT"."Feature_4" * 0.08250986211203802 + "ADS_sca_1_OUT"."Feature_5" * -0.36296260084226667 + "ADS_sca_1_OUT"."Feature_6" * 0.10962886388759648 + "ADS_sca_1_OUT"."Feature_7" * 0.2426374781882909 + "ADS_sca_1_OUT"."Feature_8" * 0.2287736877363014 + "ADS_sca_1_OUT"."Feature_9" * -0.7468451366164522 AS "PC4", "ADS_sca_1_OUT"."Feature_0" * -0.5052628362580355 + "ADS_sca_1_OUT"."Feature_1" * 0.5459531848285842 + "ADS_sca_1_OUT"."Feature_2" * -0.22747468245471705 + "ADS_sca_1_OUT"."Feature_3" * 0.10502795983753949 + "ADS_sca_1_OUT"."Feature_4" * 0.09502215073405063 + "ADS_sca_1_OUT"."Feature_5" * 0.36269377695620797 + "ADS_sca_1_OUT"."Feature_6" * 0.0045813170830969465 + "ADS_sca_1_OUT"."Feature_7" * -0.05707137281293255 + "ADS_sca_1_OUT"."Feature_8" * 0.4879473635061551 + "ADS_sca_1_OUT"."Feature_9" * 0.04384333678041198 AS "PC5", "ADS_sca_1_OUT"."Feature_0" * -0.364462956028093 + "ADS_sca_1_OUT"."Feature_1" * -0.4012918066249357 + "ADS_sca_1_OUT"."Feature_2" * 0.1851889259404308 + "ADS_sca_1_OUT"."Feature_3" * -0.03041929320097767 + "ADS_sca_1_OUT"."Feature_4" * -0.1029513075574872 + "ADS_sca_1_OUT"."Feature_5" * 0.5811919009803136 + "ADS_sca_1_OUT"."Feature_6" * -0.060907389766695234 + "ADS_sca_1_OUT"."Feature_7" * 0.12041134521888586 + "ADS_sca_1_OUT"."Feature_8" * -0.186159059340367 + "ADS_sca_1_OUT"."Feature_9" * -0.5192923770633756 AS "PC6", "ADS_sca_1_OUT"."Feature_0" * 0.20119583886282807 + "ADS_sca_1_OUT"."Feature_1" * 0.0677442703839704 + "ADS_sca_1_OUT"."Feature_2" * -0.41277620208310173 + "ADS_sca_1_OUT"."Feature_3" * -0.019873248265688318 + "ADS_sca_1_OUT"."Feature_4" * 0.327357356668028 + "ADS_sca_1_OUT"."Feature_5" * 0.3399166161542765 + "ADS_sca_1_OUT"."Feature_6" * 0.007401751370061409 + "ADS_sca_1_OUT"."Feature_7" * 0.6352452099253666 + "ADS_sca_1_OUT"."Feature_8" * -0.3190683902934043 + "ADS_sca_1_OUT"."Feature_9" * 0.23674831363349555 AS "PC7" 
FROM "ADS_sca_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.132372259920853) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.4557155626297309) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.22305255751734787) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.458111320155393) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -1.612731296065106) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.02516245604906341) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.7792834752081303) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 1.0341777787070376) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.473450855113243) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.702840076101764) THEN 29 ELSE 30 END ELSE 28 END ELSE 24 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 1.4254844603650711) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -2.045686061743744) THEN 7 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.19488867185601905) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.4716843092562053) THEN 19 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.5176785430873381) THEN 25 ELSE 26 END END ELSE 14 END END END ELSE 2 END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_0" AS "P_0", "DT_node_data"."P_1" AS "P_1", "DT_node_data"."P_2" AS "P_2", "DT_node_data"."P_3" AS "P_3", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"RF_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output"."P_0" AS "Proba_0", CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output"."P_1" AS "Proba_1", CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output"."P_2" AS "Proba_2", CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output"."P_3" AS "Proba_3", CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.019290415310542) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.473450855113243) THEN 3 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.30473453976517) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.8582915627621927) THEN 5 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.07939451066574625) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.05354385701390362) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.0428475191294413) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.4737717360473273) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.057371530947212) THEN 21 ELSE 22 END ELSE 18 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.9851779133460378) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.9002802351670904) THEN 19 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.743691478585701) THEN 23 ELSE 24 END END ELSE 14 END END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_0" AS "P_0", "DT_node_data_1"."P_1" AS "P_1", "DT_node_data_1"."P_2" AS "P_2", "DT_node_data_1"."P_3" AS "P_3", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"RF_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_1"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_1"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_1"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_1"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.18170611452335872) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.3002281456599097) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.4015328115071335) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.9541434517058976) THEN 15 ELSE 16 END ELSE 8 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.3916571527339789) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.7395153255977087) THEN 17 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.9847290418060264) THEN 25 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.23582929541280176) THEN 31 ELSE 32 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.3253779070664986) THEN 19 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -1.7848591741790254) THEN 27 ELSE 28 END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.29291908051691523) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.3757943965498258) THEN 11 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.24823100847824436) THEN 21 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.874173488557098) THEN 29 ELSE 30 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.132372259920853) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.696048500007262) THEN 23 ELSE 24 END ELSE 14 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_0" AS "P_0", "DT_node_data_2"."P_1" AS "P_1", "DT_node_data_2"."P_2" AS "P_2", "DT_node_data_2"."P_3" AS "P_3", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"RF_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_2"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_2"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_2"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_2"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.12938226668566646) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 1.462890358088608) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.2504633072278317) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.2144046764638713) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.797021640181484) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.9657450917994697) THEN 31 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 1.218208921019036) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.0081338813437135) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.1254046626992877) THEN 41 ELSE 42 END ELSE 40 END ELSE 38 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.42044391674976334) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.1842803239742413) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.3657924244294358) THEN 35 ELSE 36 END ELSE 28 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.5564066463918538) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.1485171494713078) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.20414271127310032) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.287569718751811) THEN 11 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -1.7848591741790254) THEN 19 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.5444928062611916) THEN 29 ELSE 30 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.5078424052524796) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.5592651364538266) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 1.1951942658405033) THEN 23 ELSE 24 END END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 9 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 40 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 41 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 42 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_0" AS "P_0", "DT_node_data_3"."P_1" AS "P_1", "DT_node_data_3"."P_2" AS "P_2", "DT_node_data_3"."P_3" AS "P_3", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"RF_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_3"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_3"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_3"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_3"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.1702303296738943) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.895992291020054) THEN 3 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.08975637314220099) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.2537226674306845) THEN 11 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.6487064350972581) THEN 19 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.03288558337024106) THEN 23 ELSE 24 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.5270829792818201) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.7163715595419333) THEN 21 ELSE 22 END ELSE 14 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.22661609018358214) THEN 5 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.8721201233053532) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.8372928914038834) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.3577017407190479) THEN 17 ELSE 18 END END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."P_0" AS "P_0", "DT_node_data_4"."P_1" AS "P_1", "DT_node_data_4"."P_2" AS "P_2", "DT_node_data_4"."P_3" AS "P_3", "DT_node_data_4"."D" AS "D", "DT_node_data_4"."DP" AS "DP" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"RF_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_4"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_4"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_4"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_4"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.3445832005441822) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.27760268460898174) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.005840381900210894) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.6914778334644504) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.4586155969341734) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.9808517493080962) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.9095617438343908) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.20743780999140632) THEN 21 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.29186762032118063) THEN 27 ELSE 28 END END ELSE 12 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.918571114678819) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.144745328042039) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.1702303296738943) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.9304134096876738) THEN 23 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.7052715831875078) THEN 29 ELSE 30 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.12223091726848916) THEN 25 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.5078424052524796) THEN 31 ELSE 32 END END END END END ELSE 2 END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."P_0" AS "P_0", "DT_node_data_5"."P_1" AS "P_1", "DT_node_data_5"."P_2" AS "P_2", "DT_node_data_5"."P_3" AS "P_3", "DT_node_data_5"."D" AS "D", "DT_node_data_5"."DP" AS "DP" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"RF_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_5"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_5"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_5"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_5"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.8248208331986495) THEN 1 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.2292805047051333) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 1.2291070918861775) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 1.8269026501015249) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -1.1115118766863101) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.8212310488421701) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.15774943352704546) THEN 21 ELSE 22 END END ELSE 10 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.8877905049914258) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.1767013567188636) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 1.6530592468242298) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.41160446834872255) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.8571468422153646) THEN 23 ELSE 24 END ELSE 18 END ELSE 14 END ELSE 8 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."P_0" AS "P_0", "DT_node_data_6"."P_1" AS "P_1", "DT_node_data_6"."P_2" AS "P_2", "DT_node_data_6"."P_3" AS "P_3", "DT_node_data_6"."D" AS "D", "DT_node_data_6"."DP" AS "DP" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"RF_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_6"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_6"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_6"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_6"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.07939451066574625) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.005840381900210894) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.39036109155107446) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.602397248788467) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.2871720232626577) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.250705732310521) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -1.2892275355335976) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.6087182329850555) THEN 21 ELSE 22 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.7934964927892384) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.27931302329287644) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.18508906964061286) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.5107906424152255) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.5957117588386607) THEN 31 ELSE 32 END ELSE 28 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.7911222565239657) THEN 29 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.7212290264577944) THEN 33 ELSE 34 END END END ELSE 12 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.647442219415976) THEN 13 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.430386854877601) THEN 25 ELSE 26 END END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."P_0" AS "P_0", "DT_node_data_7"."P_1" AS "P_1", "DT_node_data_7"."P_2" AS "P_2", "DT_node_data_7"."P_3" AS "P_3", "DT_node_data_7"."D" AS "D", "DT_node_data_7"."DP" AS "DP" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"RF_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_7"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_7"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_7"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_7"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.27760268460898174) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.3628902449836509) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.8550247185222377) THEN 7 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.2504633072278317) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.4889187296643107) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.6371545022495965) THEN 27 ELSE 28 END ELSE 20 END ELSE 14 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.8288606316367448) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.132372259920853) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.7141327012549676) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.3673876744557514) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.08996814623839372) THEN 21 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.2251352446431671) THEN 29 ELSE 30 END END ELSE 16 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.521450961777072) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.2573140621689029) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.1629133655051602) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -1.0609969101491599) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.1787913247374234) THEN 25 ELSE 26 END END END ELSE 6 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."P_0" AS "P_0", "DT_node_data_8"."P_1" AS "P_1", "DT_node_data_8"."P_2" AS "P_2", "DT_node_data_8"."P_3" AS "P_3", "DT_node_data_8"."D" AS "D", "DT_node_data_8"."DP" AS "DP" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"RF_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_8"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_8"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_8"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_8"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.18170611452335872) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.2537226674306845) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.2961418689934356) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.0937766858801983) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.1802685823387455) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.4015328115071335) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.7079122936464033) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -1.1325123291539243) THEN 23 ELSE 24 END ELSE 20 END ELSE 10 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.29291908051691523) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.6089864601405441) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -3.4650961416440573) THEN 21 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.495076667928284) THEN 25 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.24823100847824436) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 1.287386623249459) THEN 29 ELSE 30 END ELSE 28 END END END ELSE 12 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.696048500007262) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."P_0" AS "P_0", "DT_node_data_9"."P_1" AS "P_1", "DT_node_data_9"."P_2" AS "P_2", "DT_node_data_9"."P_3" AS "P_3", "DT_node_data_9"."D" AS "D", "DT_node_data_9"."DP" AS "DP" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"RF_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_9"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_9"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_9"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_9"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_9"), 
"RF_0" AS 
(SELECT "RF_esu_0"."KEY" AS "KEY", "RF_esu_0"."Score_0" AS "Score_0", "RF_esu_0"."Proba_0" AS "Proba_0", "RF_esu_0"."LogProba_0" AS "LogProba_0", "RF_esu_0"."Score_1" AS "Score_1", "RF_esu_0"."Proba_1" AS "Proba_1", "RF_esu_0"."LogProba_1" AS "LogProba_1", "RF_esu_0"."Score_2" AS "Score_2", "RF_esu_0"."Proba_2" AS "Proba_2", "RF_esu_0"."LogProba_2" AS "LogProba_2", "RF_esu_0"."Score_3" AS "Score_3", "RF_esu_0"."Proba_3" AS "Proba_3", "RF_esu_0"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_0"."KEY" AS "KEY", CAST("RF_Model_0"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_0"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_0"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_0"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_0"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_0"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_0"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_0"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_0"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_0"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_0"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_0"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_0" UNION ALL SELECT "RF_Model_1"."KEY" AS "KEY", CAST("RF_Model_1"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_1"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_1"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_1"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_1"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_1"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_1"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_1"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_1"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_1"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_1"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_1"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_1" UNION ALL SELECT "RF_Model_2"."KEY" AS "KEY", CAST("RF_Model_2"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_2"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_2"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_2"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_2"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_2"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_2"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_2"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_2"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_2"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_2"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_2"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_2" UNION ALL SELECT "RF_Model_3"."KEY" AS "KEY", CAST("RF_Model_3"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_3"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_3"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_3"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_3"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_3"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_3"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_3"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_3"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_3"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_3"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_3"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_3" UNION ALL SELECT "RF_Model_4"."KEY" AS "KEY", CAST("RF_Model_4"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_4"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_4"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_4"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_4"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_4"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_4"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_4"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_4"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_4"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_4"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_4"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_4" UNION ALL SELECT "RF_Model_5"."KEY" AS "KEY", CAST("RF_Model_5"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_5"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_5"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_5"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_5"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_5"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_5"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_5"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_5"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_5"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_5"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_5"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_5" UNION ALL SELECT "RF_Model_6"."KEY" AS "KEY", CAST("RF_Model_6"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_6"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_6"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_6"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_6"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_6"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_6"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_6"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_6"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_6"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_6"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_6"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_6" UNION ALL SELECT "RF_Model_7"."KEY" AS "KEY", CAST("RF_Model_7"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_7"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_7"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_7"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_7"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_7"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_7"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_7"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_7"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_7"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_7"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_7"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_7" UNION ALL SELECT "RF_Model_8"."KEY" AS "KEY", CAST("RF_Model_8"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_8"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_8"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_8"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_8"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_8"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_8"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_8"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_8"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_8"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_8"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_8"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_8" UNION ALL SELECT "RF_Model_9"."KEY" AS "KEY", CAST("RF_Model_9"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_9"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_9"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_9"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_9"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_9"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_9"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_9"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_9"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_9"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_9"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_9"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_9") "RF_esu_0"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.08996814623839372) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.005840381900210894) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.9657450917994697) THEN 7 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.9495853851722253) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.8550247185222377) THEN 23 ELSE 24 END ELSE 16 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.31395053822940794) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.3283057553246533) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.1948713516910416) THEN 25 ELSE 26 END ELSE 18 END ELSE 10 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.03460787629089) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -2.1794873771266263) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.8984362944294317) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.9960308775057228) THEN 19 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.8525700844970084) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.5580267089442017) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.5941250446143183) THEN 29 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.1145878376583516) THEN 31 ELSE 32 END END ELSE 22 END END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."P_0" AS "P_0", "DT_node_data_10"."P_1" AS "P_1", "DT_node_data_10"."P_2" AS "P_2", "DT_node_data_10"."P_3" AS "P_3", "DT_node_data_10"."D" AS "D", "DT_node_data_10"."DP" AS "DP" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"RF_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_10"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_10"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_10"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_10"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.9573112318638008) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.2077548751448337) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.05354385701390362) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.2665310623940985) THEN 11 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.7007547915766761) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.06269177955537353) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.1522704448912249) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.5807618375094258) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.5321759985504099) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.9282880576574768) THEN 27 ELSE 28 END ELSE 24 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.8203319456046556) THEN 25 ELSE 26 END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.00343360842865) THEN 9 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.7934964927892384) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -2.045686061743744) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."P_0" AS "P_0", "DT_node_data_11"."P_1" AS "P_1", "DT_node_data_11"."P_2" AS "P_2", "DT_node_data_11"."P_3" AS "P_3", "DT_node_data_11"."D" AS "D", "DT_node_data_11"."DP" AS "DP" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"RF_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_11"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_11"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_11"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_11"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.20869419609678516) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.4695002267135707) THEN 3 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.9304134096876738) THEN 7 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.029148088359761157) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.35699785853745275) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.9116325277459194) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.7493894639878346) THEN 15 ELSE 16 END ELSE 10 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.132372259920853) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 1.1723957420651294) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.2363122173108832) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.8881487213951442) THEN 21 ELSE 22 END END ELSE 12 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."P_0" AS "P_0", "DT_node_data_12"."P_1" AS "P_1", "DT_node_data_12"."P_2" AS "P_2", "DT_node_data_12"."P_3" AS "P_3", "DT_node_data_12"."D" AS "D", "DT_node_data_12"."DP" AS "DP" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"RF_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_12"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_12"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_12"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_12"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.895992291020054) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -1.5750274018442671) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.2009133378637544) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.27760268460898174) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.0710970508995097) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.4115153562967418) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 2.020980598455613) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.15583636120387162) THEN 25 ELSE 26 END ELSE 20 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.5511907839302408) THEN 21 ELSE 22 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.3396174546441153) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.5487057376035634) THEN 15 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.0689405643956582) THEN 23 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.625296185977172) THEN 27 ELSE 28 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.8998198880601651) THEN 17 ELSE 18 END END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 4 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."P_0" AS "P_0", "DT_node_data_13"."P_1" AS "P_1", "DT_node_data_13"."P_2" AS "P_2", "DT_node_data_13"."P_3" AS "P_3", "DT_node_data_13"."D" AS "D", "DT_node_data_13"."DP" AS "DP" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"RF_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_13"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_13"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_13"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_13"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.005840381900210894) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.31602115565093714) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.9393865390057128) THEN 7 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -2.08229911707658) THEN 15 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -3.0605504379130153) THEN 23 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.27314294220852) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.2929316640309652) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.4974175267684122) THEN 29 ELSE 30 END ELSE 28 END ELSE 26 END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.4544316465089617) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.24479419855974915) THEN 17 ELSE 18 END ELSE 10 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.698247990389737) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.2612188634063168) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.3297000715118582) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.9499388932401) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.5044637629628352) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."P_0" AS "P_0", "DT_node_data_14"."P_1" AS "P_1", "DT_node_data_14"."P_2" AS "P_2", "DT_node_data_14"."P_3" AS "P_3", "DT_node_data_14"."D" AS "D", "DT_node_data_14"."DP" AS "DP" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"RF_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_14"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_14"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_14"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_14"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.3253779070664986) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.3673876744557514) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.0193580420274975) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.0090654630116478) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.0046527463247313175) THEN 13 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.29766453077845734) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.5853422154771459) THEN 21 ELSE 22 END ELSE 18 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 1.009144715592285) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.7911222565239657) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.6732950656402299) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.27760268460898174) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.3391043334247447) THEN 25 ELSE 26 END ELSE 24 END ELSE 20 END ELSE 16 END ELSE 10 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.1867472344221928) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."P_0" AS "P_0", "DT_node_data_15"."P_1" AS "P_1", "DT_node_data_15"."P_2" AS "P_2", "DT_node_data_15"."P_3" AS "P_3", "DT_node_data_15"."D" AS "D", "DT_node_data_15"."DP" AS "DP" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"RF_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_15"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_15"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_15"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_15"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_15"), 
"RF_1" AS 
(SELECT "RF_esu_1"."KEY" AS "KEY", "RF_esu_1"."Score_0" AS "Score_0", "RF_esu_1"."Proba_0" AS "Proba_0", "RF_esu_1"."LogProba_0" AS "LogProba_0", "RF_esu_1"."Score_1" AS "Score_1", "RF_esu_1"."Proba_1" AS "Proba_1", "RF_esu_1"."LogProba_1" AS "LogProba_1", "RF_esu_1"."Score_2" AS "Score_2", "RF_esu_1"."Proba_2" AS "Proba_2", "RF_esu_1"."LogProba_2" AS "LogProba_2", "RF_esu_1"."Score_3" AS "Score_3", "RF_esu_1"."Proba_3" AS "Proba_3", "RF_esu_1"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_10"."KEY" AS "KEY", CAST("RF_Model_10"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_10"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_10"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_10"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_10"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_10"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_10"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_10"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_10"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_10"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_10"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_10"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_10" UNION ALL SELECT "RF_Model_11"."KEY" AS "KEY", CAST("RF_Model_11"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_11"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_11"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_11"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_11"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_11"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_11"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_11"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_11"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_11"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_11"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_11"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_11" UNION ALL SELECT "RF_Model_12"."KEY" AS "KEY", CAST("RF_Model_12"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_12"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_12"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_12"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_12"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_12"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_12"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_12"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_12"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_12"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_12"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_12"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_12" UNION ALL SELECT "RF_Model_13"."KEY" AS "KEY", CAST("RF_Model_13"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_13"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_13"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_13"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_13"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_13"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_13"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_13"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_13"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_13"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_13"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_13"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_13" UNION ALL SELECT "RF_Model_14"."KEY" AS "KEY", CAST("RF_Model_14"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_14"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_14"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_14"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_14"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_14"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_14"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_14"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_14"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_14"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_14"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_14"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_14" UNION ALL SELECT "RF_Model_15"."KEY" AS "KEY", CAST("RF_Model_15"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_15"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_15"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_15"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_15"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_15"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_15"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_15"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_15"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_15"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_15"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_15"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_15") "RF_esu_1"), 
"RF" AS 
(SELECT "RFbig_esu"."KEY" AS "KEY", "RFbig_esu"."Score_0" AS "Score_0", "RFbig_esu"."Proba_0" AS "Proba_0", "RFbig_esu"."LogProba_0" AS "LogProba_0", "RFbig_esu"."Score_1" AS "Score_1", "RFbig_esu"."Proba_1" AS "Proba_1", "RFbig_esu"."LogProba_1" AS "LogProba_1", "RFbig_esu"."Score_2" AS "Score_2", "RFbig_esu"."Proba_2" AS "Proba_2", "RFbig_esu"."LogProba_2" AS "LogProba_2", "RFbig_esu"."Score_3" AS "Score_3", "RFbig_esu"."Proba_3" AS "Proba_3", "RFbig_esu"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_0"."KEY" AS "KEY", CAST("RF_0"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_0"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_0"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_0"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_0"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_0"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_0"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_0"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_0"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_0"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_0"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_0"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_0" UNION ALL SELECT "RF_1"."KEY" AS "KEY", CAST("RF_1"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_1"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_1"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_1"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_1"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_1"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_1"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_1"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_1"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_1"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_1"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_1"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_1") "RFbig_esu"), 
"RF_avg" AS 
(SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("T"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("T"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("T"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("T"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("T"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("T"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("T"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("T"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("T"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("T"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("T"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM (SELECT "RF"."KEY" AS "KEY", avg(CAST("RF"."Score_0" AS BINARY_DOUBLE)) AS "Score_0", avg(CAST("RF"."Proba_0" AS BINARY_DOUBLE)) AS "Proba_0", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_0", avg(CAST("RF"."Score_1" AS BINARY_DOUBLE)) AS "Score_1", avg(CAST("RF"."Proba_1" AS BINARY_DOUBLE)) AS "Proba_1", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_1", avg(CAST("RF"."Score_2" AS BINARY_DOUBLE)) AS "Score_2", avg(CAST("RF"."Proba_2" AS BINARY_DOUBLE)) AS "Proba_2", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_2", avg(CAST("RF"."Score_3" AS BINARY_DOUBLE)) AS "Score_3", avg(CAST("RF"."Proba_3" AS BINARY_DOUBLE)) AS "Proba_3", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF" GROUP BY "RF"."KEY") "T"), 
orig_cte AS 
(SELECT "RF_avg"."KEY" AS "KEY", "RF_avg"."Score_0" AS "Score_0", "RF_avg"."Score_1" AS "Score_1", "RF_avg"."Score_2" AS "Score_2", "RF_avg"."Score_3" AS "Score_3", "RF_avg"."Proba_0" AS "Proba_0", "RF_avg"."Proba_1" AS "Proba_1", "RF_avg"."Proba_2" AS "Proba_2", "RF_avg"."Proba_3" AS "Proba_3", "RF_avg"."LogProba_0" AS "LogProba_0", "RF_avg"."LogProba_1" AS "LogProba_1", "RF_avg"."LogProba_2" AS "LogProba_2", "RF_avg"."LogProba_3" AS "LogProba_3", CAST(NULL AS NUMBER(19)) AS "Decision", CAST(NULL AS BINARY_DOUBLE) AS "DecisionProba" 
FROM "RF_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte