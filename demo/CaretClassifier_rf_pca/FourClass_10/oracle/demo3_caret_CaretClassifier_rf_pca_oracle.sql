-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretClassifier_rf_pca
-- Dataset : FourClass_10
-- Database : oracle


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "CenteredDataForPCA" AS 
(SELECT "ADS"."KEY" AS "KEY", (CAST("ADS"."Feature_0" AS BINARY_DOUBLE) - -0.003903374463034224) / 0.985685974308334 AS "Feature_0", (CAST("ADS"."Feature_1" AS BINARY_DOUBLE) - 0.6152232215702326) / 1.398851036008891 AS "Feature_1", (CAST("ADS"."Feature_2" AS BINARY_DOUBLE) - 0.04279623691429167) / 1.5057087871323842 AS "Feature_2", (CAST("ADS"."Feature_3" AS BINARY_DOUBLE) - 0.770981955890407) / 2.3480777416797296 AS "Feature_3", (CAST("ADS"."Feature_4" AS BINARY_DOUBLE) - -0.43300733624893323) / 1.4118274472656485 AS "Feature_4", (CAST("ADS"."Feature_5" AS BINARY_DOUBLE) - -0.04249569657940362) / 0.961839508883184 AS "Feature_5", (CAST("ADS"."Feature_6" AS BINARY_DOUBLE) - -0.29809080119845444) / 1.0234297313191445 AS "Feature_6", (CAST("ADS"."Feature_7" AS BINARY_DOUBLE) - 0.14672241507251668) / 1.610898315451602 AS "Feature_7", (CAST("ADS"."Feature_8" AS BINARY_DOUBLE) - 0.01746942384662041) / 1.1559772136551034 AS "Feature_8", (CAST("ADS"."Feature_9" AS BINARY_DOUBLE) - 0.11507331415602873) / 0.975205386360447 AS "Feature_9" 
FROM "FOURCLASS_10" "ADS"), 
"ADS_car_1_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA"."Feature_0" * -0.04932772619908273 + "CenteredDataForPCA"."Feature_1" * -0.30424192738374856 + "CenteredDataForPCA"."Feature_2" * -0.3679687561849888 + "CenteredDataForPCA"."Feature_3" * -0.5380769831115797 + "CenteredDataForPCA"."Feature_4" * 0.10802988742400396 + "CenteredDataForPCA"."Feature_5" * 0.13910407016754714 + "CenteredDataForPCA"."Feature_6" * 0.5384086347891889 + "CenteredDataForPCA"."Feature_7" * -0.3713071820395216 + "CenteredDataForPCA"."Feature_8" * 0.0483137135579316 + "CenteredDataForPCA"."Feature_9" * 0.13772539520944088 AS caress_2, "CenteredDataForPCA"."Feature_0" * 0.4566046379002287 + "CenteredDataForPCA"."Feature_1" * 0.22867203934764516 + "CenteredDataForPCA"."Feature_2" * -0.2673956790968541 + "CenteredDataForPCA"."Feature_3" * 0.01671202428135116 + "CenteredDataForPCA"."Feature_4" * -0.7163497555230034 + "CenteredDataForPCA"."Feature_5" * 0.3501083253113648 + "CenteredDataForPCA"."Feature_6" * -0.02365108420686553 + "CenteredDataForPCA"."Feature_7" * -0.15293556467571348 + "CenteredDataForPCA"."Feature_8" * -0.04278465473081572 + "CenteredDataForPCA"."Feature_9" * -0.07700365586043896 AS caress_3, "CenteredDataForPCA"."Feature_0" * -0.4595639307438372 + "CenteredDataForPCA"."Feature_1" * 0.3158880900516212 + "CenteredDataForPCA"."Feature_2" * -0.23051961282840416 + "CenteredDataForPCA"."Feature_3" * -0.0044376721269756845 + "CenteredDataForPCA"."Feature_4" * -0.16274384812665132 + "CenteredDataForPCA"."Feature_5" * -0.27453767262313855 + "CenteredDataForPCA"."Feature_6" * 0.06030524407436345 + "CenteredDataForPCA"."Feature_7" * -0.14174903890838467 + "CenteredDataForPCA"."Feature_8" * -0.7115147418569482 + "CenteredDataForPCA"."Feature_9" * -0.06338366606522455 AS caress_4, "CenteredDataForPCA"."Feature_0" * 0.12741284788275034 + "CenteredDataForPCA"."Feature_1" * 0.08549541136134871 + "CenteredDataForPCA"."Feature_2" * -0.3821190712444285 + "CenteredDataForPCA"."Feature_3" * -0.10433262844841386 + "CenteredDataForPCA"."Feature_4" * 0.08250986211203802 + "CenteredDataForPCA"."Feature_5" * -0.36296260084226667 + "CenteredDataForPCA"."Feature_6" * 0.10962886388759648 + "CenteredDataForPCA"."Feature_7" * 0.2426374781882909 + "CenteredDataForPCA"."Feature_8" * 0.2287736877363014 + "CenteredDataForPCA"."Feature_9" * -0.7468451366164522 AS caress_5, "CenteredDataForPCA"."Feature_0" * -0.5052628362580355 + "CenteredDataForPCA"."Feature_1" * 0.5459531848285842 + "CenteredDataForPCA"."Feature_2" * -0.22747468245471705 + "CenteredDataForPCA"."Feature_3" * 0.10502795983753949 + "CenteredDataForPCA"."Feature_4" * 0.09502215073405063 + "CenteredDataForPCA"."Feature_5" * 0.36269377695620797 + "CenteredDataForPCA"."Feature_6" * 0.0045813170830969465 + "CenteredDataForPCA"."Feature_7" * -0.05707137281293255 + "CenteredDataForPCA"."Feature_8" * 0.4879473635061551 + "CenteredDataForPCA"."Feature_9" * 0.04384333678041198 AS caress_6, "CenteredDataForPCA"."Feature_0" * -0.364462956028093 + "CenteredDataForPCA"."Feature_1" * -0.4012918066249357 + "CenteredDataForPCA"."Feature_2" * 0.1851889259404308 + "CenteredDataForPCA"."Feature_3" * -0.03041929320097767 + "CenteredDataForPCA"."Feature_4" * -0.1029513075574872 + "CenteredDataForPCA"."Feature_5" * 0.5811919009803136 + "CenteredDataForPCA"."Feature_6" * -0.060907389766695234 + "CenteredDataForPCA"."Feature_7" * 0.12041134521888586 + "CenteredDataForPCA"."Feature_8" * -0.186159059340367 + "CenteredDataForPCA"."Feature_9" * -0.5192923770633756 AS caress_7, "CenteredDataForPCA"."Feature_0" * 0.20119583886282807 + "CenteredDataForPCA"."Feature_1" * 0.0677442703839704 + "CenteredDataForPCA"."Feature_2" * -0.41277620208310173 + "CenteredDataForPCA"."Feature_3" * -0.019873248265688318 + "CenteredDataForPCA"."Feature_4" * 0.327357356668028 + "CenteredDataForPCA"."Feature_5" * 0.3399166161542765 + "CenteredDataForPCA"."Feature_6" * 0.007401751370061409 + "CenteredDataForPCA"."Feature_7" * 0.6352452099253666 + "CenteredDataForPCA"."Feature_8" * -0.3190683902934043 + "CenteredDataForPCA"."Feature_9" * 0.23674831363349555 AS caress_8, "CenteredDataForPCA"."Feature_0" * -0.3647497693402185 + "CenteredDataForPCA"."Feature_1" * -0.35866033244415496 + "CenteredDataForPCA"."Feature_2" * -0.2256349042120905 + "CenteredDataForPCA"."Feature_3" * -0.06321993192815392 + "CenteredDataForPCA"."Feature_4" * -0.5256747831562765 + "CenteredDataForPCA"."Feature_5" * -0.2570745560442294 + "CenteredDataForPCA"."Feature_6" * -0.08150995718583097 + "CenteredDataForPCA"."Feature_7" * 0.4312594646390232 + "CenteredDataForPCA"."Feature_8" * 0.2503840404459864 + "CenteredDataForPCA"."Feature_9" * 0.29269511479104066 AS caress_9, "CenteredDataForPCA"."Feature_0" * -6.730933655843001e-17 + "CenteredDataForPCA"."Feature_1" * -0.3082851658068816 + "CenteredDataForPCA"."Feature_2" * -0.5029961972613992 + "CenteredDataForPCA"."Feature_3" * 0.1562681295166622 + "CenteredDataForPCA"."Feature_4" * 0.196648395365703 + "CenteredDataForPCA"."Feature_5" * -2.0816681711721688e-17 + "CenteredDataForPCA"."Feature_6" * -0.6651561595633952 + "CenteredDataForPCA"."Feature_7" * -0.3826644035918779 + "CenteredDataForPCA"."Feature_8" * -1.387778780781446e-17 + "CenteredDataForPCA"."Feature_9" * 5.204170427930421e-18 AS caress_10, "CenteredDataForPCA"."Feature_0" * -1.0187944673041802e-16 + "CenteredDataForPCA"."Feature_1" * -0.2463431335717323 + "CenteredDataForPCA"."Feature_2" * -0.1833142707252252 + "CenteredDataForPCA"."Feature_3" * 0.8114932152263197 + "CenteredDataForPCA"."Feature_4" * 0.009140288155702114 + "CenteredDataForPCA"."Feature_5" * -1.422473250300982e-16 + "CenteredDataForPCA"."Feature_6" * 0.4909577208852252 + "CenteredDataForPCA"."Feature_7" * -0.0778888423832618 + "CenteredDataForPCA"."Feature_8" * 1.665334536937735e-16 + "CenteredDataForPCA"."Feature_9" * 1.491862189340054e-16 AS caress_11 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.132372259920853) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.8248208331986493) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.973449449100286) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.1911807360549046) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 2.133790321890022e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.2074378099914063) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.4149689958852539) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.9990555571216582) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.4035258577758659) THEN 27 ELSE 28 END ELSE 26 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.8800187386673317) THEN 21 ELSE 22 END END ELSE 10 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.2841188238358484) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.8984362944294317) THEN 15 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.6731416421753382) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.433104443183084) THEN 17 ELSE 18 END END END END ELSE 2 END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_0" AS "P_0", "DT_node_data"."P_1" AS "P_1", "DT_node_data"."P_2" AS "P_2", "DT_node_data"."P_3" AS "P_3", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"RF_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output"."P_0" AS "Proba_0", CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output"."P_1" AS "Proba_1", CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output"."P_2" AS "Proba_2", CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output"."P_3" AS "Proba_3", CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= -1.019290415310542) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.3401877856359022) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.473450855113243) THEN 7 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.8333697087682299) THEN 13 ELSE 14 END END ELSE 4 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.08164775765328257) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.1539963476401745) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.5622046471107003) THEN 15 ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 1.0225912547224532) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.04238953009344705) THEN 29 ELSE 30 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.4926986494700034) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.3251301449345124) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.6981676969933934) THEN 27 ELSE 28 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.140460527676824) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -1.6852181170463392) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -1.016323113038379) THEN 21 ELSE 22 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_0" AS "P_0", "DT_node_data_1"."P_1" AS "P_1", "DT_node_data_1"."P_2" AS "P_2", "DT_node_data_1"."P_3" AS "P_3", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"RF_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_1"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_1"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_1"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_1"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.1817061145233587) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.005840381900210894) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.5410954946756233) THEN 7 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.5397815174954708) THEN 15 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.8474555674880494) THEN 25 ELSE 26 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.1229623797907405) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.3407753468363567) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.2074378099914063) THEN 27 ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 1.3939884022837472) THEN 33 ELSE 34 END END ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.4715091919917143) THEN 19 ELSE 20 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.3239084204975428) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.1863834655989995) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.6166750059334803) THEN 21 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.5874246177318164) THEN 29 ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= -1.036681722570762) THEN 35 ELSE 36 END END END ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.6268034304877447) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.6772106946505019) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.2990105656060346) THEN 31 ELSE 32 END ELSE 24 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_0" AS "P_0", "DT_node_data_2"."P_1" AS "P_1", "DT_node_data_2"."P_2" AS "P_2", "DT_node_data_2"."P_3" AS "P_3", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"RF_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_2"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_2"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_2"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_2"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.07939451066574628) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.3547166264854809) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.9541434517058976) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.2965631746953771) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 1.071097050899509) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.634701743006768) THEN 19 ELSE 20 END ELSE 14 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 1.113542060903047e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.416822125084375) THEN 21 ELSE 22 END ELSE 16 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 2.8253214772594464e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.3633189429372229) THEN 11 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.5436448886761716) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.9942736079802028) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 1.218745308386238) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -2.8688574579168413e-16) THEN 27 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.3416052778325528) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.4175071192777464) THEN 31 ELSE 32 END ELSE 30 END END ELSE 26 END END END ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_0" AS "P_0", "DT_node_data_3"."P_1" AS "P_1", "DT_node_data_3"."P_2" AS "P_2", "DT_node_data_3"."P_3" AS "P_3", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"RF_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_3"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_3"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_3"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_3"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.1293822666856665) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.059497589792178) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.5625674261085591) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -3.5469674423066875e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.7119843065474425) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.5484932738420313) THEN 25 ELSE 26 END ELSE 16 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 1.2144232118254552) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.7293156172738091) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.005840381900210894) THEN 29 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.04963234390799399) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.6590418974675104) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.7425202045646165) THEN 35 ELSE 36 END ELSE 32 END END ELSE 18 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.2368605537301449) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.4933963188558586) THEN 11 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.8089946025760033) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.9096960877042648) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -1.111642770531653) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 3.806846599368943e-17) THEN 23 ELSE 24 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."P_0" AS "P_0", "DT_node_data_4"."P_1" AS "P_1", "DT_node_data_4"."P_2" AS "P_2", "DT_node_data_4"."P_3" AS "P_3", "DT_node_data_4"."D" AS "D", "DT_node_data_4"."DP" AS "DP" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"RF_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_4"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_4"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_4"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_4"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.1564039873728125) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.4792574949804081) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.8773298125354674) THEN 7 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.7851409095314079) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -6.910078487583306e-17) THEN 19 ELSE 20 END ELSE 14 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -2.567229019025862e-16) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.8600845216583801) THEN 5 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.005840381900210894) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -1.3596532631902848e-16) THEN 15 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.036666664459897) THEN 21 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.9847290418060264) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.347727421188263) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.6583187528004107) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.079161115215038) THEN 37 ELSE 38 END ELSE 36 END ELSE 32 END ELSE 26 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.9486437614988426) THEN 17 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.271913918805015) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.4918885779672256) THEN 27 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.8264596570304639) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -1.5995673607612009) THEN 29 ELSE 30 END END END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."P_0" AS "P_0", "DT_node_data_5"."P_1" AS "P_1", "DT_node_data_5"."P_2" AS "P_2", "DT_node_data_5"."P_3" AS "P_3", "DT_node_data_5"."D" AS "D", "DT_node_data_5"."DP" AS "DP" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"RF_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_5"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_5"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_5"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_5"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.3803295329821255) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.939386539005713) THEN 3 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.1634474189291793) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -4.161594400203609e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -2.3359410150300093) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.2776026846089817) THEN 21 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.06116918010707171) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -1.26846133211344e-16) THEN 33 ELSE 34 END ELSE 30 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.09932346392883053) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 4.119047856512493e-16) THEN 23 ELSE 24 END ELSE 14 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.6116573574294678) THEN 5 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -5.024657618232634e-17) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -6.798940611923413e-17) THEN 15 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.8099063726101943) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.4680497792070524) THEN 31 ELSE 32 END ELSE 26 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.226088599089499) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.430386854877602) THEN 27 ELSE 28 END ELSE 18 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."P_0" AS "P_0", "DT_node_data_6"."P_1" AS "P_1", "DT_node_data_6"."P_2" AS "P_2", "DT_node_data_6"."P_3" AS "P_3", "DT_node_data_6"."D" AS "D", "DT_node_data_6"."DP" AS "DP" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"RF_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_6"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_6"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_6"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_6"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.08996814623839372) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.002828739782771775) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.2697196310306717) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -1.359796139812646) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.2194276207490486) THEN 27 ELSE 28 END ELSE 16 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.9420695287535479) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.8230736569775431) THEN 29 ELSE 30 END ELSE 18 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.7727408891623835) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 3.138385019808448e-16) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.828058158620159) THEN 21 ELSE 22 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.3239084204975428) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -2.836550902546163e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -3.18366827362629e-16) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -3.084621344289058e-16) THEN 31 ELSE 32 END END ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.48370681894608) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.503777934008188) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.6232033108428767) THEN 33 ELSE 34 END ELSE 26 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."P_0" AS "P_0", "DT_node_data_7"."P_1" AS "P_1", "DT_node_data_7"."P_2" AS "P_2", "DT_node_data_7"."P_3" AS "P_3", "DT_node_data_7"."D" AS "D", "DT_node_data_7"."DP" AS "DP" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"RF_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_7"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_7"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_7"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_7"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.2904349360576441) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 1.389973686066304) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.0714805474706888) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.2127438565784217) THEN 11 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -2.240627466835016e-16) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.06269177955537353) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.4260868451368475) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.4649536646248192) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.4029787669825803) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -1.9657450917994699) THEN 29 ELSE 30 END ELSE 26 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.8877905049914258) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 2.1720531944766818e-16) THEN 27 ELSE 28 END ELSE 22 END END END ELSE 4 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.1867472344221928) THEN 5 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.3577017407190479) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.6260453859068695) THEN 15 ELSE 16 END ELSE 10 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."P_0" AS "P_0", "DT_node_data_8"."P_1" AS "P_1", "DT_node_data_8"."P_2" AS "P_2", "DT_node_data_8"."P_3" AS "P_3", "DT_node_data_8"."D" AS "D", "DT_node_data_8"."DP" AS "DP" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"RF_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_8"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_8"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_8"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_8"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.3160211556509371) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.3002281456599097) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 2.465605425974565e-16) THEN 7 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.3206578667818217) THEN 13 ELSE 14 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.2811598599732865) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 1.071097050899509) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -1.0790048959517728) THEN 23 ELSE 24 END ELSE 16 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.757602979008297) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.02800517326836531) THEN 25 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.8194577212890763) THEN 31 ELSE 32 END END ELSE 18 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.7217334735633456) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.6401243356596193) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -7.128178051717661e-16) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.7107430042235672) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.7167739057710559) THEN 33 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -1.0421398653225679e-16) THEN 35 ELSE 36 END END ELSE 28 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.1200801024932426) THEN 21 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.859017171646774) THEN 29 ELSE 30 END END END ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."P_0" AS "P_0", "DT_node_data_9"."P_1" AS "P_1", "DT_node_data_9"."P_2" AS "P_2", "DT_node_data_9"."P_3" AS "P_3", "DT_node_data_9"."D" AS "D", "DT_node_data_9"."DP" AS "DP" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"RF_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_9"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_9"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_9"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_9"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_9"), 
"RF_0" AS 
(SELECT "RF_esu_0"."KEY" AS "KEY", "RF_esu_0"."Score_0" AS "Score_0", "RF_esu_0"."Proba_0" AS "Proba_0", "RF_esu_0"."LogProba_0" AS "LogProba_0", "RF_esu_0"."Score_1" AS "Score_1", "RF_esu_0"."Proba_1" AS "Proba_1", "RF_esu_0"."LogProba_1" AS "LogProba_1", "RF_esu_0"."Score_2" AS "Score_2", "RF_esu_0"."Proba_2" AS "Proba_2", "RF_esu_0"."LogProba_2" AS "LogProba_2", "RF_esu_0"."Score_3" AS "Score_3", "RF_esu_0"."Proba_3" AS "Proba_3", "RF_esu_0"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_0"."KEY" AS "KEY", CAST("RF_Model_0"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_0"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_0"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_0"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_0"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_0"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_0"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_0"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_0"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_0"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_0"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_0"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_0" UNION ALL SELECT "RF_Model_1"."KEY" AS "KEY", CAST("RF_Model_1"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_1"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_1"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_1"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_1"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_1"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_1"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_1"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_1"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_1"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_1"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_1"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_1" UNION ALL SELECT "RF_Model_2"."KEY" AS "KEY", CAST("RF_Model_2"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_2"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_2"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_2"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_2"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_2"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_2"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_2"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_2"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_2"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_2"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_2"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_2" UNION ALL SELECT "RF_Model_3"."KEY" AS "KEY", CAST("RF_Model_3"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_3"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_3"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_3"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_3"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_3"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_3"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_3"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_3"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_3"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_3"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_3"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_3" UNION ALL SELECT "RF_Model_4"."KEY" AS "KEY", CAST("RF_Model_4"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_4"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_4"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_4"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_4"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_4"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_4"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_4"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_4"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_4"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_4"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_4"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_4" UNION ALL SELECT "RF_Model_5"."KEY" AS "KEY", CAST("RF_Model_5"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_5"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_5"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_5"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_5"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_5"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_5"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_5"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_5"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_5"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_5"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_5"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_5" UNION ALL SELECT "RF_Model_6"."KEY" AS "KEY", CAST("RF_Model_6"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_6"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_6"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_6"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_6"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_6"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_6"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_6"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_6"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_6"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_6"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_6"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_6" UNION ALL SELECT "RF_Model_7"."KEY" AS "KEY", CAST("RF_Model_7"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_7"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_7"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_7"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_7"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_7"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_7"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_7"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_7"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_7"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_7"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_7"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_7" UNION ALL SELECT "RF_Model_8"."KEY" AS "KEY", CAST("RF_Model_8"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_8"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_8"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_8"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_8"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_8"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_8"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_8"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_8"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_8"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_8"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_8"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_8" UNION ALL SELECT "RF_Model_9"."KEY" AS "KEY", CAST("RF_Model_9"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_9"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_9"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_9"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_9"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_9"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_9"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_9"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_9"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_9"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_9"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_9"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_9") "RF_esu_0"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.4079873430437654) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.1471501053450482) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.4968854027553384) THEN 7 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.4347318668567348) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.425484460365071) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.386911231129274) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.4141537447941915) THEN 19 ELSE 20 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.1293822666856665) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.7816371071941222) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.7671166969283831) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 1.268278559825347) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.9955325519744428) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.1612739291633351) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.4167032729547185) THEN 33 ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.323083352646941) THEN 37 ELSE 38 END END END ELSE 24 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.345370017500828) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.2987205341719329) THEN 25 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.4347646652573292) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.08396086297153428) THEN 35 ELSE 36 END ELSE 30 END END ELSE 14 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."P_0" AS "P_0", "DT_node_data_10"."P_1" AS "P_1", "DT_node_data_10"."P_2" AS "P_2", "DT_node_data_10"."P_3" AS "P_3", "DT_node_data_10"."D" AS "D", "DT_node_data_10"."DP" AS "DP" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"RF_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_10"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_10"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_10"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_10"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.226275892397462) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.08164775765328257) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.005840381900210894) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -1.169522441978529) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.8550247185222378) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= -1.9657450917994699) THEN 25 ELSE 26 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 1.743541771057922e-16) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.3416052778325528) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.3418360225561413) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.4356296589345215) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 8.997923638591016e-16) THEN 27 ELSE 28 END ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.5807618375094258) THEN 23 ELSE 24 END END ELSE 10 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.6588379325124836) THEN 5 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.4674554438693508) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."P_0" AS "P_0", "DT_node_data_11"."P_1" AS "P_1", "DT_node_data_11"."P_2" AS "P_2", "DT_node_data_11"."P_3" AS "P_3", "DT_node_data_11"."D" AS "D", "DT_node_data_11"."DP" AS "DP" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"RF_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_11"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_11"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_11"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_11"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.261218863406317) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.031717339911558784) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -1.0193580420274972) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.507437553144131) THEN 11 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -1.217261096968012) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.8230736569775431) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.2657084377603122) THEN 21 ELSE 22 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.09771960028622476) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.3168452929028848) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.9304134096876742) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.6900848984019077) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -2.487303457384487e-16) THEN 25 ELSE 26 END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.1867472344221928) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."P_0" AS "P_0", "DT_node_data_12"."P_1" AS "P_1", "DT_node_data_12"."P_2" AS "P_2", "DT_node_data_12"."P_3" AS "P_3", "DT_node_data_12"."D" AS "D", "DT_node_data_12"."DP" AS "DP" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"RF_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_12"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_12"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_12"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_12"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.1911807360549046) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.1634474189291793) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -4.2927537500035966e-16) THEN 7 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.9981637737211813) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.2776026846089817) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.4889187296643106) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.3462947951902682) THEN 33 ELSE 34 END ELSE 28 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 1.79049062109025e-16) THEN 29 ELSE 30 END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.6347144202263114) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.401532811507134) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.8260566309520392) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.4664463644483411) THEN 31 ELSE 32 END END ELSE 16 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -3.526004361386647) THEN 5 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.3270531804662445) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -3.0853346145458085) THEN 17 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.6731416421753382) THEN 25 ELSE 26 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 2.1883522899274652e-16) THEN 19 ELSE 20 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."P_0" AS "P_0", "DT_node_data_13"."P_1" AS "P_1", "DT_node_data_13"."P_2" AS "P_2", "DT_node_data_13"."P_3" AS "P_3", "DT_node_data_13"."D" AS "D", "DT_node_data_13"."DP" AS "DP" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"RF_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_13"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_13"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_13"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_13"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.2904349360576441) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.2776026846089817) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.2796722898262073) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 1.4577880367999858) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.2527712126875939) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -1.836381939847219) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= -1.50544578201552) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.286123862463147) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.1737473857052771) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 5.061221021590728e-17) THEN 25 ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.01321563093872) THEN 29 ELSE 30 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.9304134096876742) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.4940390193725932) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -4.4318119631480543e-16) THEN 33 ELSE 34 END END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.1867472344221928) THEN 5 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.3577017407190479) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.846573332278286) THEN 19 ELSE 20 END ELSE 12 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."P_0" AS "P_0", "DT_node_data_14"."P_1" AS "P_1", "DT_node_data_14"."P_2" AS "P_2", "DT_node_data_14"."P_3" AS "P_3", "DT_node_data_14"."D" AS "D", "DT_node_data_14"."DP" AS "DP" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"RF_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_14"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_14"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_14"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_14"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.08996814623839372) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.0714805474706888) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.7420174364699285) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.09453462936425493) THEN 15 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -1.349348663916075e-16) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 1.419599983961032e-16) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.9541434517058976) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.3139505382294079) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.194871351691042) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.6292890642492541) THEN 31 ELSE 32 END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.6113936966060165) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.885023021156236) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -3.184633032806927e-16) THEN 21 ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.7167739057710559) THEN 33 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.7319574911954717) THEN 35 ELSE 36 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 2.0461583317922255e-16) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.2410525759747432) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 2.0919505497872559e-16) THEN 25 ELSE 26 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 9 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."P_0" AS "P_0", "DT_node_data_15"."P_1" AS "P_1", "DT_node_data_15"."P_2" AS "P_2", "DT_node_data_15"."P_3" AS "P_3", "DT_node_data_15"."D" AS "D", "DT_node_data_15"."DP" AS "DP" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"RF_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_15"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_15"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_15"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_15"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_15"), 
"DT_node_lookup_16" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.7327587995328814) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.7217334735633456) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.3004190949720736) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.9128724312451134) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -3.8984794556317164e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 1.965685624164709e-16) THEN 31 ELSE 32 END ELSE 24 END ELSE 14 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 1.079906849932871) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -1.03460787629089) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -1.235737569999366) THEN 33 ELSE 34 END ELSE 26 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -7.649736368944968e-17) THEN 27 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.74960491177269) THEN 35 ELSE 36 END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 4.97759857421888e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.01586732840551437) THEN 17 ELSE 18 END ELSE 10 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.094860484461742) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.08996814623839372) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -1.088682650013472) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.1798711024649262) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 2.835641700626286e-16) THEN 29 ELSE 30 END ELSE 22 END END ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_16" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".nid AS nid, "DT_node_data_16"."P_0" AS "P_0", "DT_node_data_16"."P_1" AS "P_1", "DT_node_data_16"."P_2" AS "P_2", "DT_node_data_16"."P_3" AS "P_3", "DT_node_data_16"."D" AS "D", "DT_node_data_16"."DP" AS "DP" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".nid), 
"RF_Model_16" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_16"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_16"."P_0" IS NULL OR "DT_Output_16"."P_0" > 0.0) THEN ln("DT_Output_16"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_16"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_16"."P_1" IS NULL OR "DT_Output_16"."P_1" > 0.0) THEN ln("DT_Output_16"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_16"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_16"."P_2" IS NULL OR "DT_Output_16"."P_2" > 0.0) THEN ln("DT_Output_16"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_16"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_16"."P_3" IS NULL OR "DT_Output_16"."P_3" > 0.0) THEN ln("DT_Output_16"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.2537226674306845) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.7326075505390879) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.2447941985597492) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.7710595552758255) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 1.2144232118254552) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.2665310623940984) THEN 29 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.050914787844907834) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.9127301681482576) THEN 31 ELSE 32 END END ELSE 16 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.8253717026106121) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.6647839129803015) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.08164775765328257) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.4260868451368475) THEN 11 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 5.366166055655973e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.8230736569775431) THEN 25 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.042768955326702) THEN 33 ELSE 34 END END ELSE 20 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.207754875144834) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.3577017407190479) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.3067164082846584) THEN 27 ELSE 28 END ELSE 22 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_17" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".nid AS nid, "DT_node_data_17"."P_0" AS "P_0", "DT_node_data_17"."P_1" AS "P_1", "DT_node_data_17"."P_2" AS "P_2", "DT_node_data_17"."P_3" AS "P_3", "DT_node_data_17"."D" AS "D", "DT_node_data_17"."DP" AS "DP" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".nid), 
"RF_Model_17" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_17"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_17"."P_0" IS NULL OR "DT_Output_17"."P_0" > 0.0) THEN ln("DT_Output_17"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_17"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_17"."P_1" IS NULL OR "DT_Output_17"."P_1" > 0.0) THEN ln("DT_Output_17"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_17"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_17"."P_2" IS NULL OR "DT_Output_17"."P_2" > 0.0) THEN ln("DT_Output_17"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_17"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_17"."P_3" IS NULL OR "DT_Output_17"."P_3" > 0.0) THEN ln("DT_Output_17"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.08164775765328257) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -1.0193580420274972) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.2930111604585472) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.9340015853075752) THEN 15 ELSE 16 END ELSE 8 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 1.240555627025623e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.1634474189291793) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -2.2643263968563258e-17) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 1.705520154273262e-16) THEN 29 ELSE 30 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.4186845042651861) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.473771736047327) THEN 31 ELSE 32 END ELSE 26 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.2542791708522796) THEN 19 ELSE 20 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.7934964927892383) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.3050646063787278) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -3.15136171825561e-16) THEN 21 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.4963193342974023) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.231892452447904) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.2662540077554924) THEN 35 ELSE 36 END END END ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 4.3505352338066903e-16) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_18" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".nid AS nid, "DT_node_data_18"."P_0" AS "P_0", "DT_node_data_18"."P_1" AS "P_1", "DT_node_data_18"."P_2" AS "P_2", "DT_node_data_18"."P_3" AS "P_3", "DT_node_data_18"."D" AS "D", "DT_node_data_18"."DP" AS "DP" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".nid), 
"RF_Model_18" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_18"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_18"."P_0" IS NULL OR "DT_Output_18"."P_0" > 0.0) THEN ln("DT_Output_18"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_18"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_18"."P_1" IS NULL OR "DT_Output_18"."P_1" > 0.0) THEN ln("DT_Output_18"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_18"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_18"."P_2" IS NULL OR "DT_Output_18"."P_2" > 0.0) THEN ln("DT_Output_18"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_18"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_18"."P_3" IS NULL OR "DT_Output_18"."P_3" > 0.0) THEN ln("DT_Output_18"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.09885784866066656) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.4002668768636413) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.1196554569213962) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.473450855113243) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.8773298125354674) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -4.442772174475713e-17) THEN 27 ELSE 28 END END ELSE 8 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.5848770858809442) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.2462877112827759) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.6057495980278311) THEN 29 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -5.024657618232634e-17) THEN 33 ELSE 34 END END ELSE 18 END ELSE 10 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.2537226674306845) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -5.312541023838864e-17) THEN 11 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 2.3887923101344447e-16) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 5.973151511687662e-17) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 1.65305924682423) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 1.9262051736473518) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.0034336084286501) THEN 31 ELSE 32 END ELSE 24 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_19" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".nid AS nid, "DT_node_data_19"."P_0" AS "P_0", "DT_node_data_19"."P_1" AS "P_1", "DT_node_data_19"."P_2" AS "P_2", "DT_node_data_19"."P_3" AS "P_3", "DT_node_data_19"."D" AS "D", "DT_node_data_19"."DP" AS "DP" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".nid), 
"RF_Model_19" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_19"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_19"."P_0" IS NULL OR "DT_Output_19"."P_0" > 0.0) THEN ln("DT_Output_19"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_19"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_19"."P_1" IS NULL OR "DT_Output_19"."P_1" > 0.0) THEN ln("DT_Output_19"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_19"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_19"."P_2" IS NULL OR "DT_Output_19"."P_2" > 0.0) THEN ln("DT_Output_19"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_19"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_19"."P_3" IS NULL OR "DT_Output_19"."P_3" > 0.0) THEN ln("DT_Output_19"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_19"), 
"RF_1" AS 
(SELECT "RF_esu_1"."KEY" AS "KEY", "RF_esu_1"."Score_0" AS "Score_0", "RF_esu_1"."Proba_0" AS "Proba_0", "RF_esu_1"."LogProba_0" AS "LogProba_0", "RF_esu_1"."Score_1" AS "Score_1", "RF_esu_1"."Proba_1" AS "Proba_1", "RF_esu_1"."LogProba_1" AS "LogProba_1", "RF_esu_1"."Score_2" AS "Score_2", "RF_esu_1"."Proba_2" AS "Proba_2", "RF_esu_1"."LogProba_2" AS "LogProba_2", "RF_esu_1"."Score_3" AS "Score_3", "RF_esu_1"."Proba_3" AS "Proba_3", "RF_esu_1"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_10"."KEY" AS "KEY", CAST("RF_Model_10"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_10"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_10"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_10"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_10"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_10"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_10"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_10"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_10"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_10"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_10"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_10"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_10" UNION ALL SELECT "RF_Model_11"."KEY" AS "KEY", CAST("RF_Model_11"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_11"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_11"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_11"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_11"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_11"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_11"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_11"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_11"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_11"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_11"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_11"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_11" UNION ALL SELECT "RF_Model_12"."KEY" AS "KEY", CAST("RF_Model_12"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_12"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_12"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_12"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_12"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_12"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_12"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_12"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_12"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_12"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_12"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_12"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_12" UNION ALL SELECT "RF_Model_13"."KEY" AS "KEY", CAST("RF_Model_13"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_13"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_13"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_13"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_13"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_13"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_13"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_13"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_13"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_13"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_13"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_13"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_13" UNION ALL SELECT "RF_Model_14"."KEY" AS "KEY", CAST("RF_Model_14"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_14"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_14"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_14"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_14"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_14"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_14"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_14"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_14"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_14"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_14"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_14"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_14" UNION ALL SELECT "RF_Model_15"."KEY" AS "KEY", CAST("RF_Model_15"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_15"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_15"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_15"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_15"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_15"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_15"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_15"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_15"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_15"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_15"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_15"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_15" UNION ALL SELECT "RF_Model_16"."KEY" AS "KEY", CAST("RF_Model_16"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_16"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_16"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_16"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_16"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_16"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_16"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_16"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_16"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_16"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_16"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_16"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_16" UNION ALL SELECT "RF_Model_17"."KEY" AS "KEY", CAST("RF_Model_17"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_17"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_17"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_17"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_17"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_17"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_17"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_17"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_17"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_17"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_17"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_17"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_17" UNION ALL SELECT "RF_Model_18"."KEY" AS "KEY", CAST("RF_Model_18"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_18"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_18"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_18"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_18"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_18"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_18"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_18"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_18"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_18"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_18"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_18"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_18" UNION ALL SELECT "RF_Model_19"."KEY" AS "KEY", CAST("RF_Model_19"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_19"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_19"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_19"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_19"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_19"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_19"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_19"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_19"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_19"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_19"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_19"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_19") "RF_esu_1"), 
"DT_node_lookup_20" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.2843618360655913) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.2776026846089817) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -3.921692985759313e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -8.897467685744286e-17) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.0428475191294408) THEN 15 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.166439130608605) THEN 23 ELSE 24 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.1328668031185878) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.977031531698633) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.09771960028622476) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.6452297267098257) THEN 31 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.2822853654216489) THEN 33 ELSE 34 END END ELSE 26 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.3341891398076995) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.7466342124182354) THEN 19 ELSE 20 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.006591404091542) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 1.059302418965218) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.9056486568371596) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 2.0611673984143088e-16) THEN 29 ELSE 30 END ELSE 22 END ELSE 12 END ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_20" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".nid AS nid, "DT_node_data_20"."P_0" AS "P_0", "DT_node_data_20"."P_1" AS "P_1", "DT_node_data_20"."P_2" AS "P_2", "DT_node_data_20"."P_3" AS "P_3", "DT_node_data_20"."D" AS "D", "DT_node_data_20"."DP" AS "DP" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".nid), 
"RF_Model_20" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_20"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_20"."P_0" IS NULL OR "DT_Output_20"."P_0" > 0.0) THEN ln("DT_Output_20"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_20"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_20"."P_1" IS NULL OR "DT_Output_20"."P_1" > 0.0) THEN ln("DT_Output_20"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_20"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_20"."P_2" IS NULL OR "DT_Output_20"."P_2" > 0.0) THEN ln("DT_Output_20"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_20"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_20"."P_3" IS NULL OR "DT_Output_20"."P_3" > 0.0) THEN ln("DT_Output_20"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.3041935287417716) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.3448496670853194) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -1.248725298566939e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.3434183961494639) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -4.138380870076012e-16) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.3912196368777855) THEN 15 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.080920285025138) THEN 25 ELSE 26 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.180461313293186) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.649786769323411) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.2574466535196977) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 7.639308689424427e-17) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.4347646652573292) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.3531963658254885) THEN 33 ELSE 34 END ELSE 30 END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.3756014182681722) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -1.0239313553435518) THEN 11 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.4640661870793624) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.463075016314813) THEN 31 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.5073220826783681) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 3.1616661650520684e-16) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.9049567253644872) THEN 39 ELSE 40 END END END ELSE 22 END END ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_21" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 38 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 39 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 40 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".nid AS nid, "DT_node_data_21"."P_0" AS "P_0", "DT_node_data_21"."P_1" AS "P_1", "DT_node_data_21"."P_2" AS "P_2", "DT_node_data_21"."P_3" AS "P_3", "DT_node_data_21"."D" AS "D", "DT_node_data_21"."DP" AS "DP" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".nid), 
"RF_Model_21" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_21"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_21"."P_0" IS NULL OR "DT_Output_21"."P_0" > 0.0) THEN ln("DT_Output_21"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_21"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_21"."P_1" IS NULL OR "DT_Output_21"."P_1" > 0.0) THEN ln("DT_Output_21"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_21"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_21"."P_2" IS NULL OR "DT_Output_21"."P_2" > 0.0) THEN ln("DT_Output_21"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_21"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_21"."P_3" IS NULL OR "DT_Output_21"."P_3" > 0.0) THEN ln("DT_Output_21"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.3253779070664982) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.9304134096876742) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.3220098069840331) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.5502563076880318) THEN 13 ELSE 14 END ELSE 8 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.0923164214805979) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -8.584360467023424e-17) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.7969648917435037) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.1775415988459193) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.9189238990722888) THEN 25 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.5945293339933825) THEN 29 ELSE 30 END END ELSE 22 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 1.070511131623012) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 1.2361953765813678) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 1.4628903580886081) THEN 27 ELSE 28 END END ELSE 18 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.4533664769706318) THEN 5 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.5154483238208651) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_22" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".nid AS nid, "DT_node_data_22"."P_0" AS "P_0", "DT_node_data_22"."P_1" AS "P_1", "DT_node_data_22"."P_2" AS "P_2", "DT_node_data_22"."P_3" AS "P_3", "DT_node_data_22"."D" AS "D", "DT_node_data_22"."DP" AS "DP" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".nid), 
"RF_Model_22" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_22"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_22"."P_0" IS NULL OR "DT_Output_22"."P_0" > 0.0) THEN ln("DT_Output_22"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_22"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_22"."P_1" IS NULL OR "DT_Output_22"."P_1" > 0.0) THEN ln("DT_Output_22"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_22"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_22"."P_2" IS NULL OR "DT_Output_22"."P_2" > 0.0) THEN ln("DT_Output_22"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_22"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_22"."P_3" IS NULL OR "DT_Output_22"."P_3" > 0.0) THEN ln("DT_Output_22"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.261218863406317) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.473450855113243) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.2594331477977706) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.183861305658235) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.0174749108204088) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.9304134096876742) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.180461313293186) THEN 17 ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 1.100704585933638) THEN 19 ELSE 20 END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.392042092884898) THEN 5 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 1.4720148024691218) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_23" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".nid AS nid, "DT_node_data_23"."P_0" AS "P_0", "DT_node_data_23"."P_1" AS "P_1", "DT_node_data_23"."P_2" AS "P_2", "DT_node_data_23"."P_3" AS "P_3", "DT_node_data_23"."D" AS "D", "DT_node_data_23"."DP" AS "DP" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".nid), 
"RF_Model_23" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_23"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_23"."P_0" IS NULL OR "DT_Output_23"."P_0" > 0.0) THEN ln("DT_Output_23"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_23"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_23"."P_1" IS NULL OR "DT_Output_23"."P_1" > 0.0) THEN ln("DT_Output_23"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_23"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_23"."P_2" IS NULL OR "DT_Output_23"."P_2" > 0.0) THEN ln("DT_Output_23"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_23"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_23"."P_3" IS NULL OR "DT_Output_23"."P_3" > 0.0) THEN ln("DT_Output_23"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_23"), 
"DT_node_lookup_24" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.2904349360576441) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.169074917047773) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.5625674261085591) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.045164530359282584) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.8590418852463346) THEN 15 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.265135741232227) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -1.249066032708031) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.6681745819837586) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.4190798462752712) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.4532985671991072) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -1.4528939638705332e-16) THEN 27 ELSE 28 END ELSE 26 END END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.3643731440796087) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -3.4358544703519415e-18) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.4674554438693508) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_24" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".nid AS nid, "DT_node_data_24"."P_0" AS "P_0", "DT_node_data_24"."P_1" AS "P_1", "DT_node_data_24"."P_2" AS "P_2", "DT_node_data_24"."P_3" AS "P_3", "DT_node_data_24"."D" AS "D", "DT_node_data_24"."DP" AS "DP" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".nid), 
"RF_Model_24" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_24"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_24"."P_0" IS NULL OR "DT_Output_24"."P_0" > 0.0) THEN ln("DT_Output_24"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_24"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_24"."P_1" IS NULL OR "DT_Output_24"."P_1" > 0.0) THEN ln("DT_Output_24"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_24"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_24"."P_2" IS NULL OR "DT_Output_24"."P_2" > 0.0) THEN ln("DT_Output_24"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_24"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_24"."P_3" IS NULL OR "DT_Output_24"."P_3" > 0.0) THEN ln("DT_Output_24"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.8392343907219992) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -3.4027094774522233) THEN 3 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.2776026846089817) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -1.766545555329011) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 9.583979257476216e-17) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.1634474189291793) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 1.045105558414025) THEN 23 ELSE 24 END ELSE 20 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.9060665982591936) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -1.6852181170463392) THEN 21 ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.09771960028622476) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.08342711284689161) THEN 27 ELSE 28 END ELSE 26 END END ELSE 16 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.1215960316857399) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.344583200544182) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.7563539987188462) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_25" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".nid AS nid, "DT_node_data_25"."P_0" AS "P_0", "DT_node_data_25"."P_1" AS "P_1", "DT_node_data_25"."P_2" AS "P_2", "DT_node_data_25"."P_3" AS "P_3", "DT_node_data_25"."D" AS "D", "DT_node_data_25"."DP" AS "DP" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".nid), 
"RF_Model_25" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_25"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_25"."P_0" IS NULL OR "DT_Output_25"."P_0" > 0.0) THEN ln("DT_Output_25"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_25"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_25"."P_1" IS NULL OR "DT_Output_25"."P_1" > 0.0) THEN ln("DT_Output_25"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_25"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_25"."P_2" IS NULL OR "DT_Output_25"."P_2" > 0.0) THEN ln("DT_Output_25"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_25"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_25"."P_3" IS NULL OR "DT_Output_25"."P_3" > 0.0) THEN ln("DT_Output_25"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.08996814623839372) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -8.801887754564032e-17) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -6.604935526380742e-16) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.005840381900210894) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 4.808697898223843e-16) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.1867472344221928) THEN 17 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -1.081953682388156) THEN 25 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.4858066869175721) THEN 31 ELSE 32 END END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.140460527676824) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.1946994817403934) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -3.0853346145458085) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -3.574633767979018e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.2694161314656712) THEN 33 ELSE 34 END ELSE 28 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -3.4650961416440564) THEN 21 ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.6331216673760331) THEN 29 ELSE 30 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.096813078429364) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.7563539987188462) THEN 23 ELSE 24 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_26" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".nid AS nid, "DT_node_data_26"."P_0" AS "P_0", "DT_node_data_26"."P_1" AS "P_1", "DT_node_data_26"."P_2" AS "P_2", "DT_node_data_26"."P_3" AS "P_3", "DT_node_data_26"."D" AS "D", "DT_node_data_26"."DP" AS "DP" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".nid), 
"RF_Model_26" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_26"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_26"."P_0" IS NULL OR "DT_Output_26"."P_0" > 0.0) THEN ln("DT_Output_26"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_26"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_26"."P_1" IS NULL OR "DT_Output_26"."P_1" > 0.0) THEN ln("DT_Output_26"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_26"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_26"."P_2" IS NULL OR "DT_Output_26"."P_2" > 0.0) THEN ln("DT_Output_26"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_26"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_26"."P_3" IS NULL OR "DT_Output_26"."P_3" > 0.0) THEN ln("DT_Output_26"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.1817061145233587) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.2537226674306845) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.6065938721324686) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.955653417724601) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.1847363418907803) THEN 17 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.6725679368614866) THEN 25 ELSE 26 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.344583200544182) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.9163523379050612) THEN 19 ELSE 20 END ELSE 10 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.2841188238358484) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.4894683415991185) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -3.15136171825561e-16) THEN 21 ELSE 22 END ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -3.4650961416440564) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.035268527388675364) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.1587741137692388) THEN 27 ELSE 28 END END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_27" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".nid AS nid, "DT_node_data_27"."P_0" AS "P_0", "DT_node_data_27"."P_1" AS "P_1", "DT_node_data_27"."P_2" AS "P_2", "DT_node_data_27"."P_3" AS "P_3", "DT_node_data_27"."D" AS "D", "DT_node_data_27"."DP" AS "DP" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".nid), 
"RF_Model_27" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_27"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_27"."P_0" IS NULL OR "DT_Output_27"."P_0" > 0.0) THEN ln("DT_Output_27"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_27"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_27"."P_1" IS NULL OR "DT_Output_27"."P_1" > 0.0) THEN ln("DT_Output_27"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_27"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_27"."P_2" IS NULL OR "DT_Output_27"."P_2" > 0.0) THEN ln("DT_Output_27"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_27"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_27"."P_3" IS NULL OR "DT_Output_27"."P_3" > 0.0) THEN ln("DT_Output_27"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.1293822666856665) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.6510668563762625) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.939386539005713) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.885023021156236) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.9789606464489828) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.7710595552758255) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.810745214017535) THEN 29 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.060820817856776226) THEN 31 ELSE 32 END END ELSE 26 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.01022636640253366) THEN 27 ELSE 28 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -2.2643263968563258e-17) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 3.089499799936082e-16) THEN 19 ELSE 20 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.2652750097170333) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.006533639023536819) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.261218863406317) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.768581857353613) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -1.5995673607612009) THEN 23 ELSE 24 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_28" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 9 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".nid AS nid, "DT_node_data_28"."P_0" AS "P_0", "DT_node_data_28"."P_1" AS "P_1", "DT_node_data_28"."P_2" AS "P_2", "DT_node_data_28"."P_3" AS "P_3", "DT_node_data_28"."D" AS "D", "DT_node_data_28"."DP" AS "DP" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".nid), 
"RF_Model_28" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_28"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_28"."P_0" IS NULL OR "DT_Output_28"."P_0" > 0.0) THEN ln("DT_Output_28"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_28"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_28"."P_1" IS NULL OR "DT_Output_28"."P_1" > 0.0) THEN ln("DT_Output_28"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_28"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_28"."P_2" IS NULL OR "DT_Output_28"."P_2" > 0.0) THEN ln("DT_Output_28"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_28"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_28"."P_3" IS NULL OR "DT_Output_28"."P_3" > 0.0) THEN ln("DT_Output_28"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.3055470375982567) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -1.7340173992007242) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.2017399391077629) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.4218853604397041) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.7438010945143554) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.226275892397462) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.2537226674306845) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -5.312541023838864e-17) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.6331216673760331) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.9152021223855532) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.8265712260628815) THEN 29 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.254496077551253) THEN 31 ELSE 32 END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 9.541043289112968e-17) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.8868732914937817) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 1.9262051736473518) THEN 27 ELSE 28 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.1867472344221928) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_29" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".nid AS nid, "DT_node_data_29"."P_0" AS "P_0", "DT_node_data_29"."P_1" AS "P_1", "DT_node_data_29"."P_2" AS "P_2", "DT_node_data_29"."P_3" AS "P_3", "DT_node_data_29"."D" AS "D", "DT_node_data_29"."DP" AS "DP" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".nid), 
"RF_Model_29" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_29"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_29"."P_0" IS NULL OR "DT_Output_29"."P_0" > 0.0) THEN ln("DT_Output_29"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_29"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_29"."P_1" IS NULL OR "DT_Output_29"."P_1" > 0.0) THEN ln("DT_Output_29"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_29"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_29"."P_2" IS NULL OR "DT_Output_29"."P_2" > 0.0) THEN ln("DT_Output_29"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_29"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_29"."P_3" IS NULL OR "DT_Output_29"."P_3" > 0.0) THEN ln("DT_Output_29"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_29"), 
"RF_2" AS 
(SELECT "RF_esu_2"."KEY" AS "KEY", "RF_esu_2"."Score_0" AS "Score_0", "RF_esu_2"."Proba_0" AS "Proba_0", "RF_esu_2"."LogProba_0" AS "LogProba_0", "RF_esu_2"."Score_1" AS "Score_1", "RF_esu_2"."Proba_1" AS "Proba_1", "RF_esu_2"."LogProba_1" AS "LogProba_1", "RF_esu_2"."Score_2" AS "Score_2", "RF_esu_2"."Proba_2" AS "Proba_2", "RF_esu_2"."LogProba_2" AS "LogProba_2", "RF_esu_2"."Score_3" AS "Score_3", "RF_esu_2"."Proba_3" AS "Proba_3", "RF_esu_2"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_20"."KEY" AS "KEY", CAST("RF_Model_20"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_20"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_20"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_20"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_20"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_20"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_20"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_20"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_20"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_20"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_20"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_20"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_20" UNION ALL SELECT "RF_Model_21"."KEY" AS "KEY", CAST("RF_Model_21"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_21"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_21"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_21"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_21"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_21"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_21"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_21"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_21"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_21"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_21"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_21"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_21" UNION ALL SELECT "RF_Model_22"."KEY" AS "KEY", CAST("RF_Model_22"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_22"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_22"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_22"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_22"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_22"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_22"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_22"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_22"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_22"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_22"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_22"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_22" UNION ALL SELECT "RF_Model_23"."KEY" AS "KEY", CAST("RF_Model_23"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_23"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_23"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_23"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_23"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_23"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_23"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_23"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_23"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_23"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_23"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_23"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_23" UNION ALL SELECT "RF_Model_24"."KEY" AS "KEY", CAST("RF_Model_24"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_24"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_24"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_24"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_24"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_24"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_24"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_24"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_24"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_24"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_24"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_24"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_24" UNION ALL SELECT "RF_Model_25"."KEY" AS "KEY", CAST("RF_Model_25"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_25"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_25"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_25"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_25"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_25"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_25"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_25"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_25"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_25"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_25"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_25"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_25" UNION ALL SELECT "RF_Model_26"."KEY" AS "KEY", CAST("RF_Model_26"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_26"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_26"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_26"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_26"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_26"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_26"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_26"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_26"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_26"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_26"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_26"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_26" UNION ALL SELECT "RF_Model_27"."KEY" AS "KEY", CAST("RF_Model_27"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_27"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_27"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_27"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_27"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_27"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_27"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_27"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_27"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_27"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_27"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_27"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_27" UNION ALL SELECT "RF_Model_28"."KEY" AS "KEY", CAST("RF_Model_28"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_28"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_28"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_28"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_28"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_28"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_28"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_28"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_28"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_28"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_28"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_28"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_28" UNION ALL SELECT "RF_Model_29"."KEY" AS "KEY", CAST("RF_Model_29"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_29"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_29"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_29"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_29"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_29"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_29"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_29"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_29"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_29"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_29"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_29"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_29") "RF_esu_2"), 
"DT_node_lookup_30" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.170230329673894) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.2776026846089817) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.5599868073399783) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.955653417724601) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -4.035906086369522e-16) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.9185711146788185) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.9945097856668494) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.6960485000072621) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.5476474056339203) THEN 21 ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.0943400714120394) THEN 25 ELSE 26 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.5807618375094258) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 1.315401574982213) THEN 27 ELSE 28 END END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.359221517940768) THEN 5 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.261218863406317) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_30" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".nid AS nid, "DT_node_data_30"."P_0" AS "P_0", "DT_node_data_30"."P_1" AS "P_1", "DT_node_data_30"."P_2" AS "P_2", "DT_node_data_30"."P_3" AS "P_3", "DT_node_data_30"."D" AS "D", "DT_node_data_30"."DP" AS "DP" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".nid), 
"RF_Model_30" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_30"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_30"."P_0" IS NULL OR "DT_Output_30"."P_0" > 0.0) THEN ln("DT_Output_30"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_30"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_30"."P_1" IS NULL OR "DT_Output_30"."P_1" > 0.0) THEN ln("DT_Output_30"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_30"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_30"."P_2" IS NULL OR "DT_Output_30"."P_2" > 0.0) THEN ln("DT_Output_30"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_30"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_30"."P_3" IS NULL OR "DT_Output_30"."P_3" > 0.0) THEN ln("DT_Output_30"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.8959922910200544) THEN 1 ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.2674838054090664) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.3041935287417716) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.1215960316857399) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.7809236258055492) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -1.152270444891225) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.194871351691042) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.6292890642492541) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.3927484494037572) THEN 27 ELSE 28 END ELSE 22 END ELSE 18 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.6520961673151839) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.7042768689866831) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.630892951154794) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -4.4384456072484834e-16) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.3222796947729611) THEN 25 ELSE 26 END END ELSE 16 END ELSE 12 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_31" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".nid AS nid, "DT_node_data_31"."P_0" AS "P_0", "DT_node_data_31"."P_1" AS "P_1", "DT_node_data_31"."P_2" AS "P_2", "DT_node_data_31"."P_3" AS "P_3", "DT_node_data_31"."D" AS "D", "DT_node_data_31"."DP" AS "DP" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".nid), 
"RF_Model_31" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_31"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_31"."P_0" IS NULL OR "DT_Output_31"."P_0" > 0.0) THEN ln("DT_Output_31"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_31"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_31"."P_1" IS NULL OR "DT_Output_31"."P_1" > 0.0) THEN ln("DT_Output_31"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_31"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_31"."P_2" IS NULL OR "DT_Output_31"."P_2" > 0.0) THEN ln("DT_Output_31"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_31"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_31"."P_3" IS NULL OR "DT_Output_31"."P_3" > 0.0) THEN ln("DT_Output_31"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_31"), 
"DT_node_lookup_32" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.132372259920853) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.1121078530593053) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.2904337212587134) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.8725997562269894) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 1.009969887568818e-17) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.5515902716832689) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -1.492671792544266) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.09771960028622476) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.6452297267098257) THEN 31 ELSE 32 END ELSE 26 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.2953532125546258) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -1.069583252164777) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.8504749075156668) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -3.4650961416440564) THEN 15 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.1092719754932212) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.1876277352963286) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -1.1961611935143508) THEN 29 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.5428267659377726) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.0474184261124746) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -1.116881269047066) THEN 37 ELSE 38 END END END END END END END ELSE 2 END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_32" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".nid AS nid, "DT_node_data_32"."P_0" AS "P_0", "DT_node_data_32"."P_1" AS "P_1", "DT_node_data_32"."P_2" AS "P_2", "DT_node_data_32"."P_3" AS "P_3", "DT_node_data_32"."D" AS "D", "DT_node_data_32"."DP" AS "DP" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".nid), 
"RF_Model_32" AS 
(SELECT "DT_Output_32"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_32"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_32"."P_0" IS NULL OR "DT_Output_32"."P_0" > 0.0) THEN ln("DT_Output_32"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_32"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_32"."P_1" IS NULL OR "DT_Output_32"."P_1" > 0.0) THEN ln("DT_Output_32"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_32"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_32"."P_2" IS NULL OR "DT_Output_32"."P_2" > 0.0) THEN ln("DT_Output_32"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_32"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_32"."P_3" IS NULL OR "DT_Output_32"."P_3" > 0.0) THEN ln("DT_Output_32"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.261218863406317) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.08164775765328257) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.9637660916868044) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.4035258577758659) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 1.068940564395658) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.237763844275388) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 4.667386534453661e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.9304134096876742) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.7338516119424394) THEN 21 ELSE 22 END ELSE 20 END ELSE 18 END ELSE 10 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.0034336084286501) THEN 5 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.3643731440796087) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_33" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".nid AS nid, "DT_node_data_33"."P_0" AS "P_0", "DT_node_data_33"."P_1" AS "P_1", "DT_node_data_33"."P_2" AS "P_2", "DT_node_data_33"."P_3" AS "P_3", "DT_node_data_33"."D" AS "D", "DT_node_data_33"."DP" AS "DP" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".nid), 
"RF_Model_33" AS 
(SELECT "DT_Output_33"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_33"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_33"."P_0" IS NULL OR "DT_Output_33"."P_0" > 0.0) THEN ln("DT_Output_33"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_33"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_33"."P_1" IS NULL OR "DT_Output_33"."P_1" > 0.0) THEN ln("DT_Output_33"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_33"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_33"."P_2" IS NULL OR "DT_Output_33"."P_2" > 0.0) THEN ln("DT_Output_33"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_33"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_33"."P_3" IS NULL OR "DT_Output_33"."P_3" > 0.0) THEN ln("DT_Output_33"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.6232354055495668) THEN 1 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.13853255793749) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -1.152270444891225) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.99098606248008) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.3139505382294079) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.4858066869175721) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -5.561934067150404e-17) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.5769160076045738) THEN 29 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.1135769342383991) THEN 31 ELSE 32 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.1867472344221928) THEN 25 ELSE 26 END END ELSE 12 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.2841188238358484) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -7.128178051717661e-16) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 2.1883522899274652e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.035268527388675364) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.7932886094408724) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.6037415150574819) THEN 21 ELSE 22 END END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_34" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".nid AS nid, "DT_node_data_34"."P_0" AS "P_0", "DT_node_data_34"."P_1" AS "P_1", "DT_node_data_34"."P_2" AS "P_2", "DT_node_data_34"."P_3" AS "P_3", "DT_node_data_34"."D" AS "D", "DT_node_data_34"."DP" AS "DP" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".nid), 
"RF_Model_34" AS 
(SELECT "DT_Output_34"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_34"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_34"."P_0" IS NULL OR "DT_Output_34"."P_0" > 0.0) THEN ln("DT_Output_34"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_34"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_34"."P_1" IS NULL OR "DT_Output_34"."P_1" > 0.0) THEN ln("DT_Output_34"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_34"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_34"."P_2" IS NULL OR "DT_Output_34"."P_2" > 0.0) THEN ln("DT_Output_34"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_34"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_34"."P_3" IS NULL OR "DT_Output_34"."P_3" > 0.0) THEN ln("DT_Output_34"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.8959922910200544) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.8832328144448188) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.9785273341851156) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 1.113542060903047e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.2083614341368186) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.8773298125354674) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.094860484461742) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.9914941005578176) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.6442318545758696) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 1.277483661276906) THEN 31 ELSE 32 END END ELSE 20 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -1.6833945902823249) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.0779431917784266) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -1.5995673607612009) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.6535190010485349) THEN 27 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.2542791708522796) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.07920601197699488) THEN 35 ELSE 36 END ELSE 34 END END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.033207410953534335) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.459213689586314) THEN 15 ELSE 16 END ELSE 10 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_35" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 4 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".nid AS nid, "DT_node_data_35"."P_0" AS "P_0", "DT_node_data_35"."P_1" AS "P_1", "DT_node_data_35"."P_2" AS "P_2", "DT_node_data_35"."P_3" AS "P_3", "DT_node_data_35"."D" AS "D", "DT_node_data_35"."DP" AS "DP" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".nid), 
"RF_Model_35" AS 
(SELECT "DT_Output_35"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_35"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_35"."P_0" IS NULL OR "DT_Output_35"."P_0" > 0.0) THEN ln("DT_Output_35"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_35"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_35"."P_1" IS NULL OR "DT_Output_35"."P_1" > 0.0) THEN ln("DT_Output_35"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_35"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_35"."P_2" IS NULL OR "DT_Output_35"."P_2" > 0.0) THEN ln("DT_Output_35"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_35"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_35"."P_3" IS NULL OR "DT_Output_35"."P_3" > 0.0) THEN ln("DT_Output_35"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.2570904287982793) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.5308204562084172) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.11306699528066) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -1.122342216529059) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.3529283791111384) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.2423295856707393) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.2759357964291272) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -1.662734121746952) THEN 23 ELSE 24 END ELSE 20 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.3239084204975428) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.8205871903864665) THEN 11 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.158383545567915) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 8.314466827086456e-16) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_36" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 9 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".nid AS nid, "DT_node_data_36"."P_0" AS "P_0", "DT_node_data_36"."P_1" AS "P_1", "DT_node_data_36"."P_2" AS "P_2", "DT_node_data_36"."P_3" AS "P_3", "DT_node_data_36"."D" AS "D", "DT_node_data_36"."DP" AS "DP" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".nid), 
"RF_Model_36" AS 
(SELECT "DT_Output_36"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_36"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_36"."P_0" IS NULL OR "DT_Output_36"."P_0" > 0.0) THEN ln("DT_Output_36"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_36"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_36"."P_1" IS NULL OR "DT_Output_36"."P_1" > 0.0) THEN ln("DT_Output_36"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_36"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_36"."P_2" IS NULL OR "DT_Output_36"."P_2" > 0.0) THEN ln("DT_Output_36"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_36"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_36"."P_3" IS NULL OR "DT_Output_36"."P_3" > 0.0) THEN ln("DT_Output_36"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.5521337572058459) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.6116573574294678) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -4.604304035245533e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.7361115777590578) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.265135741232227) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.5713676909794114) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.9947582694030452) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.2281700742399202) THEN 23 ELSE 24 END ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -1.05717458727919) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.7671166969283831) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.0411571485792859) THEN 27 ELSE 28 END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.151810095424694) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.9116325277459196) THEN 11 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.3317530858251435) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.5864723025370517) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 1.358287841740215) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.4505183327236149) THEN 33 ELSE 34 END ELSE 32 END END END ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_37" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".nid AS nid, "DT_node_data_37"."P_0" AS "P_0", "DT_node_data_37"."P_1" AS "P_1", "DT_node_data_37"."P_2" AS "P_2", "DT_node_data_37"."P_3" AS "P_3", "DT_node_data_37"."D" AS "D", "DT_node_data_37"."DP" AS "DP" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".nid), 
"RF_Model_37" AS 
(SELECT "DT_Output_37"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_37"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_37"."P_0" IS NULL OR "DT_Output_37"."P_0" > 0.0) THEN ln("DT_Output_37"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_37"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_37"."P_1" IS NULL OR "DT_Output_37"."P_1" > 0.0) THEN ln("DT_Output_37"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_37"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_37"."P_2" IS NULL OR "DT_Output_37"."P_2" > 0.0) THEN ln("DT_Output_37"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_37"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_37"."P_3" IS NULL OR "DT_Output_37"."P_3" > 0.0) THEN ln("DT_Output_37"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.4620934804639833) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.3803295329821255) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -1.9657450917994699) THEN 7 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.6329067682660644) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.03685494105795251) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.1983439793617473) THEN 27 ELSE 28 END END ELSE 14 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -3.3231168184098614) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.4544316465089617) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.2447941985597492) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.326058140025481) THEN 29 ELSE 30 END ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.6453633276503339) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.5841825788990103) THEN 31 ELSE 32 END END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.2688911486878918) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.9546009742633158) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -1.132512329153924) THEN 17 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.4505183327236149) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.5128927946118802) THEN 33 ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.103027889877798) THEN 35 ELSE 36 END END ELSE 26 END END ELSE 12 END ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_38" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".nid AS nid, "DT_node_data_38"."P_0" AS "P_0", "DT_node_data_38"."P_1" AS "P_1", "DT_node_data_38"."P_2" AS "P_2", "DT_node_data_38"."P_3" AS "P_3", "DT_node_data_38"."D" AS "D", "DT_node_data_38"."DP" AS "DP" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".nid), 
"RF_Model_38" AS 
(SELECT "DT_Output_38"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_38"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_38"."P_0" IS NULL OR "DT_Output_38"."P_0" > 0.0) THEN ln("DT_Output_38"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_38"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_38"."P_1" IS NULL OR "DT_Output_38"."P_1" > 0.0) THEN ln("DT_Output_38"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_38"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_38"."P_2" IS NULL OR "DT_Output_38"."P_2" > 0.0) THEN ln("DT_Output_38"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_38"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_38"."P_3" IS NULL OR "DT_Output_38"."P_3" > 0.0) THEN ln("DT_Output_38"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.1293822666856665) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.7138761567251216) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.9318874502883794) THEN 7 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -4.161594400203609e-16) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.9915327808548486) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.323083352646941) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 8.997923638591016e-16) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= -1.054184942178379) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.2117404924325813) THEN 19 ELSE 20 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.5154483238208651) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.257990690626348) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.261218863406317) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.3468165201748724) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.6559169689882739) THEN 29 ELSE 30 END ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -1.784859174179025) THEN 23 ELSE 24 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_39" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".nid AS nid, "DT_node_data_39"."P_0" AS "P_0", "DT_node_data_39"."P_1" AS "P_1", "DT_node_data_39"."P_2" AS "P_2", "DT_node_data_39"."P_3" AS "P_3", "DT_node_data_39"."D" AS "D", "DT_node_data_39"."DP" AS "DP" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".nid), 
"RF_Model_39" AS 
(SELECT "DT_Output_39"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_39"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_39"."P_0" IS NULL OR "DT_Output_39"."P_0" > 0.0) THEN ln("DT_Output_39"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_39"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_39"."P_1" IS NULL OR "DT_Output_39"."P_1" > 0.0) THEN ln("DT_Output_39"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_39"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_39"."P_2" IS NULL OR "DT_Output_39"."P_2" > 0.0) THEN ln("DT_Output_39"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_39"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_39"."P_3" IS NULL OR "DT_Output_39"."P_3" > 0.0) THEN ln("DT_Output_39"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_39"), 
"RF_3" AS 
(SELECT "RF_esu_3"."KEY" AS "KEY", "RF_esu_3"."Score_0" AS "Score_0", "RF_esu_3"."Proba_0" AS "Proba_0", "RF_esu_3"."LogProba_0" AS "LogProba_0", "RF_esu_3"."Score_1" AS "Score_1", "RF_esu_3"."Proba_1" AS "Proba_1", "RF_esu_3"."LogProba_1" AS "LogProba_1", "RF_esu_3"."Score_2" AS "Score_2", "RF_esu_3"."Proba_2" AS "Proba_2", "RF_esu_3"."LogProba_2" AS "LogProba_2", "RF_esu_3"."Score_3" AS "Score_3", "RF_esu_3"."Proba_3" AS "Proba_3", "RF_esu_3"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_30"."KEY" AS "KEY", CAST("RF_Model_30"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_30"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_30"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_30"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_30"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_30"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_30"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_30"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_30"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_30"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_30"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_30"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_30" UNION ALL SELECT "RF_Model_31"."KEY" AS "KEY", CAST("RF_Model_31"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_31"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_31"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_31"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_31"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_31"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_31"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_31"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_31"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_31"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_31"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_31"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_31" UNION ALL SELECT "RF_Model_32"."KEY" AS "KEY", CAST("RF_Model_32"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_32"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_32"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_32"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_32"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_32"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_32"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_32"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_32"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_32"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_32"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_32"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_32" UNION ALL SELECT "RF_Model_33"."KEY" AS "KEY", CAST("RF_Model_33"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_33"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_33"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_33"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_33"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_33"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_33"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_33"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_33"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_33"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_33"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_33"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_33" UNION ALL SELECT "RF_Model_34"."KEY" AS "KEY", CAST("RF_Model_34"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_34"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_34"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_34"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_34"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_34"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_34"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_34"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_34"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_34"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_34"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_34"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_34" UNION ALL SELECT "RF_Model_35"."KEY" AS "KEY", CAST("RF_Model_35"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_35"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_35"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_35"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_35"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_35"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_35"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_35"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_35"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_35"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_35"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_35"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_35" UNION ALL SELECT "RF_Model_36"."KEY" AS "KEY", CAST("RF_Model_36"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_36"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_36"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_36"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_36"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_36"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_36"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_36"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_36"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_36"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_36"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_36"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_36" UNION ALL SELECT "RF_Model_37"."KEY" AS "KEY", CAST("RF_Model_37"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_37"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_37"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_37"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_37"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_37"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_37"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_37"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_37"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_37"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_37"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_37"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_37" UNION ALL SELECT "RF_Model_38"."KEY" AS "KEY", CAST("RF_Model_38"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_38"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_38"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_38"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_38"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_38"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_38"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_38"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_38"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_38"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_38"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_38"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_38" UNION ALL SELECT "RF_Model_39"."KEY" AS "KEY", CAST("RF_Model_39"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_39"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_39"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_39"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_39"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_39"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_39"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_39"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_39"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_39"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_39"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_39"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_39") "RF_esu_3"), 
"DT_node_lookup_40" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.2292805047051333) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.2776026846089817) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -1.9657450917994699) THEN 7 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 1.2504633072278322) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 2.020980598455613) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.9185711146788185) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.144745328042039) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -1.26846133211344e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.03369157691549363) THEN 31 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -1.5811494287071019e-16) THEN 33 ELSE 34 END END ELSE 26 END END ELSE 10 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -9.908853726883234e-17) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.7619958635453095) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.2652750097170333) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.545029337486074) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.2336647606343356) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.9102056889483672) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.4074350862665489) THEN 29 ELSE 30 END ELSE 22 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_40" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_40" AS 
(SELECT "DT_node_lookup_40"."KEY" AS "KEY", "DT_node_lookup_40".node_id_2 AS node_id_2, "DT_node_data_40".nid AS nid, "DT_node_data_40"."P_0" AS "P_0", "DT_node_data_40"."P_1" AS "P_1", "DT_node_data_40"."P_2" AS "P_2", "DT_node_data_40"."P_3" AS "P_3", "DT_node_data_40"."D" AS "D", "DT_node_data_40"."DP" AS "DP" 
FROM "DT_node_lookup_40" LEFT OUTER JOIN "DT_node_data_40" ON "DT_node_lookup_40".node_id_2 = "DT_node_data_40".nid), 
"RF_Model_40" AS 
(SELECT "DT_Output_40"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_40"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_40"."P_0" IS NULL OR "DT_Output_40"."P_0" > 0.0) THEN ln("DT_Output_40"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_40"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_40"."P_1" IS NULL OR "DT_Output_40"."P_1" > 0.0) THEN ln("DT_Output_40"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_40"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_40"."P_2" IS NULL OR "DT_Output_40"."P_2" > 0.0) THEN ln("DT_Output_40"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_40"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_40"."P_3" IS NULL OR "DT_Output_40"."P_3" > 0.0) THEN ln("DT_Output_40"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_40"), 
"DT_node_lookup_41" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.7816371071941222) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -1.1039104991468058) THEN 3 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.434358527227161) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.2585412475150959) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.810745214017535) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.169074917047773) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 1.242287067339862) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -1.9657450917994699) THEN 23 ELSE 24 END ELSE 18 END END ELSE 10 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.151810095424694) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.7069042762374725) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -1.088682650013472) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 1.070492551053196) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.385151699783987) THEN 29 ELSE 30 END ELSE 26 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.1872061850213502) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.6036844148643588) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -1.5314076190919679) THEN 31 ELSE 32 END ELSE 28 END ELSE 22 END END ELSE 12 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_41" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_41" AS 
(SELECT "DT_node_lookup_41"."KEY" AS "KEY", "DT_node_lookup_41".node_id_2 AS node_id_2, "DT_node_data_41".nid AS nid, "DT_node_data_41"."P_0" AS "P_0", "DT_node_data_41"."P_1" AS "P_1", "DT_node_data_41"."P_2" AS "P_2", "DT_node_data_41"."P_3" AS "P_3", "DT_node_data_41"."D" AS "D", "DT_node_data_41"."DP" AS "DP" 
FROM "DT_node_lookup_41" LEFT OUTER JOIN "DT_node_data_41" ON "DT_node_lookup_41".node_id_2 = "DT_node_data_41".nid), 
"RF_Model_41" AS 
(SELECT "DT_Output_41"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_41"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_41"."P_0" IS NULL OR "DT_Output_41"."P_0" > 0.0) THEN ln("DT_Output_41"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_41"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_41"."P_1" IS NULL OR "DT_Output_41"."P_1" > 0.0) THEN ln("DT_Output_41"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_41"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_41"."P_2" IS NULL OR "DT_Output_41"."P_2" > 0.0) THEN ln("DT_Output_41"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_41"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_41"."P_3" IS NULL OR "DT_Output_41"."P_3" > 0.0) THEN ln("DT_Output_41"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_41"), 
"DT_node_lookup_42" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.08996814623839372) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.2537226674306845) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -1.0792804054153671e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.2017399391077629) THEN 15 ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.05867927763579864) THEN 23 ELSE 24 END END ELSE 8 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.9912451156197658) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 1.358287841740215) THEN 17 ELSE 18 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.3239084204975428) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.8205871903864665) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.7167739057710559) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.6883767998014014) THEN 25 ELSE 26 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.9825750606652488) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.214018778637083) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_42" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 8 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_42" AS 
(SELECT "DT_node_lookup_42"."KEY" AS "KEY", "DT_node_lookup_42".node_id_2 AS node_id_2, "DT_node_data_42".nid AS nid, "DT_node_data_42"."P_0" AS "P_0", "DT_node_data_42"."P_1" AS "P_1", "DT_node_data_42"."P_2" AS "P_2", "DT_node_data_42"."P_3" AS "P_3", "DT_node_data_42"."D" AS "D", "DT_node_data_42"."DP" AS "DP" 
FROM "DT_node_lookup_42" LEFT OUTER JOIN "DT_node_data_42" ON "DT_node_lookup_42".node_id_2 = "DT_node_data_42".nid), 
"RF_Model_42" AS 
(SELECT "DT_Output_42"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_42"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_42"."P_0" IS NULL OR "DT_Output_42"."P_0" > 0.0) THEN ln("DT_Output_42"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_42"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_42"."P_1" IS NULL OR "DT_Output_42"."P_1" > 0.0) THEN ln("DT_Output_42"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_42"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_42"."P_2" IS NULL OR "DT_Output_42"."P_2" > 0.0) THEN ln("DT_Output_42"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_42"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_42"."P_3" IS NULL OR "DT_Output_42"."P_3" > 0.0) THEN ln("DT_Output_42"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_42"), 
"DT_node_lookup_43" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.8902405862138472) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -1.034282221225737) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 8.08894645438439e-16) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.1293822666856665) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 1.4943068609748863e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.180461313293186) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 9.079154757992689e-17) THEN 25 ELSE 26 END END ELSE 16 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.2368605537301449) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.1702083544728983) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.280617183392263) THEN 23 ELSE 24 END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.4664463644483411) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 1.0200325154530701e-16) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -1.081953682388156) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_43" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_43" AS 
(SELECT "DT_node_lookup_43"."KEY" AS "KEY", "DT_node_lookup_43".node_id_2 AS node_id_2, "DT_node_data_43".nid AS nid, "DT_node_data_43"."P_0" AS "P_0", "DT_node_data_43"."P_1" AS "P_1", "DT_node_data_43"."P_2" AS "P_2", "DT_node_data_43"."P_3" AS "P_3", "DT_node_data_43"."D" AS "D", "DT_node_data_43"."DP" AS "DP" 
FROM "DT_node_lookup_43" LEFT OUTER JOIN "DT_node_data_43" ON "DT_node_lookup_43".node_id_2 = "DT_node_data_43".nid), 
"RF_Model_43" AS 
(SELECT "DT_Output_43"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_43"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_43"."P_0" IS NULL OR "DT_Output_43"."P_0" > 0.0) THEN ln("DT_Output_43"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_43"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_43"."P_1" IS NULL OR "DT_Output_43"."P_1" > 0.0) THEN ln("DT_Output_43"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_43"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_43"."P_2" IS NULL OR "DT_Output_43"."P_2" > 0.0) THEN ln("DT_Output_43"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_43"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_43"."P_3" IS NULL OR "DT_Output_43"."P_3" > 0.0) THEN ln("DT_Output_43"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_43"), 
"DT_node_lookup_44" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_11 <= 1.115681811381104e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.2537226674306845) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.7797050536509661) THEN 7 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.5599868073399783) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.7308647399213325) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -5.019276875992714e-16) THEN 27 ELSE 28 END ELSE 24 END ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.7573379022717566) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.2625437588798304) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.428638055074644) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.6617959406540648) THEN 25 ELSE 26 END ELSE 20 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.8384169792008844) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.9185711146788185) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -1.5995673607612009) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.1051353870657281) THEN 21 ELSE 22 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_44" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_44" AS 
(SELECT "DT_node_lookup_44"."KEY" AS "KEY", "DT_node_lookup_44".node_id_2 AS node_id_2, "DT_node_data_44".nid AS nid, "DT_node_data_44"."P_0" AS "P_0", "DT_node_data_44"."P_1" AS "P_1", "DT_node_data_44"."P_2" AS "P_2", "DT_node_data_44"."P_3" AS "P_3", "DT_node_data_44"."D" AS "D", "DT_node_data_44"."DP" AS "DP" 
FROM "DT_node_lookup_44" LEFT OUTER JOIN "DT_node_data_44" ON "DT_node_lookup_44".node_id_2 = "DT_node_data_44".nid), 
"RF_Model_44" AS 
(SELECT "DT_Output_44"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_44"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_44"."P_0" IS NULL OR "DT_Output_44"."P_0" > 0.0) THEN ln("DT_Output_44"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_44"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_44"."P_1" IS NULL OR "DT_Output_44"."P_1" > 0.0) THEN ln("DT_Output_44"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_44"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_44"."P_2" IS NULL OR "DT_Output_44"."P_2" > 0.0) THEN ln("DT_Output_44"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_44"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_44"."P_3" IS NULL OR "DT_Output_44"."P_3" > 0.0) THEN ln("DT_Output_44"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_44"), 
"DT_node_lookup_45" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.094860484461742) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.05551906110501799) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.3321826647571227) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -1.123763912061288e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.3867553713670738) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 1.5492923940049532) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -4.212808993199978e-16) THEN 25 ELSE 26 END ELSE 20 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.2355964887176831) THEN 11 ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.7520555430394908) THEN 21 ELSE 22 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.4918885779672256) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.4505183327236149) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.9965814929678756) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.005840381900210894) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.0322684836565962) THEN 29 ELSE 30 END ELSE 28 END END ELSE 14 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.8977748453400208) THEN 15 ELSE 16 END END END ELSE 2 END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_45" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_45" AS 
(SELECT "DT_node_lookup_45"."KEY" AS "KEY", "DT_node_lookup_45".node_id_2 AS node_id_2, "DT_node_data_45".nid AS nid, "DT_node_data_45"."P_0" AS "P_0", "DT_node_data_45"."P_1" AS "P_1", "DT_node_data_45"."P_2" AS "P_2", "DT_node_data_45"."P_3" AS "P_3", "DT_node_data_45"."D" AS "D", "DT_node_data_45"."DP" AS "DP" 
FROM "DT_node_lookup_45" LEFT OUTER JOIN "DT_node_data_45" ON "DT_node_lookup_45".node_id_2 = "DT_node_data_45".nid), 
"RF_Model_45" AS 
(SELECT "DT_Output_45"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_45"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_45"."P_0" IS NULL OR "DT_Output_45"."P_0" > 0.0) THEN ln("DT_Output_45"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_45"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_45"."P_1" IS NULL OR "DT_Output_45"."P_1" > 0.0) THEN ln("DT_Output_45"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_45"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_45"."P_2" IS NULL OR "DT_Output_45"."P_2" > 0.0) THEN ln("DT_Output_45"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_45"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_45"."P_3" IS NULL OR "DT_Output_45"."P_3" > 0.0) THEN ln("DT_Output_45"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_45"), 
"DT_node_lookup_46" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.3137970938131406) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.8959922910200544) THEN 3 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.6057495980278311) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.265135741232227) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -5.1788204773836816e-17) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.1918142475347069) THEN 29 ELSE 30 END ELSE 22 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.169074917047773) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.8293195254852552) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.2537226674306845) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.7293156172738091) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.1417903262222127) THEN 33 ELSE 34 END END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.1690203853354739) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.3407753468363567) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 2.227121484440355) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.9716065039315116) THEN 11 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.4276993844616335) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.3839294026193965) THEN 27 ELSE 28 END END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_46" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_46" AS 
(SELECT "DT_node_lookup_46"."KEY" AS "KEY", "DT_node_lookup_46".node_id_2 AS node_id_2, "DT_node_data_46".nid AS nid, "DT_node_data_46"."P_0" AS "P_0", "DT_node_data_46"."P_1" AS "P_1", "DT_node_data_46"."P_2" AS "P_2", "DT_node_data_46"."P_3" AS "P_3", "DT_node_data_46"."D" AS "D", "DT_node_data_46"."DP" AS "DP" 
FROM "DT_node_lookup_46" LEFT OUTER JOIN "DT_node_data_46" ON "DT_node_lookup_46".node_id_2 = "DT_node_data_46".nid), 
"RF_Model_46" AS 
(SELECT "DT_Output_46"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_46"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_46"."P_0" IS NULL OR "DT_Output_46"."P_0" > 0.0) THEN ln("DT_Output_46"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_46"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_46"."P_1" IS NULL OR "DT_Output_46"."P_1" > 0.0) THEN ln("DT_Output_46"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_46"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_46"."P_2" IS NULL OR "DT_Output_46"."P_2" > 0.0) THEN ln("DT_Output_46"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_46"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_46"."P_3" IS NULL OR "DT_Output_46"."P_3" > 0.0) THEN ln("DT_Output_46"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_46"), 
"DT_node_lookup_47" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.8248208331986493) THEN 1 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.07939451066574628) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.8212310488421701) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.5713676909794114) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.8830496351958771) THEN 15 ELSE 16 END ELSE 10 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.401532811507134) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.213931977285556) THEN 17 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.9074882089647308) THEN 21 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.7377694290848382) THEN 25 ELSE 26 END END END ELSE 12 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 3.1660382604186064e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 1.807037704116134) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.7845613850554254) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -1.06099691014916) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.2507929918287343) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -2.179487377126626) THEN 29 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.2410525759747432) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.9825750606652488) THEN 33 ELSE 34 END ELSE 32 END END END END ELSE 14 END ELSE 8 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_47" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_47" AS 
(SELECT "DT_node_lookup_47"."KEY" AS "KEY", "DT_node_lookup_47".node_id_2 AS node_id_2, "DT_node_data_47".nid AS nid, "DT_node_data_47"."P_0" AS "P_0", "DT_node_data_47"."P_1" AS "P_1", "DT_node_data_47"."P_2" AS "P_2", "DT_node_data_47"."P_3" AS "P_3", "DT_node_data_47"."D" AS "D", "DT_node_data_47"."DP" AS "DP" 
FROM "DT_node_lookup_47" LEFT OUTER JOIN "DT_node_data_47" ON "DT_node_lookup_47".node_id_2 = "DT_node_data_47".nid), 
"RF_Model_47" AS 
(SELECT "DT_Output_47"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_47"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_47"."P_0" IS NULL OR "DT_Output_47"."P_0" > 0.0) THEN ln("DT_Output_47"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_47"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_47"."P_1" IS NULL OR "DT_Output_47"."P_1" > 0.0) THEN ln("DT_Output_47"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_47"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_47"."P_2" IS NULL OR "DT_Output_47"."P_2" > 0.0) THEN ln("DT_Output_47"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_47"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_47"."P_3" IS NULL OR "DT_Output_47"."P_3" > 0.0) THEN ln("DT_Output_47"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_47"), 
"DT_node_lookup_48" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.1839342111671171) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.4401469514339799) THEN 3 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -4.884666195158706e-17) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 2.020980598455613) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.7107430042235672) THEN 15 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.8265712260628815) THEN 21 ELSE 22 END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.2813533223786171) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.425484460365071) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.7188392043718616) THEN 17 ELSE 18 END ELSE 10 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.3873077109911698) THEN 11 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.5154483238208651) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.0707504477517242) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.2041102068124208) THEN 25 ELSE 26 END ELSE 24 END END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_48" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_48" AS 
(SELECT "DT_node_lookup_48"."KEY" AS "KEY", "DT_node_lookup_48".node_id_2 AS node_id_2, "DT_node_data_48".nid AS nid, "DT_node_data_48"."P_0" AS "P_0", "DT_node_data_48"."P_1" AS "P_1", "DT_node_data_48"."P_2" AS "P_2", "DT_node_data_48"."P_3" AS "P_3", "DT_node_data_48"."D" AS "D", "DT_node_data_48"."DP" AS "DP" 
FROM "DT_node_lookup_48" LEFT OUTER JOIN "DT_node_data_48" ON "DT_node_lookup_48".node_id_2 = "DT_node_data_48".nid), 
"RF_Model_48" AS 
(SELECT "DT_Output_48"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_48"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_48"."P_0" IS NULL OR "DT_Output_48"."P_0" > 0.0) THEN ln("DT_Output_48"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_48"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_48"."P_1" IS NULL OR "DT_Output_48"."P_1" > 0.0) THEN ln("DT_Output_48"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_48"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_48"."P_2" IS NULL OR "DT_Output_48"."P_2" > 0.0) THEN ln("DT_Output_48"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_48"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_48"."P_3" IS NULL OR "DT_Output_48"."P_3" > 0.0) THEN ln("DT_Output_48"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_48"), 
"DT_node_lookup_49" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.7535592735474881) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.1634474189291793) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -1.5394772912066361) THEN 7 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 1.27314294220852) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 1.3990907235723693) THEN 23 ELSE 24 END ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.344583200544182) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.5521337572058459) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 3.1428682651987415e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.3803295329821255) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 2.86433392045722e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -5.826404403387832e-17) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.5430262397903802) THEN 35 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.1010430534241487) THEN 37 ELSE 38 END END ELSE 32 END ELSE 26 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -1.6852181170463392) THEN 27 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.166042888293261) THEN 33 ELSE 34 END END END ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.4933963188558586) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.6033144376359134) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.3251301449345124) THEN 21 ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.038560052239299286) THEN 29 ELSE 30 END END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_49" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 38 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_49" AS 
(SELECT "DT_node_lookup_49"."KEY" AS "KEY", "DT_node_lookup_49".node_id_2 AS node_id_2, "DT_node_data_49".nid AS nid, "DT_node_data_49"."P_0" AS "P_0", "DT_node_data_49"."P_1" AS "P_1", "DT_node_data_49"."P_2" AS "P_2", "DT_node_data_49"."P_3" AS "P_3", "DT_node_data_49"."D" AS "D", "DT_node_data_49"."DP" AS "DP" 
FROM "DT_node_lookup_49" LEFT OUTER JOIN "DT_node_data_49" ON "DT_node_lookup_49".node_id_2 = "DT_node_data_49".nid), 
"RF_Model_49" AS 
(SELECT "DT_Output_49"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_49"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_49"."P_0" IS NULL OR "DT_Output_49"."P_0" > 0.0) THEN ln("DT_Output_49"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_49"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_49"."P_1" IS NULL OR "DT_Output_49"."P_1" > 0.0) THEN ln("DT_Output_49"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_49"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_49"."P_2" IS NULL OR "DT_Output_49"."P_2" > 0.0) THEN ln("DT_Output_49"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_49"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_49"."P_3" IS NULL OR "DT_Output_49"."P_3" > 0.0) THEN ln("DT_Output_49"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_49"), 
"RF_4" AS 
(SELECT "RF_esu_4"."KEY" AS "KEY", "RF_esu_4"."Score_0" AS "Score_0", "RF_esu_4"."Proba_0" AS "Proba_0", "RF_esu_4"."LogProba_0" AS "LogProba_0", "RF_esu_4"."Score_1" AS "Score_1", "RF_esu_4"."Proba_1" AS "Proba_1", "RF_esu_4"."LogProba_1" AS "LogProba_1", "RF_esu_4"."Score_2" AS "Score_2", "RF_esu_4"."Proba_2" AS "Proba_2", "RF_esu_4"."LogProba_2" AS "LogProba_2", "RF_esu_4"."Score_3" AS "Score_3", "RF_esu_4"."Proba_3" AS "Proba_3", "RF_esu_4"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_40"."KEY" AS "KEY", CAST("RF_Model_40"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_40"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_40"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_40"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_40"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_40"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_40"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_40"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_40"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_40"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_40"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_40"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_40" UNION ALL SELECT "RF_Model_41"."KEY" AS "KEY", CAST("RF_Model_41"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_41"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_41"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_41"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_41"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_41"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_41"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_41"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_41"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_41"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_41"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_41"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_41" UNION ALL SELECT "RF_Model_42"."KEY" AS "KEY", CAST("RF_Model_42"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_42"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_42"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_42"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_42"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_42"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_42"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_42"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_42"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_42"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_42"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_42"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_42" UNION ALL SELECT "RF_Model_43"."KEY" AS "KEY", CAST("RF_Model_43"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_43"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_43"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_43"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_43"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_43"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_43"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_43"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_43"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_43"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_43"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_43"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_43" UNION ALL SELECT "RF_Model_44"."KEY" AS "KEY", CAST("RF_Model_44"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_44"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_44"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_44"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_44"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_44"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_44"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_44"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_44"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_44"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_44"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_44"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_44" UNION ALL SELECT "RF_Model_45"."KEY" AS "KEY", CAST("RF_Model_45"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_45"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_45"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_45"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_45"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_45"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_45"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_45"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_45"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_45"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_45"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_45"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_45" UNION ALL SELECT "RF_Model_46"."KEY" AS "KEY", CAST("RF_Model_46"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_46"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_46"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_46"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_46"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_46"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_46"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_46"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_46"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_46"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_46"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_46"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_46" UNION ALL SELECT "RF_Model_47"."KEY" AS "KEY", CAST("RF_Model_47"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_47"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_47"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_47"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_47"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_47"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_47"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_47"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_47"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_47"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_47"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_47"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_47" UNION ALL SELECT "RF_Model_48"."KEY" AS "KEY", CAST("RF_Model_48"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_48"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_48"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_48"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_48"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_48"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_48"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_48"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_48"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_48"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_48"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_48"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_48" UNION ALL SELECT "RF_Model_49"."KEY" AS "KEY", CAST("RF_Model_49"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_49"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_49"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_49"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_49"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_49"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_49"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_49"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_49"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_49"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_49"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_49"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_49") "RF_esu_4"), 
"DT_node_lookup_50" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.6627223210195465) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.059497589792178) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.1587741137692388) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.7851409095314079) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.8265712260628815) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 1.031510836119046) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 1.662898408473444e-16) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.151810095424694) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.9423405947551547) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.09932346392883053) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.8997986922094333) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.07623087048176352) THEN 27 ELSE 28 END ELSE 24 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.8859040740568238) THEN 25 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.7934964927892383) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.1498119713136807) THEN 31 ELSE 32 END ELSE 30 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.8475827899010677) THEN 19 ELSE 20 END END ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_50" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_50" AS 
(SELECT "DT_node_lookup_50"."KEY" AS "KEY", "DT_node_lookup_50".node_id_2 AS node_id_2, "DT_node_data_50".nid AS nid, "DT_node_data_50"."P_0" AS "P_0", "DT_node_data_50"."P_1" AS "P_1", "DT_node_data_50"."P_2" AS "P_2", "DT_node_data_50"."P_3" AS "P_3", "DT_node_data_50"."D" AS "D", "DT_node_data_50"."DP" AS "DP" 
FROM "DT_node_lookup_50" LEFT OUTER JOIN "DT_node_data_50" ON "DT_node_lookup_50".node_id_2 = "DT_node_data_50".nid), 
"RF_Model_50" AS 
(SELECT "DT_Output_50"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_50"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_50"."P_0" IS NULL OR "DT_Output_50"."P_0" > 0.0) THEN ln("DT_Output_50"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_50"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_50"."P_1" IS NULL OR "DT_Output_50"."P_1" > 0.0) THEN ln("DT_Output_50"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_50"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_50"."P_2" IS NULL OR "DT_Output_50"."P_2" > 0.0) THEN ln("DT_Output_50"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_50"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_50"."P_3" IS NULL OR "DT_Output_50"."P_3" > 0.0) THEN ln("DT_Output_50"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_50"), 
"DT_node_lookup_51" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.2292805047051333) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.7851409095314079) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.036666664459897) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.647442219415976) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -2.301098182846861e-16) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 1.470552253346087) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.1577494335270455) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.2822853654216489) THEN 27 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.1386436175601097) THEN 29 ELSE 30 END END ELSE 24 END ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -4.887952434889232e-16) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.151810095424694) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.3692401132656464) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.4505183327236149) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.7353904844601289) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.232439173087251) THEN 25 ELSE 26 END END END ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_51" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_51" AS 
(SELECT "DT_node_lookup_51"."KEY" AS "KEY", "DT_node_lookup_51".node_id_2 AS node_id_2, "DT_node_data_51".nid AS nid, "DT_node_data_51"."P_0" AS "P_0", "DT_node_data_51"."P_1" AS "P_1", "DT_node_data_51"."P_2" AS "P_2", "DT_node_data_51"."P_3" AS "P_3", "DT_node_data_51"."D" AS "D", "DT_node_data_51"."DP" AS "DP" 
FROM "DT_node_lookup_51" LEFT OUTER JOIN "DT_node_data_51" ON "DT_node_lookup_51".node_id_2 = "DT_node_data_51".nid), 
"RF_Model_51" AS 
(SELECT "DT_Output_51"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_51"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_51"."P_0" IS NULL OR "DT_Output_51"."P_0" > 0.0) THEN ln("DT_Output_51"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_51"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_51"."P_1" IS NULL OR "DT_Output_51"."P_1" > 0.0) THEN ln("DT_Output_51"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_51"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_51"."P_2" IS NULL OR "DT_Output_51"."P_2" > 0.0) THEN ln("DT_Output_51"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_51"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_51"."P_3" IS NULL OR "DT_Output_51"."P_3" > 0.0) THEN ln("DT_Output_51"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_51"), 
"DT_node_lookup_52" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.151810095424694) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.6772106946505019) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.1850890696406129) THEN 5 ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.1004530350809577) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 2.020980598455613) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.8089019190274594) THEN 21 ELSE 22 END ELSE 16 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.2939844664400414) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.4505183327236149) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.2074378099914063) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 1.458952468146866) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.2918676203211807) THEN 25 ELSE 26 END END ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.7558430908529301) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.1338025226115978) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.1504241578960444) THEN 27 ELSE 28 END END ELSE 14 END END END ELSE 2 END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_52" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_52" AS 
(SELECT "DT_node_lookup_52"."KEY" AS "KEY", "DT_node_lookup_52".node_id_2 AS node_id_2, "DT_node_data_52".nid AS nid, "DT_node_data_52"."P_0" AS "P_0", "DT_node_data_52"."P_1" AS "P_1", "DT_node_data_52"."P_2" AS "P_2", "DT_node_data_52"."P_3" AS "P_3", "DT_node_data_52"."D" AS "D", "DT_node_data_52"."DP" AS "DP" 
FROM "DT_node_lookup_52" LEFT OUTER JOIN "DT_node_data_52" ON "DT_node_lookup_52".node_id_2 = "DT_node_data_52".nid), 
"RF_Model_52" AS 
(SELECT "DT_Output_52"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_52"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_52"."P_0" IS NULL OR "DT_Output_52"."P_0" > 0.0) THEN ln("DT_Output_52"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_52"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_52"."P_1" IS NULL OR "DT_Output_52"."P_1" > 0.0) THEN ln("DT_Output_52"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_52"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_52"."P_2" IS NULL OR "DT_Output_52"."P_2" > 0.0) THEN ln("DT_Output_52"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_52"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_52"."P_3" IS NULL OR "DT_Output_52"."P_3" > 0.0) THEN ln("DT_Output_52"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_52"), 
"DT_node_lookup_53" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.3216466589824012) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.8211634221252145) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -1.128167864115345e-16) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.65440746168323) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.1420291319286456) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.8499120760250058) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.425484460365071) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 1.322996899421456) THEN 27 ELSE 28 END ELSE 24 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.5794817883508359) THEN 25 ELSE 26 END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.3239084204975428) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -2.3926225357873066e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -3.6788354283872127e-16) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.03200995026290915) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -1.5314076190919679) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_53" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_53" AS 
(SELECT "DT_node_lookup_53"."KEY" AS "KEY", "DT_node_lookup_53".node_id_2 AS node_id_2, "DT_node_data_53".nid AS nid, "DT_node_data_53"."P_0" AS "P_0", "DT_node_data_53"."P_1" AS "P_1", "DT_node_data_53"."P_2" AS "P_2", "DT_node_data_53"."P_3" AS "P_3", "DT_node_data_53"."D" AS "D", "DT_node_data_53"."DP" AS "DP" 
FROM "DT_node_lookup_53" LEFT OUTER JOIN "DT_node_data_53" ON "DT_node_lookup_53".node_id_2 = "DT_node_data_53".nid), 
"RF_Model_53" AS 
(SELECT "DT_Output_53"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_53"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_53"."P_0" IS NULL OR "DT_Output_53"."P_0" > 0.0) THEN ln("DT_Output_53"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_53"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_53"."P_1" IS NULL OR "DT_Output_53"."P_1" > 0.0) THEN ln("DT_Output_53"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_53"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_53"."P_2" IS NULL OR "DT_Output_53"."P_2" > 0.0) THEN ln("DT_Output_53"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_53"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_53"."P_3" IS NULL OR "DT_Output_53"."P_3" > 0.0) THEN ln("DT_Output_53"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_53"), 
"DT_node_lookup_54" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.1215960316857399) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.2537226674306845) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.939386539005713) THEN 7 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -4.1323676107475606e-16) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -8.801887754564032e-17) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.8998198880601651) THEN 17 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.2542791708522796) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.7538394068968857) THEN 27 ELSE 28 END ELSE 22 END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -1.585170560822045e-17) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 1.218745308386238) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.6113936966060165) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.938020942461937) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -3.574633767979018e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.6883767998014014) THEN 35 ELSE 36 END ELSE 30 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -1.0048181083814642) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 2.0919505497872559e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.8858814082033324) THEN 33 ELSE 34 END ELSE 26 END END ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.4093352649010038) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_54" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_54" AS 
(SELECT "DT_node_lookup_54"."KEY" AS "KEY", "DT_node_lookup_54".node_id_2 AS node_id_2, "DT_node_data_54".nid AS nid, "DT_node_data_54"."P_0" AS "P_0", "DT_node_data_54"."P_1" AS "P_1", "DT_node_data_54"."P_2" AS "P_2", "DT_node_data_54"."P_3" AS "P_3", "DT_node_data_54"."D" AS "D", "DT_node_data_54"."DP" AS "DP" 
FROM "DT_node_lookup_54" LEFT OUTER JOIN "DT_node_data_54" ON "DT_node_lookup_54".node_id_2 = "DT_node_data_54".nid), 
"RF_Model_54" AS 
(SELECT "DT_Output_54"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_54"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_54"."P_0" IS NULL OR "DT_Output_54"."P_0" > 0.0) THEN ln("DT_Output_54"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_54"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_54"."P_1" IS NULL OR "DT_Output_54"."P_1" > 0.0) THEN ln("DT_Output_54"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_54"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_54"."P_2" IS NULL OR "DT_Output_54"."P_2" > 0.0) THEN ln("DT_Output_54"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_54"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_54"."P_3" IS NULL OR "DT_Output_54"."P_3" > 0.0) THEN ln("DT_Output_54"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_54"), 
"DT_node_lookup_55" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.3253779070664982) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.2776026846089817) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.9808517493080964) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.3190982829758677) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.7395153255977085) THEN 21 ELSE 22 END ELSE 16 END ELSE 8 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 2.020980598455613) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.3168452929028848) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.3132027488114523) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.1218848340268402) THEN 29 ELSE 30 END ELSE 24 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.076094403292772) THEN 25 ELSE 26 END END ELSE 10 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -5.898187510980688e-17) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -2.682123011629368e-16) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -1.9499388932401) THEN 13 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -3.904505106293669e-16) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -1.5995673607612009) THEN 27 ELSE 28 END END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_55" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_55" AS 
(SELECT "DT_node_lookup_55"."KEY" AS "KEY", "DT_node_lookup_55".node_id_2 AS node_id_2, "DT_node_data_55".nid AS nid, "DT_node_data_55"."P_0" AS "P_0", "DT_node_data_55"."P_1" AS "P_1", "DT_node_data_55"."P_2" AS "P_2", "DT_node_data_55"."P_3" AS "P_3", "DT_node_data_55"."D" AS "D", "DT_node_data_55"."DP" AS "DP" 
FROM "DT_node_lookup_55" LEFT OUTER JOIN "DT_node_data_55" ON "DT_node_lookup_55".node_id_2 = "DT_node_data_55".nid), 
"RF_Model_55" AS 
(SELECT "DT_Output_55"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_55"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_55"."P_0" IS NULL OR "DT_Output_55"."P_0" > 0.0) THEN ln("DT_Output_55"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_55"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_55"."P_1" IS NULL OR "DT_Output_55"."P_1" > 0.0) THEN ln("DT_Output_55"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_55"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_55"."P_2" IS NULL OR "DT_Output_55"."P_2" > 0.0) THEN ln("DT_Output_55"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_55"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_55"."P_3" IS NULL OR "DT_Output_55"."P_3" > 0.0) THEN ln("DT_Output_55"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_55"), 
"DT_node_lookup_56" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.2292805047051333) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -8.868212437958765e-17) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.265135741232227) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.001569242784406594) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= -0.4024077573920201) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.3593721979837006) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.1550847640529674) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= -1.50842797464032) THEN 23 ELSE 24 END ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.2341591897414978) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.09646806544130948) THEN 25 ELSE 26 END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.132372259920853) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 1.6150904633010748) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.4918885779672256) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.7130722204797353) THEN 27 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.6010598188783671) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.2652750097170333) THEN 29 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 8.609006497470802e-17) THEN 33 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.4858066869175721) THEN 35 ELSE 36 END END END END ELSE 12 END ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_56" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_56" AS 
(SELECT "DT_node_lookup_56"."KEY" AS "KEY", "DT_node_lookup_56".node_id_2 AS node_id_2, "DT_node_data_56".nid AS nid, "DT_node_data_56"."P_0" AS "P_0", "DT_node_data_56"."P_1" AS "P_1", "DT_node_data_56"."P_2" AS "P_2", "DT_node_data_56"."P_3" AS "P_3", "DT_node_data_56"."D" AS "D", "DT_node_data_56"."DP" AS "DP" 
FROM "DT_node_lookup_56" LEFT OUTER JOIN "DT_node_data_56" ON "DT_node_lookup_56".node_id_2 = "DT_node_data_56".nid), 
"RF_Model_56" AS 
(SELECT "DT_Output_56"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_56"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_56"."P_0" IS NULL OR "DT_Output_56"."P_0" > 0.0) THEN ln("DT_Output_56"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_56"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_56"."P_1" IS NULL OR "DT_Output_56"."P_1" > 0.0) THEN ln("DT_Output_56"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_56"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_56"."P_2" IS NULL OR "DT_Output_56"."P_2" > 0.0) THEN ln("DT_Output_56"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_56"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_56"."P_3" IS NULL OR "DT_Output_56"."P_3" > 0.0) THEN ln("DT_Output_56"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_56"), 
"DT_node_lookup_57" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.8248208331986493) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.8718265840179972) THEN 3 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.856969496748187) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 2.586807315064377e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.3002281456599097) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.1550847640529674) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 9.587422599665083e-17) THEN 15 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 4.732376633002187e-17) THEN 21 ELSE 22 END END ELSE 12 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.3160211556509371) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 1.071097050899509) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.0428475191294408) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 2.094049484686754e-16) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.1962255914080981) THEN 29 ELSE 30 END END ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.705271583187508) THEN 19 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.7022174553946422) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= -9.042468003284779e-17) THEN 31 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.09585219682799652) THEN 33 ELSE 34 END END ELSE 26 END END END END ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_57" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_57" AS 
(SELECT "DT_node_lookup_57"."KEY" AS "KEY", "DT_node_lookup_57".node_id_2 AS node_id_2, "DT_node_data_57".nid AS nid, "DT_node_data_57"."P_0" AS "P_0", "DT_node_data_57"."P_1" AS "P_1", "DT_node_data_57"."P_2" AS "P_2", "DT_node_data_57"."P_3" AS "P_3", "DT_node_data_57"."D" AS "D", "DT_node_data_57"."DP" AS "DP" 
FROM "DT_node_lookup_57" LEFT OUTER JOIN "DT_node_data_57" ON "DT_node_lookup_57".node_id_2 = "DT_node_data_57".nid), 
"RF_Model_57" AS 
(SELECT "DT_Output_57"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_57"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_57"."P_0" IS NULL OR "DT_Output_57"."P_0" > 0.0) THEN ln("DT_Output_57"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_57"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_57"."P_1" IS NULL OR "DT_Output_57"."P_1" > 0.0) THEN ln("DT_Output_57"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_57"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_57"."P_2" IS NULL OR "DT_Output_57"."P_2" > 0.0) THEN ln("DT_Output_57"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_57"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_57"."P_3" IS NULL OR "DT_Output_57"."P_3" > 0.0) THEN ln("DT_Output_57"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_57"), 
"DT_node_lookup_58" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.261218863406317) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.08164775765328257) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 1.873624851998575e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.4182813662204658) THEN 11 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -4.866597969824608e-18) THEN 17 ELSE CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.7488205269513574) THEN 21 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 1.1957522275878521e-16) THEN 23 ELSE 24 END END END END ELSE 8 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.948892040847358) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.3418360225561413) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.4850445444387638) THEN 19 ELSE 20 END ELSE 14 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.8672078063253799) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.5154483238208651) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_58" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_58" AS 
(SELECT "DT_node_lookup_58"."KEY" AS "KEY", "DT_node_lookup_58".node_id_2 AS node_id_2, "DT_node_data_58".nid AS nid, "DT_node_data_58"."P_0" AS "P_0", "DT_node_data_58"."P_1" AS "P_1", "DT_node_data_58"."P_2" AS "P_2", "DT_node_data_58"."P_3" AS "P_3", "DT_node_data_58"."D" AS "D", "DT_node_data_58"."DP" AS "DP" 
FROM "DT_node_lookup_58" LEFT OUTER JOIN "DT_node_data_58" ON "DT_node_lookup_58".node_id_2 = "DT_node_data_58".nid), 
"RF_Model_58" AS 
(SELECT "DT_Output_58"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_58"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_58"."P_0" IS NULL OR "DT_Output_58"."P_0" > 0.0) THEN ln("DT_Output_58"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_58"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_58"."P_1" IS NULL OR "DT_Output_58"."P_1" > 0.0) THEN ln("DT_Output_58"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_58"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_58"."P_2" IS NULL OR "DT_Output_58"."P_2" > 0.0) THEN ln("DT_Output_58"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_58"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_58"."P_3" IS NULL OR "DT_Output_58"."P_3" > 0.0) THEN ln("DT_Output_58"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_58"), 
"DT_node_lookup_59" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.2986960912929032) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.5649077162467557) THEN 3 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -1.7340173992007242) THEN 7 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -1.7357150348468993e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.7196738233027401) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.8460533080840236) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -3.5445888627081873e-16) THEN 37 ELSE 38 END ELSE 34 END END ELSE 14 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 5.109914556394581e-18) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.2841188238358484) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.5740501122733732) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.3767634627503183) THEN 25 ELSE 26 END ELSE 16 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -1.3596532631902848e-16) THEN 17 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.6636316186006502) THEN 27 ELSE 28 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -1.0122515698517551) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 9.68019468820337e-16) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.4441277158609179) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.4167032729547185) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.6070520543334652) THEN 31 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 5.160585059543501e-16) THEN 35 ELSE 36 END END END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_59" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_59" AS 
(SELECT "DT_node_lookup_59"."KEY" AS "KEY", "DT_node_lookup_59".node_id_2 AS node_id_2, "DT_node_data_59".nid AS nid, "DT_node_data_59"."P_0" AS "P_0", "DT_node_data_59"."P_1" AS "P_1", "DT_node_data_59"."P_2" AS "P_2", "DT_node_data_59"."P_3" AS "P_3", "DT_node_data_59"."D" AS "D", "DT_node_data_59"."DP" AS "DP" 
FROM "DT_node_lookup_59" LEFT OUTER JOIN "DT_node_data_59" ON "DT_node_lookup_59".node_id_2 = "DT_node_data_59".nid), 
"RF_Model_59" AS 
(SELECT "DT_Output_59"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_59"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_59"."P_0" IS NULL OR "DT_Output_59"."P_0" > 0.0) THEN ln("DT_Output_59"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_59"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_59"."P_1" IS NULL OR "DT_Output_59"."P_1" > 0.0) THEN ln("DT_Output_59"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_59"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_59"."P_2" IS NULL OR "DT_Output_59"."P_2" > 0.0) THEN ln("DT_Output_59"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_59"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_59"."P_3" IS NULL OR "DT_Output_59"."P_3" > 0.0) THEN ln("DT_Output_59"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_59"), 
"RF_5" AS 
(SELECT "RF_esu_5"."KEY" AS "KEY", "RF_esu_5"."Score_0" AS "Score_0", "RF_esu_5"."Proba_0" AS "Proba_0", "RF_esu_5"."LogProba_0" AS "LogProba_0", "RF_esu_5"."Score_1" AS "Score_1", "RF_esu_5"."Proba_1" AS "Proba_1", "RF_esu_5"."LogProba_1" AS "LogProba_1", "RF_esu_5"."Score_2" AS "Score_2", "RF_esu_5"."Proba_2" AS "Proba_2", "RF_esu_5"."LogProba_2" AS "LogProba_2", "RF_esu_5"."Score_3" AS "Score_3", "RF_esu_5"."Proba_3" AS "Proba_3", "RF_esu_5"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_50"."KEY" AS "KEY", CAST("RF_Model_50"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_50"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_50"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_50"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_50"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_50"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_50"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_50"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_50"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_50"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_50"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_50"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_50" UNION ALL SELECT "RF_Model_51"."KEY" AS "KEY", CAST("RF_Model_51"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_51"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_51"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_51"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_51"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_51"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_51"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_51"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_51"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_51"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_51"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_51"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_51" UNION ALL SELECT "RF_Model_52"."KEY" AS "KEY", CAST("RF_Model_52"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_52"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_52"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_52"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_52"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_52"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_52"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_52"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_52"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_52"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_52"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_52"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_52" UNION ALL SELECT "RF_Model_53"."KEY" AS "KEY", CAST("RF_Model_53"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_53"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_53"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_53"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_53"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_53"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_53"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_53"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_53"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_53"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_53"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_53"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_53" UNION ALL SELECT "RF_Model_54"."KEY" AS "KEY", CAST("RF_Model_54"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_54"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_54"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_54"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_54"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_54"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_54"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_54"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_54"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_54"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_54"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_54"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_54" UNION ALL SELECT "RF_Model_55"."KEY" AS "KEY", CAST("RF_Model_55"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_55"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_55"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_55"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_55"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_55"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_55"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_55"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_55"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_55"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_55"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_55"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_55" UNION ALL SELECT "RF_Model_56"."KEY" AS "KEY", CAST("RF_Model_56"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_56"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_56"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_56"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_56"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_56"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_56"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_56"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_56"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_56"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_56"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_56"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_56" UNION ALL SELECT "RF_Model_57"."KEY" AS "KEY", CAST("RF_Model_57"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_57"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_57"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_57"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_57"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_57"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_57"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_57"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_57"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_57"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_57"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_57"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_57" UNION ALL SELECT "RF_Model_58"."KEY" AS "KEY", CAST("RF_Model_58"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_58"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_58"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_58"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_58"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_58"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_58"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_58"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_58"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_58"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_58"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_58"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_58" UNION ALL SELECT "RF_Model_59"."KEY" AS "KEY", CAST("RF_Model_59"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_59"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_59"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_59"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_59"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_59"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_59"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_59"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_59"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_59"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_59"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_59"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_59") "RF_esu_5"), 
"DT_node_lookup_60" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.1037754147984227) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 3.205581527406696e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.9849203112537858) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= -0.5545735874545173) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 3.655934864257372e-16) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 1.820034784425352e-17) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.4646019444148042) THEN 27 ELSE 28 END ELSE 24 END END ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.3055470375982567) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -1.4528939638705332e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.9598643263508132) THEN 15 ELSE 16 END ELSE 10 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.8384169792008844) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -2.025841151146559) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 2.126496497415536e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.049146785826371164) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.074114428103212) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.3403528388921634) THEN 31 ELSE 32 END END ELSE 20 END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_60" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_60" AS 
(SELECT "DT_node_lookup_60"."KEY" AS "KEY", "DT_node_lookup_60".node_id_2 AS node_id_2, "DT_node_data_60".nid AS nid, "DT_node_data_60"."P_0" AS "P_0", "DT_node_data_60"."P_1" AS "P_1", "DT_node_data_60"."P_2" AS "P_2", "DT_node_data_60"."P_3" AS "P_3", "DT_node_data_60"."D" AS "D", "DT_node_data_60"."DP" AS "DP" 
FROM "DT_node_lookup_60" LEFT OUTER JOIN "DT_node_data_60" ON "DT_node_lookup_60".node_id_2 = "DT_node_data_60".nid), 
"RF_Model_60" AS 
(SELECT "DT_Output_60"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_60"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_60"."P_0" IS NULL OR "DT_Output_60"."P_0" > 0.0) THEN ln("DT_Output_60"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_60"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_60"."P_1" IS NULL OR "DT_Output_60"."P_1" > 0.0) THEN ln("DT_Output_60"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_60"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_60"."P_2" IS NULL OR "DT_Output_60"."P_2" > 0.0) THEN ln("DT_Output_60"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_60"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_60"."P_3" IS NULL OR "DT_Output_60"."P_3" > 0.0) THEN ln("DT_Output_60"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_60"), 
"DT_node_lookup_61" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.1911807360549046) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.2230525575173479) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.2776026846089817) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -2.024272352486989) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= -0.09782824373949783) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.8550247185222378) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.0024269766898728) THEN 33 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= -1.1744266068163019e-16) THEN 41 ELSE 42 END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.9947582694030452) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= 1.6785744318227818e-16) THEN 25 ELSE 26 END ELSE 16 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.3407753468363567) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= 8.609006497470802e-17) THEN 17 ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 4.481482551422341e-17) THEN 27 ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.9630694885483776) THEN 35 ELSE 36 END END END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.7217334735633456) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 3.8701944089255423e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 0.630892951154794) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.853769001342802) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -3.574633767979018e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_11 <= -3.629417961068602e-16) THEN 43 ELSE 44 END ELSE 38 END ELSE 30 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.1644344573440342) THEN 31 ELSE CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.3228726376504492) THEN 39 ELSE 40 END END END ELSE 12 END ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_61" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 39 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 40 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 41 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 42 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 43 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 44 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_61" AS 
(SELECT "DT_node_lookup_61"."KEY" AS "KEY", "DT_node_lookup_61".node_id_2 AS node_id_2, "DT_node_data_61".nid AS nid, "DT_node_data_61"."P_0" AS "P_0", "DT_node_data_61"."P_1" AS "P_1", "DT_node_data_61"."P_2" AS "P_2", "DT_node_data_61"."P_3" AS "P_3", "DT_node_data_61"."D" AS "D", "DT_node_data_61"."DP" AS "DP" 
FROM "DT_node_lookup_61" LEFT OUTER JOIN "DT_node_data_61" ON "DT_node_lookup_61".node_id_2 = "DT_node_data_61".nid), 
"RF_Model_61" AS 
(SELECT "DT_Output_61"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_61"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_61"."P_0" IS NULL OR "DT_Output_61"."P_0" > 0.0) THEN ln("DT_Output_61"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_61"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_61"."P_1" IS NULL OR "DT_Output_61"."P_1" > 0.0) THEN ln("DT_Output_61"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_61"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_61"."P_2" IS NULL OR "DT_Output_61"."P_2" > 0.0) THEN ln("DT_Output_61"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_61"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_61"."P_3" IS NULL OR "DT_Output_61"."P_3" > 0.0) THEN ln("DT_Output_61"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_61"), 
"DT_node_lookup_62" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.08996814623839372) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.7138740549614115) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.3407753468363567) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= 0.1465140200837513) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= -0.7138761567251216) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.2402119347860892) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.116091957856211) THEN 39 ELSE 40 END ELSE 34 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_10 <= 2.2550419608206167e-16) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.7188392043718616) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.977012499762402) THEN 37 ELSE 38 END END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.09357090023783354) THEN CASE WHEN ("ADS_car_1_OUT".caress_10 <= 3.651710559987407e-16) THEN 25 ELSE 26 END ELSE 16 END END ELSE 4 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.2462877112827759) THEN CASE WHEN ("ADS_car_1_OUT".caress_4 <= -1.03460787629089) THEN 9 ELSE CASE WHEN ("ADS_car_1_OUT".caress_11 <= -3.574633767979018e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= -0.05072693790339222) THEN 27 ELSE 28 END ELSE 18 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.874173488557099) THEN 11 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= 0.009724957372449848) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.7042768689866831) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= 0.6654652614088695) THEN 31 ELSE 32 END END END END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_62" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 39 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 40 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_62" AS 
(SELECT "DT_node_lookup_62"."KEY" AS "KEY", "DT_node_lookup_62".node_id_2 AS node_id_2, "DT_node_data_62".nid AS nid, "DT_node_data_62"."P_0" AS "P_0", "DT_node_data_62"."P_1" AS "P_1", "DT_node_data_62"."P_2" AS "P_2", "DT_node_data_62"."P_3" AS "P_3", "DT_node_data_62"."D" AS "D", "DT_node_data_62"."DP" AS "DP" 
FROM "DT_node_lookup_62" LEFT OUTER JOIN "DT_node_data_62" ON "DT_node_lookup_62".node_id_2 = "DT_node_data_62".nid), 
"RF_Model_62" AS 
(SELECT "DT_Output_62"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_62"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_62"."P_0" IS NULL OR "DT_Output_62"."P_0" > 0.0) THEN ln("DT_Output_62"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_62"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_62"."P_1" IS NULL OR "DT_Output_62"."P_1" > 0.0) THEN ln("DT_Output_62"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_62"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_62"."P_2" IS NULL OR "DT_Output_62"."P_2" > 0.0) THEN ln("DT_Output_62"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_62"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_62"."P_3" IS NULL OR "DT_Output_62"."P_3" > 0.0) THEN ln("DT_Output_62"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_62"), 
"DT_node_lookup_63" AS 
(SELECT "ADS_car_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_car_1_OUT".caress_10 <= 1.689769925325701e-16) THEN CASE WHEN ("ADS_car_1_OUT".caress_2 <= 2.151810095424694) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= -0.3442772708705132) THEN CASE WHEN ("ADS_car_1_OUT".caress_5 <= 1.4218853604397041) THEN CASE WHEN ("ADS_car_1_OUT".caress_3 <= 0.2518489671010259) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= -1.526621833707664) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 0.1792605955095648) THEN CASE WHEN ("ADS_car_1_OUT".caress_9 <= 0.543895027811875) THEN CASE WHEN ("ADS_car_1_OUT".caress_8 <= -0.1625246228364009) THEN 25 ELSE CASE WHEN ("ADS_car_1_OUT".caress_4 <= -0.9210785238410312) THEN 29 ELSE 30 END END ELSE 22 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.3253779070664982) THEN 23 ELSE CASE WHEN ("ADS_car_1_OUT".caress_7 <= -1.1867472344221928) THEN 27 ELSE 28 END END END END ELSE 4 END ELSE CASE WHEN ("ADS_car_1_OUT".caress_2 <= 1.581198359909214) THEN CASE WHEN ("ADS_car_1_OUT".caress_6 <= 0.3231876295458321) THEN CASE WHEN ("ADS_car_1_OUT".caress_7 <= 1.2144232118254552) THEN 15 ELSE 16 END ELSE 10 END ELSE 6 END END AS node_id_2 
FROM "ADS_car_1_OUT"), 
"DT_node_data_63" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_63" AS 
(SELECT "DT_node_lookup_63"."KEY" AS "KEY", "DT_node_lookup_63".node_id_2 AS node_id_2, "DT_node_data_63".nid AS nid, "DT_node_data_63"."P_0" AS "P_0", "DT_node_data_63"."P_1" AS "P_1", "DT_node_data_63"."P_2" AS "P_2", "DT_node_data_63"."P_3" AS "P_3", "DT_node_data_63"."D" AS "D", "DT_node_data_63"."DP" AS "DP" 
FROM "DT_node_lookup_63" LEFT OUTER JOIN "DT_node_data_63" ON "DT_node_lookup_63".node_id_2 = "DT_node_data_63".nid), 
"RF_Model_63" AS 
(SELECT "DT_Output_63"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_63"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_63"."P_0" IS NULL OR "DT_Output_63"."P_0" > 0.0) THEN ln("DT_Output_63"."P_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_63"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_63"."P_1" IS NULL OR "DT_Output_63"."P_1" > 0.0) THEN ln("DT_Output_63"."P_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_63"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_63"."P_2" IS NULL OR "DT_Output_63"."P_2" > 0.0) THEN ln("DT_Output_63"."P_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_63"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_63"."P_3" IS NULL OR "DT_Output_63"."P_3" > 0.0) THEN ln("DT_Output_63"."P_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_63"), 
"RF_6" AS 
(SELECT "RF_esu_6"."KEY" AS "KEY", "RF_esu_6"."Score_0" AS "Score_0", "RF_esu_6"."Proba_0" AS "Proba_0", "RF_esu_6"."LogProba_0" AS "LogProba_0", "RF_esu_6"."Score_1" AS "Score_1", "RF_esu_6"."Proba_1" AS "Proba_1", "RF_esu_6"."LogProba_1" AS "LogProba_1", "RF_esu_6"."Score_2" AS "Score_2", "RF_esu_6"."Proba_2" AS "Proba_2", "RF_esu_6"."LogProba_2" AS "LogProba_2", "RF_esu_6"."Score_3" AS "Score_3", "RF_esu_6"."Proba_3" AS "Proba_3", "RF_esu_6"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_60"."KEY" AS "KEY", CAST("RF_Model_60"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_60"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_60"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_60"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_60"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_60"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_60"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_60"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_60"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_60"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_60"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_60"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_60" UNION ALL SELECT "RF_Model_61"."KEY" AS "KEY", CAST("RF_Model_61"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_61"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_61"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_61"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_61"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_61"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_61"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_61"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_61"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_61"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_61"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_61"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_61" UNION ALL SELECT "RF_Model_62"."KEY" AS "KEY", CAST("RF_Model_62"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_62"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_62"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_62"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_62"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_62"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_62"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_62"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_62"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_62"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_62"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_62"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_62" UNION ALL SELECT "RF_Model_63"."KEY" AS "KEY", CAST("RF_Model_63"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_Model_63"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_Model_63"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_Model_63"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_Model_63"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_Model_63"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_Model_63"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_Model_63"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_Model_63"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_Model_63"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_Model_63"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_Model_63"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Model_63") "RF_esu_6"), 
"RF" AS 
(SELECT "RFbig_esu"."KEY" AS "KEY", "RFbig_esu"."Score_0" AS "Score_0", "RFbig_esu"."Proba_0" AS "Proba_0", "RFbig_esu"."LogProba_0" AS "LogProba_0", "RFbig_esu"."Score_1" AS "Score_1", "RFbig_esu"."Proba_1" AS "Proba_1", "RFbig_esu"."LogProba_1" AS "LogProba_1", "RFbig_esu"."Score_2" AS "Score_2", "RFbig_esu"."Proba_2" AS "Proba_2", "RFbig_esu"."LogProba_2" AS "LogProba_2", "RFbig_esu"."Score_3" AS "Score_3", "RFbig_esu"."Proba_3" AS "Proba_3", "RFbig_esu"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_0"."KEY" AS "KEY", CAST("RF_0"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_0"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_0"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_0"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_0"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_0"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_0"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_0"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_0"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_0"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_0"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_0"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_0" UNION ALL SELECT "RF_1"."KEY" AS "KEY", CAST("RF_1"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_1"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_1"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_1"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_1"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_1"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_1"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_1"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_1"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_1"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_1"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_1"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_1" UNION ALL SELECT "RF_2"."KEY" AS "KEY", CAST("RF_2"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_2"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_2"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_2"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_2"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_2"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_2"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_2"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_2"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_2"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_2"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_2"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_2" UNION ALL SELECT "RF_3"."KEY" AS "KEY", CAST("RF_3"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_3"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_3"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_3"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_3"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_3"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_3"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_3"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_3"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_3"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_3"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_3"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_3" UNION ALL SELECT "RF_4"."KEY" AS "KEY", CAST("RF_4"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_4"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_4"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_4"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_4"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_4"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_4"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_4"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_4"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_4"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_4"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_4"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_4" UNION ALL SELECT "RF_5"."KEY" AS "KEY", CAST("RF_5"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_5"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_5"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_5"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_5"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_5"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_5"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_5"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_5"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_5"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_5"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_5"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_5" UNION ALL SELECT "RF_6"."KEY" AS "KEY", CAST("RF_6"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("RF_6"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("RF_6"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("RF_6"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("RF_6"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("RF_6"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("RF_6"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("RF_6"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("RF_6"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("RF_6"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("RF_6"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("RF_6"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_6") "RFbig_esu"), 
"RF_avg" AS 
(SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("T"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("T"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("T"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("T"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("T"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("T"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("T"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("T"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("T"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("T"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("T"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM (SELECT "RF"."KEY" AS "KEY", avg(CAST("RF"."Score_0" AS BINARY_DOUBLE)) AS "Score_0", avg(CAST("RF"."Proba_0" AS BINARY_DOUBLE)) AS "Proba_0", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_0", avg(CAST("RF"."Score_1" AS BINARY_DOUBLE)) AS "Score_1", avg(CAST("RF"."Proba_1" AS BINARY_DOUBLE)) AS "Proba_1", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_1", avg(CAST("RF"."Score_2" AS BINARY_DOUBLE)) AS "Score_2", avg(CAST("RF"."Proba_2" AS BINARY_DOUBLE)) AS "Proba_2", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_2", avg(CAST("RF"."Score_3" AS BINARY_DOUBLE)) AS "Score_3", avg(CAST("RF"."Proba_3" AS BINARY_DOUBLE)) AS "Proba_3", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF" GROUP BY "RF"."KEY") "T"), 
orig_cte AS 
(SELECT "RF_avg"."KEY" AS "KEY", "RF_avg"."Score_0" AS "Score_0", "RF_avg"."Score_1" AS "Score_1", "RF_avg"."Score_2" AS "Score_2", "RF_avg"."Score_3" AS "Score_3", "RF_avg"."Proba_0" AS "Proba_0", "RF_avg"."Proba_1" AS "Proba_1", "RF_avg"."Proba_2" AS "Proba_2", "RF_avg"."Proba_3" AS "Proba_3", "RF_avg"."LogProba_0" AS "LogProba_0", "RF_avg"."LogProba_1" AS "LogProba_1", "RF_avg"."LogProba_2" AS "LogProba_2", "RF_avg"."LogProba_3" AS "LogProba_3", CAST(NULL AS NUMBER(19)) AS "Decision", CAST(NULL AS BINARY_DOUBLE) AS "DecisionProba" 
FROM "RF_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte