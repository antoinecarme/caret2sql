-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretClassifier_rf_pca
-- Dataset : BreastCancer
-- Database : monetdb


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "ADS_sca_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", (CAST("ADS"."Feature_0" AS DOUBLE) - 14.07771208791209) / 3.5490515005403798 AS "Feature_0", (CAST("ADS"."Feature_1" AS DOUBLE) - 19.03905494505495) / 4.166878656652379 AS "Feature_1", (CAST("ADS"."Feature_2" AS DOUBLE) - 91.66178021978024) / 24.53094385251417 AS "Feature_2", (CAST("ADS"."Feature_3" AS DOUBLE) - 650.9676923076922) / 356.0943508808365 AS "Feature_3", (CAST("ADS"."Feature_4" AS DOUBLE) - 0.09642184615384616) / 0.01421344742747642 AS "Feature_4", (CAST("ADS"."Feature_5" AS DOUBLE) - 0.1044161318681319) / 0.053462476960143265 AS "Feature_5", (CAST("ADS"."Feature_6" AS DOUBLE) - 0.08826232681318681) / 0.08200216346057157 AS "Feature_6", (CAST("ADS"."Feature_7" AS DOUBLE) - 0.0485164) / 0.03941645600907594 AS "Feature_7", (CAST("ADS"."Feature_8" AS DOUBLE) - 0.1815885714285714) / 0.02782064728498547 AS "Feature_8", (CAST("ADS"."Feature_9" AS DOUBLE) - 0.0629403076923077) / 0.007027080900659396 AS "Feature_9", (CAST("ADS"."Feature_10" AS DOUBLE) - 0.4099173626373626) / 0.2915245412208004 AS "Feature_10", (CAST("ADS"."Feature_11" AS DOUBLE) - 1.217069450549451) / 0.5369800521839988 AS "Feature_11", (CAST("ADS"."Feature_12" AS DOUBLE) - 2.9052490109890114) / 2.144852707447646 AS "Feature_12", (CAST("ADS"."Feature_13" AS DOUBLE) - 40.87988571428571) / 48.2778362287006 AS "Feature_13", (CAST("ADS"."Feature_14" AS DOUBLE) - 0.0070559714285714295) / 0.002866803723188527 AS "Feature_14", (CAST("ADS"."Feature_15" AS DOUBLE) - 0.02556783076923077) / 0.01796676819246774 AS "Feature_15", (CAST("ADS"."Feature_16" AS DOUBLE) - 0.031999256263736266) / 0.03169979081746389 AS "Feature_16", (CAST("ADS"."Feature_17" AS DOUBLE) - 0.01197236923076923) / 0.006399041370931476 AS "Feature_17", (CAST("ADS"."Feature_18" AS DOUBLE) - 0.0208962) / 0.008592357424589265 AS "Feature_18", (CAST("ADS"."Feature_19" AS DOUBLE) - 0.003846551868131868) / 0.0027466275188339 AS "Feature_19", (CAST("ADS"."Feature_20" AS DOUBLE) - 16.17776483516484) / 4.822761469227882 AS "Feature_20", (CAST("ADS"."Feature_21" AS DOUBLE) - 25.26505494505495) / 5.929844025113361 AS "Feature_21", (CAST("ADS"."Feature_22" AS DOUBLE) - 106.68156043956041) / 33.740956745431944 AS "Feature_22", (CAST("ADS"."Feature_23" AS DOUBLE) - 870.863956043956) / 567.6191564029466 AS "Feature_23", (CAST("ADS"."Feature_24" AS DOUBLE) - 0.1318275604395604) / 0.02277324683369087 AS "Feature_24", (CAST("ADS"."Feature_25" AS DOUBLE) - 0.2499180659340659) / 0.1526367614098782 AS "Feature_25", (CAST("ADS"."Feature_26" AS DOUBLE) - 0.2654615934065934) / 0.2071534531545495 AS "Feature_26", (CAST("ADS"."Feature_27" AS DOUBLE) - 0.1134879802197802) / 0.06645447985497112 AS "Feature_27", (CAST("ADS"."Feature_28" AS DOUBLE) - 0.2897881318681318) / 0.06227317635385585 AS "Feature_28", (CAST("ADS"."Feature_29" AS DOUBLE) - 0.08364145054945055) / 0.01708392968253732 AS "Feature_29" 
FROM "BreastCancer" AS "ADS"), 
"ADS_pre_1_OUT" AS 
(SELECT "ADS_sca_1_OUT"."KEY" AS "KEY", "ADS_sca_1_OUT"."Feature_0" * -0.21768343094223108 + "ADS_sca_1_OUT"."Feature_1" * -0.10393262184047268 + "ADS_sca_1_OUT"."Feature_2" * -0.2265164944329179 + "ADS_sca_1_OUT"."Feature_3" * -0.21993736711575185 + "ADS_sca_1_OUT"."Feature_4" * -0.14268833980412854 + "ADS_sca_1_OUT"."Feature_5" * -0.24024798670573505 + "ADS_sca_1_OUT"."Feature_6" * -0.257355901686626 + "ADS_sca_1_OUT"."Feature_7" * -0.2597680750587679 + "ADS_sca_1_OUT"."Feature_8" * -0.13868620385317515 + "ADS_sca_1_OUT"."Feature_9" * -0.06712190195264113 + "ADS_sca_1_OUT"."Feature_10" * -0.2069150720147228 + "ADS_sca_1_OUT"."Feature_11" * -0.03305717760079786 + "ADS_sca_1_OUT"."Feature_12" * -0.212828518237874 + "ADS_sca_1_OUT"."Feature_13" * -0.2013439160056293 + "ADS_sca_1_OUT"."Feature_14" * -0.02049865164066569 + "ADS_sca_1_OUT"."Feature_15" * -0.1750181653895911 + "ADS_sca_1_OUT"."Feature_16" * -0.1519078637342155 + "ADS_sca_1_OUT"."Feature_17" * -0.1865203607950731 + "ADS_sca_1_OUT"."Feature_18" * -0.053039357385151385 + "ADS_sca_1_OUT"."Feature_19" * -0.10231665221046024 + "ADS_sca_1_OUT"."Feature_20" * -0.226956028801125 + "ADS_sca_1_OUT"."Feature_21" * -0.10317017778958812 + "ADS_sca_1_OUT"."Feature_22" * -0.23602999862163965 + "ADS_sca_1_OUT"."Feature_23" * -0.2240006176535796 + "ADS_sca_1_OUT"."Feature_24" * -0.12717220549829955 + "ADS_sca_1_OUT"."Feature_25" * -0.21222759880468806 + "ADS_sca_1_OUT"."Feature_26" * -0.22758988828313426 + "ADS_sca_1_OUT"."Feature_27" * -0.2490125441701701 + "ADS_sca_1_OUT"."Feature_28" * -0.11944032522919835 + "ADS_sca_1_OUT"."Feature_29" * -0.13166419338876287 AS "PC1", "ADS_sca_1_OUT"."Feature_0" * 0.2388263496095884 + "ADS_sca_1_OUT"."Feature_1" * 0.05323416968015016 + "ADS_sca_1_OUT"."Feature_2" * 0.21941449489711815 + "ADS_sca_1_OUT"."Feature_3" * 0.2342171388843593 + "ADS_sca_1_OUT"."Feature_4" * -0.17925865624129375 + "ADS_sca_1_OUT"."Feature_5" * -0.14316495439683485 + "ADS_sca_1_OUT"."Feature_6" * -0.06042147680146465 + "ADS_sca_1_OUT"."Feature_7" * 0.03722975887665922 + "ADS_sca_1_OUT"."Feature_8" * -0.19462120663415455 + "ADS_sca_1_OUT"."Feature_9" * -0.3731777815015735 + "ADS_sca_1_OUT"."Feature_10" * 0.0948169433203506 + "ADS_sca_1_OUT"."Feature_11" * -0.10262087159564362 + "ADS_sca_1_OUT"."Feature_12" * 0.08014049234060505 + "ADS_sca_1_OUT"."Feature_13" * 0.14683589434398536 + "ADS_sca_1_OUT"."Feature_14" * -0.21665542062253368 + "ADS_sca_1_OUT"."Feature_15" * -0.22633882980546735 + "ADS_sca_1_OUT"."Feature_16" * -0.2013330897413932 + "ADS_sca_1_OUT"."Feature_17" * -0.13744139199061656 + "ADS_sca_1_OUT"."Feature_18" * -0.1851008068283944 + "ADS_sca_1_OUT"."Feature_19" * -0.2787797373414811 + "ADS_sca_1_OUT"."Feature_20" * 0.22285850281808672 + "ADS_sca_1_OUT"."Feature_21" * 0.04796372561185864 + "ADS_sca_1_OUT"."Feature_22" * 0.20144532663199727 + "ADS_sca_1_OUT"."Feature_23" * 0.22117900125773696 + "ADS_sca_1_OUT"."Feature_24" * -0.16388533650733236 + "ADS_sca_1_OUT"."Feature_25" * -0.12771851864859946 + "ADS_sca_1_OUT"."Feature_26" * -0.0920845205598406 + "ADS_sca_1_OUT"."Feature_27" * 0.01180363799025717 + "ADS_sca_1_OUT"."Feature_28" * -0.13218791158615573 + "ADS_sca_1_OUT"."Feature_29" * -0.272971048775739 AS "PC2", "ADS_sca_1_OUT"."Feature_0" * -0.005390218995132989 + "ADS_sca_1_OUT"."Feature_1" * 0.07559188324769446 + "ADS_sca_1_OUT"."Feature_2" * -0.006630034456413209 + "ADS_sca_1_OUT"."Feature_3" * 0.03307539547257528 + "ADS_sca_1_OUT"."Feature_4" * -0.11408606276317496 + "ADS_sca_1_OUT"."Feature_5" * -0.08243204451061603 + "ADS_sca_1_OUT"."Feature_6" * -0.0034631546527687713 + "ADS_sca_1_OUT"."Feature_7" * -0.025369092650600944 + "ADS_sca_1_OUT"."Feature_8" * -0.03545304892446201 + "ADS_sca_1_OUT"."Feature_9" * -0.033460358570260834 + "ADS_sca_1_OUT"."Feature_10" * 0.2702606607101766 + "ADS_sca_1_OUT"."Feature_11" * 0.38895800748244913 + "ADS_sca_1_OUT"."Feature_12" * 0.265539009843534 + "ADS_sca_1_OUT"."Feature_13" * 0.22087996051915645 + "ADS_sca_1_OUT"."Feature_14" * 0.30083207092269965 + "ADS_sca_1_OUT"."Feature_15" * 0.14870995945035803 + "ADS_sca_1_OUT"."Feature_16" * 0.15617929564803443 + "ADS_sca_1_OUT"."Feature_17" * 0.20527006718186183 + "ADS_sca_1_OUT"."Feature_18" * 0.2727509234513494 + "ADS_sca_1_OUT"."Feature_19" * 0.20491559570513843 + "ADS_sca_1_OUT"."Feature_20" * -0.04651017214243354 + "ADS_sca_1_OUT"."Feature_21" * -0.030620841495121995 + "ADS_sca_1_OUT"."Feature_22" * -0.04908306111118616 + "ADS_sca_1_OUT"."Feature_23" * -0.009372073109054205 + "ADS_sca_1_OUT"."Feature_24" * -0.2716162372345253 + "ADS_sca_1_OUT"."Feature_25" * -0.2404036986894661 + "ADS_sca_1_OUT"."Feature_26" * -0.17728088382408685 + "ADS_sca_1_OUT"."Feature_27" * -0.1759158149922438 + "ADS_sca_1_OUT"."Feature_28" * -0.2741603341993864 + "ADS_sca_1_OUT"."Feature_29" * -0.23752113369727115 AS "PC3", "ADS_sca_1_OUT"."Feature_0" * 0.032221335163821266 + "ADS_sca_1_OUT"."Feature_1" * -0.5981813597757002 + "ADS_sca_1_OUT"."Feature_2" * 0.03274684636104511 + "ADS_sca_1_OUT"."Feature_3" * 0.051633089886458795 + "ADS_sca_1_OUT"."Feature_4" * 0.1894886130432605 + "ADS_sca_1_OUT"."Feature_5" * 0.025213175765623888 + "ADS_sca_1_OUT"."Feature_6" * 0.020686309537882627 + "ADS_sca_1_OUT"."Feature_7" * 0.06556536720486286 + "ADS_sca_1_OUT"."Feature_8" * 0.07581347598658743 + "ADS_sca_1_OUT"."Feature_9" * 0.039784025514564836 + "ADS_sca_1_OUT"."Feature_10" * 0.12103267182656124 + "ADS_sca_1_OUT"."Feature_11" * -0.3253456701348236 + "ADS_sca_1_OUT"."Feature_12" * 0.10403160451161235 + "ADS_sca_1_OUT"."Feature_13" * 0.13096113686887037 + "ADS_sca_1_OUT"."Feature_14" * 0.08529767241873171 + "ADS_sca_1_OUT"."Feature_15" * -0.05050256477826615 + "ADS_sca_1_OUT"."Feature_16" * -0.013858636956129685 + "ADS_sca_1_OUT"."Feature_17" * 0.051636470783270175 + "ADS_sca_1_OUT"."Feature_18" * 0.07845623611137836 + "ADS_sca_1_OUT"."Feature_19" * -0.01800224834117843 + "ADS_sca_1_OUT"."Feature_20" * 0.01340810356608377 + "ADS_sca_1_OUT"."Feature_21" * -0.6255117301896479 + "ADS_sca_1_OUT"."Feature_22" * 0.008890529878086695 + "ADS_sca_1_OUT"."Feature_23" * 0.03206575052269575 + "ADS_sca_1_OUT"."Feature_24" * 0.06218614198553856 + "ADS_sca_1_OUT"."Feature_25" * -0.10208562087194813 + "ADS_sca_1_OUT"."Feature_26" * -0.07404407884842225 + "ADS_sca_1_OUT"."Feature_27" * -0.001759497416926437 + "ADS_sca_1_OUT"."Feature_28" * -0.020695280701914644 + "ADS_sca_1_OUT"."Feature_29" * -0.09172275305484348 AS "PC4", "ADS_sca_1_OUT"."Feature_0" * -0.03583586526438166 + "ADS_sca_1_OUT"."Feature_1" * 0.10668556494546105 + "ADS_sca_1_OUT"."Feature_2" * -0.03580063384563657 + "ADS_sca_1_OUT"."Feature_3" * -0.01186523434650828 + "ADS_sca_1_OUT"."Feature_4" * 0.3472926626357166 + "ADS_sca_1_OUT"."Feature_5" * -0.01279638595762936 + "ADS_sca_1_OUT"."Feature_6" * -0.09686339610083955 + "ADS_sca_1_OUT"."Feature_7" * 0.030262925273250155 + "ADS_sca_1_OUT"."Feature_8" * 0.2919734843378978 + "ADS_sca_1_OUT"."Feature_9" * 0.024129207305013743 + "ADS_sca_1_OUT"."Feature_10" * 0.13199923484872902 + "ADS_sca_1_OUT"."Feature_11" * 0.21157425482633896 + "ADS_sca_1_OUT"."Feature_12" * 0.10248820501553313 + "ADS_sca_1_OUT"."Feature_13" * 0.10874553311679416 + "ADS_sca_1_OUT"."Feature_14" * 0.2544812741423084 + "ADS_sca_1_OUT"."Feature_15" * -0.2746684061050128 + "ADS_sca_1_OUT"."Feature_16" * -0.3540979971305165 + "ADS_sca_1_OUT"."Feature_17" * -0.19847452634975313 + "ADS_sca_1_OUT"."Feature_18" * 0.24138551945384004 + "ADS_sca_1_OUT"."Feature_19" * -0.27461076869519324 + "ADS_sca_1_OUT"."Feature_20" * 0.00438970711748895 + "ADS_sca_1_OUT"."Feature_21" * 0.15304890309187444 + "ADS_sca_1_OUT"."Feature_22" * -0.0062975700081063036 + "ADS_sca_1_OUT"."Feature_23" * 0.02449023484088534 + "ADS_sca_1_OUT"."Feature_24" * 0.3212354882834555 + "ADS_sca_1_OUT"."Feature_25" * -0.10048955127484832 + "ADS_sca_1_OUT"."Feature_26" * -0.18301792369043487 + "ADS_sca_1_OUT"."Feature_27" * -0.04092825303637145 + "ADS_sca_1_OUT"."Feature_28" * 0.25478475230789854 + "ADS_sca_1_OUT"."Feature_29" * -0.09149620178238 AS "PC5", "ADS_sca_1_OUT"."Feature_0" * 0.02578277051115795 + "ADS_sca_1_OUT"."Feature_1" * -0.03488683150504261 + "ADS_sca_1_OUT"."Feature_2" * 0.02337879624440808 + "ADS_sca_1_OUT"."Feature_3" * 5.311632734197533e-05 + "ADS_sca_1_OUT"."Feature_4" * -0.2831599190004263 + "ADS_sca_1_OUT"."Feature_5" * -0.0182359166955445 + "ADS_sca_1_OUT"."Feature_6" * -0.00606493341165939 + "ADS_sca_1_OUT"."Feature_7" * -0.04670696605311275 + "ADS_sca_1_OUT"."Feature_8" * 0.3517020411433183 + "ADS_sca_1_OUT"."Feature_9" * -0.1269409741371922 + "ADS_sca_1_OUT"."Feature_10" * -0.044449703384920235 + "ADS_sca_1_OUT"."Feature_11" * -0.05130045078703252 + "ADS_sca_1_OUT"."Feature_12" * -0.015070584315048681 + "ADS_sca_1_OUT"."Feature_13" * -0.06214481224260445 + "ADS_sca_1_OUT"."Feature_14" * -0.300750288327894 + "ADS_sca_1_OUT"."Feature_15" * 0.05383577001601851 + "ADS_sca_1_OUT"."Feature_16" * 0.07247828206101359 + "ADS_sca_1_OUT"."Feature_17" * -0.0041762502813039925 + "ADS_sca_1_OUT"."Feature_18" * 0.4992859784606968 + "ADS_sca_1_OUT"."Feature_19" * -0.05341104577876922 + "ADS_sca_1_OUT"."Feature_20" * 0.004227623567498342 + "ADS_sca_1_OUT"."Feature_21" * -0.04884501480701089 + "ADS_sca_1_OUT"."Feature_22" * 0.01367243473013742 + "ADS_sca_1_OUT"."Feature_23" * -0.025887660162104482 + "ADS_sca_1_OUT"."Feature_24" * -0.3595690657677812 + "ADS_sca_1_OUT"."Feature_25" * 0.03179116825393049 + "ADS_sca_1_OUT"."Feature_26" * 0.02848854626295261 + "ADS_sca_1_OUT"."Feature_27" * -0.024367902666235317 + "ADS_sca_1_OUT"."Feature_28" * 0.5192968623188767 + "ADS_sca_1_OUT"."Feature_29" * -0.1046011433247024 AS "PC6", "ADS_sca_1_OUT"."Feature_0" * -0.12457908312011272 + "ADS_sca_1_OUT"."Feature_1" * 0.043675631031051536 + "ADS_sca_1_OUT"."Feature_2" * -0.11727029149412173 + "ADS_sca_1_OUT"."Feature_3" * -0.0486941022474712 + "ADS_sca_1_OUT"."Feature_4" * -0.17248329424325504 + "ADS_sca_1_OUT"."Feature_5" * -0.01162088057329262 + "ADS_sca_1_OUT"."Feature_6" * -0.1260478446835378 + "ADS_sca_1_OUT"."Feature_7" * -0.19103591169799236 + "ADS_sca_1_OUT"."Feature_8" * -0.07463523147781233 + "ADS_sca_1_OUT"."Feature_9" * 0.25365336934237714 + "ADS_sca_1_OUT"."Feature_10" * 0.31534600516947087 + "ADS_sca_1_OUT"."Feature_11" * -0.20406041132463007 + "ADS_sca_1_OUT"."Feature_12" * 0.3129999653561438 + "ADS_sca_1_OUT"."Feature_13" * 0.36739957495731773 + "ADS_sca_1_OUT"."Feature_14" * -0.168697058125119 + "ADS_sca_1_OUT"."Feature_15" * 0.03886218090385512 + "ADS_sca_1_OUT"."Feature_16" * -0.17964511528914745 + "ADS_sca_1_OUT"."Feature_17" * -0.3603043202671293 + "ADS_sca_1_OUT"."Feature_18" * -0.04631020413416123 + "ADS_sca_1_OUT"."Feature_19" * 0.19111982295929997 + "ADS_sca_1_OUT"."Feature_20" * -0.0005144819631284318 + "ADS_sca_1_OUT"."Feature_21" * 0.030363622992810892 + "ADS_sca_1_OUT"."Feature_22" * 0.008358940593792955 + "ADS_sca_1_OUT"."Feature_23" * 0.0811779959920401 + "ADS_sca_1_OUT"."Feature_24" * -0.08858951896614652 + "ADS_sca_1_OUT"."Feature_25" * 0.13376257671354125 + "ADS_sca_1_OUT"."Feature_26" * -0.0655332998308909 + "ADS_sca_1_OUT"."Feature_27" * -0.1772937084691342 + "ADS_sca_1_OUT"."Feature_28" * 0.06513011232874036 + "ADS_sca_1_OUT"."Feature_29" * 0.369067836821968 AS "PC7" 
FROM "ADS_sca_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 3.4251566511342446) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.4670081801123662) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 3.5956619214792442) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -3.762517044075053) THEN 9 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -2.126588302725255) THEN 17 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.9747919000192689) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.028713402284210987) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -1.3198299803240567) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.6969687099687224) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -1.7119624639241355) THEN 47 ELSE 48 END ELSE 42 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.0767973747671626) THEN 43 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.774617245411993) THEN 49 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.09258556081263296) THEN 51 ELSE 52 END END END END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -3.2926658449390334) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.8149207074490015) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.6008151892319519) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.3881842160675756) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.8365563885115364) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.7481515224535695) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.021645784044974383) THEN 45 ELSE 46 END ELSE 40 END ELSE 28 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.8918270946701704) THEN 29 ELSE 30 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.12606224936832158) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.7197698484899991) THEN 31 ELSE 32 END ELSE 22 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.9568657922278276) THEN 15 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.626191122200246) THEN 23 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 2.6292391995408253) THEN 33 ELSE 34 END END END END END ELSE 2 END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 42 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 45 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 46 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 47 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 48 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 49 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 51 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 52 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_0" AS "P_0", "DT_node_data"."P_1" AS "P_1", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"RF_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 1e-100) THEN "DT_Output"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 1e-100) THEN "DT_Output"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.348749663394548) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -4.276896632507564) THEN 3 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.37199519620547516) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 1.748363220877816) THEN 13 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.7393970354152637) THEN 19 ELSE 20 END END ELSE 8 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 1.1729022765086465) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.7939168395213919) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.5973323294033213) THEN 15 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 1.571019171140538) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.6119466325029495) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.9354569996276504) THEN 23 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.6192798526499059) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.6303131333854906) THEN 31 ELSE 32 END ELSE 28 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.1430464601176702) THEN 25 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.1662097084996901) THEN 29 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.18863758820110546) THEN 33 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.4875364324777518) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 2.450091132953089) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.03284599123928451) THEN 39 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.42559239194089604) THEN 41 ELSE 42 END END ELSE 38 END ELSE 36 END END END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.4862166279023348) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 38 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 42 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_0" AS "P_0", "DT_node_data_1"."P_1" AS "P_1", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"RF_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_1"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 1e-100) THEN "DT_Output_1"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_1"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 1e-100) THEN "DT_Output_1"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.4932511949255247) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.9782962718037568) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.6576262059162672) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.2608383189368836) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.02121248511769612) THEN 25 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.038770452843184) THEN 33 ELSE 34 END END ELSE 16 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.6212341766180125) THEN 17 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.15485681252634237) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.190593135951726) THEN 35 ELSE 36 END ELSE 28 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.3723910064961968) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 1.2977508022071156) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.11095752680680318) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 5.384890496574394) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -2.0669228083150486) THEN 29 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.7040571563919464) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.333683155831456) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.859521313138772) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.11751833617358487) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.5995214093133701) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.3280001246423985) THEN 57 ELSE 58 END ELSE 54 END ELSE 50 END ELSE 44 END END END ELSE 20 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 4.143593476174988) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.865470478171767) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.6543731738731928) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 1.222685760830291) THEN 45 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.4531778097808735) THEN 51 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.7546027687894515) THEN 55 ELSE 56 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.6313011909864151) THEN 47 ELSE 48 END END ELSE 32 END ELSE 22 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.5538081788355134) THEN 13 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.6712205671963021) THEN 23 ELSE 24 END END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 9 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 42 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 44 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 45 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 47 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 48 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 50 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 51 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 54 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 55 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 56 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 57 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 58 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_0" AS "P_0", "DT_node_data_2"."P_1" AS "P_1", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"RF_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_2"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 1e-100) THEN "DT_Output_2"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_2"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 1e-100) THEN "DT_Output_2"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.5543108996600209) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.0815611007445969) THEN 3 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.3423368905906594) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.6910356804014159) THEN 11 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -3.2623318390897347) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.914508289468224) THEN 29 ELSE 30 END ELSE 20 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.6602577632589665) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -2.5161463630297405) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -3.5200578885826994) THEN 31 ELSE 32 END ELSE 22 END ELSE 14 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 3.014864538468431) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.5908818854660909) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.0147564180787891) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.3881842160675756) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.3198772792752738) THEN 33 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.6416148895028677) THEN 39 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.4396207407941188) THEN 43 ELSE 44 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.9984735736961868) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.9843442913896342) THEN 41 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.2514127269833558) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 3.2926421784735904) THEN 47 ELSE 48 END ELSE 46 END END ELSE 36 END END ELSE 16 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.3360920039582608) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.5779715294447156) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.7339856224988466) THEN 27 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.6949153356986524) THEN 37 ELSE 38 END END END END ELSE 6 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 38 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 44 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 46 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 47 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 48 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_0" AS "P_0", "DT_node_data_3"."P_1" AS "P_1", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"RF_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_3"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 1e-100) THEN "DT_Output_3"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_3"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 1e-100) THEN "DT_Output_3"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.7804388369895983) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.7682867127789746) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.3637223682401018) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.7135478462169677) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.0767973747671626) THEN 11 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.5882644615940724) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -2.5161463630297405) THEN 27 ELSE 28 END ELSE 18 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.8843813278321946) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -3.001009273496812) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.009519770637098052) THEN 21 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -3.3543251279401267) THEN 29 ELSE 30 END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 3.901594201233204) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 3.164030663336302) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.112511314308668) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.7526243241868563) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.30488308566453304) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -1.205918800994166) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.033819408267675925) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 2.630372654893712) THEN 41 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.7945323172200318) THEN 43 ELSE 44 END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 2.2986347666283082) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 3.159686008237632) THEN 25 ELSE 26 END END ELSE 10 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 44 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."P_0" AS "P_0", "DT_node_data_4"."P_1" AS "P_1", "DT_node_data_4"."D" AS "D", "DT_node_data_4"."DP" AS "DP" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"RF_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_4"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 1e-100) THEN "DT_Output_4"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_4"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 1e-100) THEN "DT_Output_4"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.4670081801123662) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -2.7898194628162174) THEN 3 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.8083844881138431) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.1690705588804946) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.3256685955382697) THEN 19 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 3.3584254634733557) THEN 29 ELSE 30 END END ELSE 12 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.36476351747970304) THEN 13 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.4926202069485329) THEN 21 ELSE 22 END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 4.143593476174988) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.8112553464277614) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -1.1787349509055116) THEN 15 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.2034311302793856) THEN 23 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.3864452779181443) THEN 31 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.6292642669994493) THEN 35 ELSE 36 END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 3.165720996857452) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.737360882645247) THEN 25 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.767417474612255) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -1.528970333958772) THEN 27 ELSE 28 END END END ELSE 6 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."P_0" AS "P_0", "DT_node_data_5"."P_1" AS "P_1", "DT_node_data_5"."D" AS "D", "DT_node_data_5"."DP" AS "DP" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"RF_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_5"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 1e-100) THEN "DT_Output_5"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_5"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 1e-100) THEN "DT_Output_5"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.4745708658051148) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -2.7898194628162174) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.8899819453473308) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.5457102429743245) THEN 7 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.13476057105708095) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.599423947006009) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.900485996649968) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.7171863560389495) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.8658799065791825) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.32777746253852663) THEN 25 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.1141301347403504) THEN 29 ELSE 30 END END ELSE 22 END ELSE 18 END ELSE 14 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.41943491443104225) THEN 15 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.12331274621414788) THEN 19 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.0682329710158083) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.7846706654491302) THEN 27 ELSE 28 END ELSE 24 END END END END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 4 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."P_0" AS "P_0", "DT_node_data_6"."P_1" AS "P_1", "DT_node_data_6"."D" AS "D", "DT_node_data_6"."DP" AS "DP" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"RF_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_6"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 1e-100) THEN "DT_Output_6"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_6"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 1e-100) THEN "DT_Output_6"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.44987452865649213) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.017839102043370997) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -1.8457467116914812) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.41350000840318424) THEN 13 ELSE 14 END ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.3294363119806418) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.1451018833475226) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.8752931251883556) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.8091687423399455) THEN 21 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.2107915348052798) THEN 29 ELSE 30 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -1.3548549911383736) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 2.132623614915833) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -3.9833155586209408) THEN 25 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 2.6688780261226492) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.6333422479302753) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 1.600755935907877) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.8110418079085279) THEN 59 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 1.0585396207296223) THEN 69 ELSE 70 END END ELSE 48 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 2.050273994356343) THEN 49 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.7393970354152637) THEN 61 ELSE 62 END END END ELSE 32 END END ELSE 18 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 1.4135808827780798) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 3.498338903560686) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.9577408163189538) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.9287908136995346) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.354996992084023) THEN 39 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.15436991869304914) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.0031375356685492545) THEN 63 ELSE 64 END ELSE 52 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 1.0826391122207557) THEN 41 ELSE 42 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.07481800361619816) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.8074951556632856) THEN 43 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.20115159092836368) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.145210148403759) THEN 65 ELSE 66 END ELSE 54 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 1.2395360026015003) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.2419199565051101) THEN 55 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 2.324191324789072) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.020088452012357663) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.6025011658001663) THEN 73 ELSE 74 END ELSE 72 END ELSE 68 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.1569961992182325) THEN 57 ELSE 58 END END END END ELSE 20 END ELSE 12 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 42 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 48 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 49 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 52 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 54 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 55 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 57 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 58 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 59 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 61 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 62 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 63 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 64 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 65 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 66 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 68 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 69 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 70 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 72 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 73 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 74 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."P_0" AS "P_0", "DT_node_data_7"."P_1" AS "P_1", "DT_node_data_7"."D" AS "D", "DT_node_data_7"."DP" AS "DP" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"RF_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_7"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 1e-100) THEN "DT_Output_7"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_7"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 1e-100) THEN "DT_Output_7"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.58519972597939) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -2.363893170890231) THEN 3 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.4140437436014919) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.5537573595618863) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.29685925337807) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.4305840957702575) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 2.2671432720072424) THEN 31 ELSE 32 END ELSE 22 END END ELSE 8 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 2.2084789295272187) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 1.5660029917876364) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.4745708658051148) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 1.3973661328211409) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.648374231500313) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -3.380115279490012) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 1.746621103412621) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.063079255594004) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.6899187967844211) THEN 53 ELSE 54 END ELSE 50 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -4.151206838078856) THEN 43 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.6016934258774669) THEN 51 ELSE 52 END END END ELSE 24 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.737360882645247) THEN 25 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.7715997099523993) THEN 35 ELSE 36 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.1969552122932976) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.4897067007024591) THEN 27 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.2734851937850229) THEN 37 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.20225869567918553) THEN 45 ELSE 46 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.8718307133105043) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.2169038304648354) THEN 39 ELSE 40 END ELSE 30 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.2688844340035592) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 45 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 46 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 47 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 48 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 50 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 51 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 52 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 53 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 54 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."P_0" AS "P_0", "DT_node_data_8"."P_1" AS "P_1", "DT_node_data_8"."D" AS "D", "DT_node_data_8"."DP" AS "DP" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"RF_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_8"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 1e-100) THEN "DT_Output_8"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_8"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 1e-100) THEN "DT_Output_8"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.2370436451478234) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -3.385888378019364) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.6425088758917226) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.15784812707240495) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.8064749560976308) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 3.939717059191713) THEN 23 ELSE 24 END END ELSE 8 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.9522314331209806) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.4747374905681745) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.28355578005190973) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.550765724987762) THEN 33 ELSE 34 END ELSE 26 END ELSE 16 END ELSE 10 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 3.014864538468431) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 2.1629113651770697) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -1.205918800994166) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -1.2377139345468224) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.332954041199089) THEN 29 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.344586440200428) THEN 35 ELSE 36 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.8679265036172283) THEN 19 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.6260721692859164) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.6507053530180319) THEN 37 ELSE 38 END ELSE 32 END END END ELSE 6 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."P_0" AS "P_0", "DT_node_data_9"."P_1" AS "P_1", "DT_node_data_9"."D" AS "D", "DT_node_data_9"."DP" AS "DP" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"RF_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_9"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 1e-100) THEN "DT_Output_9"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_9"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 1e-100) THEN "DT_Output_9"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_9"), 
"RF_0" AS 
(SELECT "RF_esu_0"."KEY" AS "KEY", "RF_esu_0"."Score_0" AS "Score_0", "RF_esu_0"."Proba_0" AS "Proba_0", "RF_esu_0"."LogProba_0" AS "LogProba_0", "RF_esu_0"."Score_1" AS "Score_1", "RF_esu_0"."Proba_1" AS "Proba_1", "RF_esu_0"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_Model_0"."KEY" AS "KEY", CAST("RF_Model_0"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_0"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_0"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_0"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_0"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_0"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_0" UNION ALL SELECT "RF_Model_1"."KEY" AS "KEY", CAST("RF_Model_1"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_1"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_1"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_1"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_1"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_1"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_1" UNION ALL SELECT "RF_Model_2"."KEY" AS "KEY", CAST("RF_Model_2"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_2"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_2"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_2"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_2"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_2"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_2" UNION ALL SELECT "RF_Model_3"."KEY" AS "KEY", CAST("RF_Model_3"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_3"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_3"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_3"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_3"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_3"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_3" UNION ALL SELECT "RF_Model_4"."KEY" AS "KEY", CAST("RF_Model_4"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_4"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_4"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_4"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_4"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_4"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_4" UNION ALL SELECT "RF_Model_5"."KEY" AS "KEY", CAST("RF_Model_5"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_5"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_5"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_5"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_5"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_5"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_5" UNION ALL SELECT "RF_Model_6"."KEY" AS "KEY", CAST("RF_Model_6"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_6"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_6"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_6"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_6"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_6"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_6" UNION ALL SELECT "RF_Model_7"."KEY" AS "KEY", CAST("RF_Model_7"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_7"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_7"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_7"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_7"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_7"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_7" UNION ALL SELECT "RF_Model_8"."KEY" AS "KEY", CAST("RF_Model_8"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_8"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_8"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_8"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_8"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_8"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_8" UNION ALL SELECT "RF_Model_9"."KEY" AS "KEY", CAST("RF_Model_9"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_9"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_9"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_9"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_9"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_9"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_9") AS "RF_esu_0"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.8995026512308378) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.5692701933755916) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.758779051043495) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 1.4775950742304425) THEN 15 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -4.169306270595888) THEN 23 ELSE 24 END END ELSE 8 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -2.2563135825183513) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.9504458511518787) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.2786730892399478) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.5562483745999416) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -1.4549038876821467) THEN 27 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.932625275780068) THEN 31 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.10023678082243415) THEN 35 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 2.041977418554873) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.5848402939934597) THEN 43 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.2927338335807546) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.168876033109851) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 1.0177728225298706) THEN 49 ELSE 50 END END END ELSE 40 END END END END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.020619253854355715) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.5094024998600015) THEN 11 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.1026204150711795) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.9165890734390276) THEN 29 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.39744707246852784) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.2709883137821529) THEN 37 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.0767973747671626) THEN 41 ELSE 42 END END ELSE 34 END END ELSE 22 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 4.143593476174988) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 8 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 42 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 47 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 48 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 49 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 50 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."P_0" AS "P_0", "DT_node_data_10"."P_1" AS "P_1", "DT_node_data_10"."D" AS "D", "DT_node_data_10"."DP" AS "DP" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"RF_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_10"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 1e-100) THEN "DT_Output_10"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_10"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 1e-100) THEN "DT_Output_10"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 3.164030663336302) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 1.1672874303846257) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.607494886254823) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -6.075917688860867) THEN 13 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -3.5847420015110476) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 1.0449620605931345) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.4670081801123662) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.4990799925035952) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.25266367872924983) THEN 33 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -2.451441708010649) THEN 43 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.8435885169766913) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.4265444173949535) THEN 59 ELSE 60 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.9899501414975332) THEN 61 ELSE 62 END END END END END ELSE 16 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.0365119431853431) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.0278010972264908) THEN 17 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.9304162110257848) THEN 25 ELSE 26 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 1.9277230663345568) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.1715886256647063) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.27145088206550005) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 0.7626568735137024) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.762909285264638) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.03674181911927732) THEN 53 ELSE 54 END ELSE 46 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.6151005274455873) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.6043739774192778) THEN 55 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.28829630707256965) THEN 63 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.2925751470621984) THEN 67 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.07184039975179847) THEN 69 ELSE 70 END END END END ELSE 48 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 3.0202388612310456) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 2.2140736853013685) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.1252148305281853) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.2886390282442468) THEN 57 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.4762283160169434) THEN 65 ELSE 66 END END ELSE 50 END ELSE 40 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.9081940866534272) THEN 41 ELSE 42 END END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -1.5651354207265598) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.55604830682238) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 42 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 46 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 48 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 50 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 53 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 54 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 55 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 57 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 59 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 60 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 61 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 62 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 63 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 65 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 66 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 67 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 69 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 70 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."P_0" AS "P_0", "DT_node_data_11"."P_1" AS "P_1", "DT_node_data_11"."D" AS "D", "DT_node_data_11"."DP" AS "DP" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"RF_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_11"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 1e-100) THEN "DT_Output_11"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_11"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 1e-100) THEN "DT_Output_11"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 1.561070078126807) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.901233668142618) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.6417334652579281) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.7056236735620957) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.16370731648836032) THEN 23 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.5256712404125201) THEN 33 ELSE 34 END END ELSE 16 END ELSE 8 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.5640929974985199) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -3.81526494451838) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 1.9602238332799191) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.04495022769907864) THEN 27 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.304155004024474) THEN 35 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.7398077107222194) THEN 41 ELSE 42 END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.549486319042248) THEN 19 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.5713771469915891) THEN 29 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.0008372662822919569) THEN 37 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.6659518739902692) THEN 43 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.7628557433829806) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.8315537600678713) THEN 47 ELSE 48 END ELSE 46 END END END END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 0.15311587860244563) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.6805834811283048) THEN 11 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.2998541113606148) THEN 21 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 2.3431514638574447) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 2.41104111733227) THEN 39 ELSE 40 END ELSE 32 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.15253642252158) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 42 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 46 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 47 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 48 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."P_0" AS "P_0", "DT_node_data_12"."P_1" AS "P_1", "DT_node_data_12"."D" AS "D", "DT_node_data_12"."DP" AS "DP" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"RF_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_12"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 1e-100) THEN "DT_Output_12"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_12"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 1e-100) THEN "DT_Output_12"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 1.2320191893487156) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.1430464601176702) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -1.3169156391740775) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.4921528788679692) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -6.075917688860867) THEN 15 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.3423368905906594) THEN 21 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -2.427395853059758) THEN 31 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.980932067764224) THEN 41 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 1.0023791157713815) THEN 47 ELSE 48 END END END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.11095752680680318) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.2741179427843019) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.5533451865263853) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.40565311160209927) THEN 25 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.1658364178274941) THEN 33 ELSE 34 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 3.164030663336302) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -1.205918800994166) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.6652295467940263) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.587859594121934) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -2.2329888117763965) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.9737673968032496) THEN 45 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.0682329710158083) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -1.4821065964567581) THEN 51 ELSE 52 END ELSE 50 END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.21091515674404263) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.838523906534971) THEN 39 ELSE 40 END ELSE 30 END END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -1.9319023543539324) THEN CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -2.1645553554266894) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 6 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 44 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 45 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 47 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 48 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 50 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 51 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 52 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."P_0" AS "P_0", "DT_node_data_13"."P_1" AS "P_1", "DT_node_data_13"."D" AS "D", "DT_node_data_13"."DP" AS "DP" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"RF_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_13"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 1e-100) THEN "DT_Output_13"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_13"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 1e-100) THEN "DT_Output_13"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.5425964302625343) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 1.2925451386664464) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.2441677141592614) THEN 7 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.3971277409424936) THEN 15 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.7067417452260232) THEN 27 ELSE 28 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.2540400902145653) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.4808711216695933) THEN 17 ELSE 18 END ELSE 10 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 1.2212957233779103) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -1.1537056442414984) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.5457245315827284) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -1.521491432979353) THEN 29 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.6242769998359265) THEN 39 ELSE 40 END END ELSE 20 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 1.7382118780737907) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -1.8567546995523123) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.1282046057352657) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -1.934179932738024) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.6464654339959404) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -1.9029433244184664) THEN 51 ELSE 52 END ELSE 48 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= 1.3868938573533982) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.5780006081031854) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.8946489336404639) THEN CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.7916873819387059) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -0.9793239981657882) THEN 63 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.03249454528355592) THEN 67 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC7" <= -0.8740619779242438) THEN 71 ELSE 72 END END END ELSE 58 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.0944358273191512) THEN 59 ELSE 60 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.523097990504505) THEN 55 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.7628557433829806) THEN CASE WHEN ("ADS_pre_1_OUT"."PC5" <= 0.01685848727004441) THEN 65 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 1.8315537600678713) THEN 69 ELSE 70 END END ELSE 62 END END END ELSE 44 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.491175211716755) THEN 33 ELSE 34 END END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 1.1025210669781849) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.6805834811283048) THEN 23 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -1.2373814958581777) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -0.8718307133105043) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.4927073456720944) THEN 37 ELSE 38 END ELSE 26 END END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 44 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 45 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 46 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 48 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 51 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 52 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 55 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 58 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 59 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 60 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 62 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 63 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 65 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 67 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 69 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 70 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 71 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 72 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."P_0" AS "P_0", "DT_node_data_14"."P_1" AS "P_1", "DT_node_data_14"."D" AS "D", "DT_node_data_14"."DP" AS "DP" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"RF_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_14"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 1e-100) THEN "DT_Output_14"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_14"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 1e-100) THEN "DT_Output_14"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -1.8414658551032863) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.9754553617852256) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= 1.9298913419644603) THEN 7 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= -2.363893170890231) THEN 13 ELSE 14 END END ELSE 4 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC6" <= -0.4999663236883161) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.04773558034761612) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -1.3888763298654234) THEN 15 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.41071395518357784) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 3.879772220384511) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 2.1629113651770697) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.7309060104654008) THEN 33 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 0.7805451898593021) THEN 41 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= 0.5412737965473708) THEN 45 ELSE 46 END END END ELSE 26 END ELSE 18 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -0.11112288370091132) THEN CASE WHEN ("ADS_pre_1_OUT"."PC1" <= -2.3423368905906594) THEN CASE WHEN ("ADS_pre_1_OUT"."PC6" <= 0.7167569137533903) THEN 27 ELSE CASE WHEN ("ADS_pre_1_OUT"."PC5" <= -2.790187614292486) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC2" <= -0.6748181430699702) THEN 29 ELSE 30 END END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC3" <= 0.3029171552510809) THEN CASE WHEN ("ADS_pre_1_OUT"."PC2" <= 3.165720996857452) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -1.8572955225735697) THEN CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -1.9225924103883372) THEN 43 ELSE 44 END ELSE 38 END ELSE CASE WHEN ("ADS_pre_1_OUT"."PC4" <= -0.5460424869945916) THEN 39 ELSE 40 END END ELSE 22 END END END END AS node_id_2 
FROM "ADS_pre_1_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 44 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 45 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 46 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."P_0" AS "P_0", "DT_node_data_15"."P_1" AS "P_1", "DT_node_data_15"."D" AS "D", "DT_node_data_15"."DP" AS "DP" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"RF_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", "DT_Output_15"."P_0" AS "Proba_0", log(CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 1e-100) THEN "DT_Output_15"."P_0" ELSE 1e-100 END) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "Score_1", "DT_Output_15"."P_1" AS "Proba_1", log(CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 1e-100) THEN "DT_Output_15"."P_1" ELSE 1e-100 END) AS "LogProba_1" 
FROM "DT_Output_15"), 
"RF_1" AS 
(SELECT "RF_esu_1"."KEY" AS "KEY", "RF_esu_1"."Score_0" AS "Score_0", "RF_esu_1"."Proba_0" AS "Proba_0", "RF_esu_1"."LogProba_0" AS "LogProba_0", "RF_esu_1"."Score_1" AS "Score_1", "RF_esu_1"."Proba_1" AS "Proba_1", "RF_esu_1"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_Model_10"."KEY" AS "KEY", CAST("RF_Model_10"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_10"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_10"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_10"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_10"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_10"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_10" UNION ALL SELECT "RF_Model_11"."KEY" AS "KEY", CAST("RF_Model_11"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_11"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_11"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_11"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_11"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_11"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_11" UNION ALL SELECT "RF_Model_12"."KEY" AS "KEY", CAST("RF_Model_12"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_12"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_12"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_12"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_12"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_12"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_12" UNION ALL SELECT "RF_Model_13"."KEY" AS "KEY", CAST("RF_Model_13"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_13"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_13"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_13"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_13"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_13"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_13" UNION ALL SELECT "RF_Model_14"."KEY" AS "KEY", CAST("RF_Model_14"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_14"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_14"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_14"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_14"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_14"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_14" UNION ALL SELECT "RF_Model_15"."KEY" AS "KEY", CAST("RF_Model_15"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_Model_15"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_Model_15"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_Model_15"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_Model_15"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_Model_15"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_Model_15") AS "RF_esu_1"), 
"RF" AS 
(SELECT "RFbig_esu"."KEY" AS "KEY", "RFbig_esu"."Score_0" AS "Score_0", "RFbig_esu"."Proba_0" AS "Proba_0", "RFbig_esu"."LogProba_0" AS "LogProba_0", "RFbig_esu"."Score_1" AS "Score_1", "RFbig_esu"."Proba_1" AS "Proba_1", "RFbig_esu"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_0"."KEY" AS "KEY", CAST("RF_0"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_0"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_0"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_0"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_0"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_0"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_0" UNION ALL SELECT "RF_1"."KEY" AS "KEY", CAST("RF_1"."Score_0" AS DOUBLE) AS "Score_0", CAST("RF_1"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("RF_1"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("RF_1"."Score_1" AS DOUBLE) AS "Score_1", CAST("RF_1"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("RF_1"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM "RF_1") AS "RFbig_esu"), 
"RF_avg" AS 
(SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS DOUBLE) AS "Score_0", CAST("T"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("T"."LogProba_0" AS DOUBLE) AS "LogProba_0", CAST("T"."Score_1" AS DOUBLE) AS "Score_1", CAST("T"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("T"."LogProba_1" AS DOUBLE) AS "LogProba_1" 
FROM (SELECT "RF"."KEY" AS "KEY", avg(CAST("RF"."Score_0" AS DOUBLE)) AS "Score_0", avg(CAST("RF"."Proba_0" AS DOUBLE)) AS "Proba_0", CAST(NULL AS DOUBLE) AS "LogProba_0", avg(CAST("RF"."Score_1" AS DOUBLE)) AS "Score_1", avg(CAST("RF"."Proba_1" AS DOUBLE)) AS "Proba_1", CAST(NULL AS DOUBLE) AS "LogProba_1" 
FROM "RF" GROUP BY "RF"."KEY") AS "T"), 
orig_cte AS 
(SELECT "RF_avg"."KEY" AS "KEY", "RF_avg"."Score_0" AS "Score_0", "RF_avg"."Score_1" AS "Score_1", "RF_avg"."Proba_0" AS "Proba_0", "RF_avg"."Proba_1" AS "Proba_1", "RF_avg"."LogProba_0" AS "LogProba_0", "RF_avg"."LogProba_1" AS "LogProba_1", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba" 
FROM "RF_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", log(CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 1e-100) THEN arg_max_cte."Proba_0" ELSE 1e-100 END) AS "LogProba_0", log(CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 1e-100) THEN arg_max_cte."Proba_1" ELSE 1e-100 END) AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte