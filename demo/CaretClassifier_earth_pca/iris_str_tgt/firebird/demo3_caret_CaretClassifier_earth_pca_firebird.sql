-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretClassifier_earth_pca
-- Dataset : iris_str_tgt
-- Database : firebird


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "ADS_sca_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", (CAST("ADS"."Feature_0" AS DOUBLE PRECISION) - 5.8475) / 0.8305068311812104 AS "Feature_0", (CAST("ADS"."Feature_1" AS DOUBLE PRECISION) - 3.040833333333333) / 0.4410636176856331 AS "Feature_1", (CAST("ADS"."Feature_2" AS DOUBLE PRECISION) - 3.8441666666666667) / 1.7181578875675667 AS "Feature_2", (CAST("ADS"."Feature_3" AS DOUBLE PRECISION) - 1.245833333333333) / 0.7517929083403303 AS "Feature_3" 
FROM iris_str_tgt AS "ADS"), 
"ADS_pre_1_OUT" AS 
(SELECT "ADS_sca_1_OUT"."KEY" AS "KEY", "ADS_sca_1_OUT"."Feature_0" * -0.5263014514387969 + "ADS_sca_1_OUT"."Feature_1" * 0.2495430740050257 + "ADS_sca_1_OUT"."Feature_2" * -0.5822562654142306 + "ADS_sca_1_OUT"."Feature_3" * -0.5671972124538438 AS "PC1", "ADS_sca_1_OUT"."Feature_0" * 0.35797855187209515 + "ADS_sca_1_OUT"."Feature_1" * 0.9312088394674648 + "ADS_sca_1_OUT"."Feature_2" * 0.009350349831007576 + "ADS_sca_1_OUT"."Feature_3" * 0.06792661227568664 AS "PC2", "ADS_sca_1_OUT"."Feature_0" * 0.7268387018817979 + "ADS_sca_1_OUT"."Feature_1" * -0.2319858665682916 + "ADS_sca_1_OUT"."Feature_2" * -0.142090941958786 + "ADS_sca_1_OUT"."Feature_3" * -0.6306331924126783 AS "PC3", "ADS_sca_1_OUT"."Feature_0" * -0.2579993024404442 + "ADS_sca_1_OUT"."Feature_1" * 0.1294639302135427 + "ADS_sca_1_OUT"."Feature_2" * 0.8004376156560707 + "ADS_sca_1_OUT"."Feature_3" * -0.5253332981610163 AS "PC4" 
FROM "ADS_sca_1_OUT"), 
earth_input AS 
(SELECT "ADS_pre_1_OUT"."KEY" AS "KEY", CAST("ADS_pre_1_OUT"."PC1" AS DOUBLE PRECISION) AS "PC1", CAST("ADS_pre_1_OUT"."PC2" AS DOUBLE PRECISION) AS "PC2", CAST("ADS_pre_1_OUT"."PC3" AS DOUBLE PRECISION) AS "PC3", CAST("ADS_pre_1_OUT"."PC4" AS DOUBLE PRECISION) AS "PC4" 
FROM "ADS_pre_1_OUT"), 
earth_model_cte AS 
(SELECT earth_input."KEY" AS "KEY", 0.5652542518760738 * maxvalue(-0.017360589210772742 - earth_input."PC1", 0) + -2.085242044132094 * maxvalue(earth_input."PC3" - 0.2280435636734822, 0) + -3.39347876518004 * maxvalue(0.2280435636734822 - earth_input."PC3", 0) + -31.105006767610195 * maxvalue(earth_input."PC1" - 1.9193410513160611, 0) + 1.494746705263822 * maxvalue(earth_input."PC4" - 0.1047646025983524, 0) + 246.5306887644564 * maxvalue(earth_input."PC1" - -0.674082655111522, 0) + -211.2310381967572 * maxvalue(earth_input."PC1" - -0.8617563505066398, 0) + -26.468840824983282 AS "Score_CLASS_0", -8.992786819418152 * maxvalue(-0.017360589210772742 - earth_input."PC1", 0) + 15.849955443066829 * maxvalue(earth_input."PC3" - 0.2280435636734822, 0) + -230.48053812141384 * maxvalue(0.2280435636734822 - earth_input."PC3", 0) + 166.83394354349454 * maxvalue(earth_input."PC1" - 1.9193410513160611, 0) + -178.68275200317646 * maxvalue(earth_input."PC4" - 0.1047646025983524, 0) + -1777.9683172986129 * maxvalue(earth_input."PC1" - -0.674082655111522, 0) + 1642.202521023471 * maxvalue(earth_input."PC1" - -0.8617563505066398, 0) + 10.146013831606671 AS "Score_CLASS_1", 8.992786820244358 * maxvalue(-0.017360589210772742 - earth_input."PC1", 0) + -15.849955447247641 * maxvalue(earth_input."PC3" - 0.2280435636734822, 0) + 199.16131724211783 * maxvalue(0.2280435636734822 - earth_input."PC3", 0) + -10.365620460304324 * maxvalue(earth_input."PC1" - 1.9193410513160611, 0) + 182.7411014213087 * maxvalue(earth_input."PC4" - 0.1047646025983524, 0) + 1268.4777055539728 * maxvalue(earth_input."PC1" - -0.674082655111522, 0) + -1230.34115471282 * maxvalue(earth_input."PC1" - -0.8617563505066398, 0) + -10.146013832189793 AS "Score_CLASS_2" 
FROM earth_input), 
earth_model_cte_logistic AS 
(SELECT earth_model_cte."KEY" AS "KEY", earth_model_cte."Score_CLASS_0" AS "Score_CLASS_0", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -earth_model_cte."Score_CLASS_0")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -earth_model_cte."Score_CLASS_0")) ELSE -709.782712893384 END)) AS "Logistic_CLASS_0", earth_model_cte."Score_CLASS_1" AS "Score_CLASS_1", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -earth_model_cte."Score_CLASS_1")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -earth_model_cte."Score_CLASS_1")) ELSE -709.782712893384 END)) AS "Logistic_CLASS_1", earth_model_cte."Score_CLASS_2" AS "Score_CLASS_2", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -earth_model_cte."Score_CLASS_2")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -earth_model_cte."Score_CLASS_2")) ELSE -709.782712893384 END)) AS "Logistic_CLASS_2" 
FROM earth_model_cte), 
orig_cte AS 
(SELECT earth_model_cte_logistic."KEY" AS "KEY", earth_model_cte_logistic."Score_CLASS_0" AS "Score_CLASS_0", earth_model_cte_logistic."Score_CLASS_1" AS "Score_CLASS_1", earth_model_cte_logistic."Score_CLASS_2" AS "Score_CLASS_2", earth_model_cte_logistic."Logistic_CLASS_0" / (earth_model_cte_logistic."Logistic_CLASS_0" + earth_model_cte_logistic."Logistic_CLASS_1" + earth_model_cte_logistic."Logistic_CLASS_2") AS "Proba_CLASS_0", earth_model_cte_logistic."Logistic_CLASS_1" / (earth_model_cte_logistic."Logistic_CLASS_0" + earth_model_cte_logistic."Logistic_CLASS_1" + earth_model_cte_logistic."Logistic_CLASS_2") AS "Proba_CLASS_1", earth_model_cte_logistic."Logistic_CLASS_2" / (earth_model_cte_logistic."Logistic_CLASS_0" + earth_model_cte_logistic."Logistic_CLASS_1" + earth_model_cte_logistic."Logistic_CLASS_2") AS "Proba_CLASS_2", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_CLASS_2", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE PRECISION) AS "DecisionProba" 
FROM earth_model_cte_logistic), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 'CLASS_0' AS class, orig_cte."LogProba_CLASS_0" AS "LogProba", orig_cte."Proba_CLASS_0" AS "Proba", orig_cte."Score_CLASS_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 'CLASS_1' AS class, orig_cte."LogProba_CLASS_1" AS "LogProba", orig_cte."Proba_CLASS_1" AS "Proba", orig_cte."Score_CLASS_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 'CLASS_2' AS class, orig_cte."LogProba_CLASS_2" AS "LogProba", orig_cte."Proba_CLASS_2" AS "Proba", orig_cte."Score_CLASS_2" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_CLASS_0" AS "Score_CLASS_0", orig_cte."Score_CLASS_1" AS "Score_CLASS_1", orig_cte."Score_CLASS_2" AS "Score_CLASS_2", orig_cte."Proba_CLASS_0" AS "Proba_CLASS_0", orig_cte."Proba_CLASS_1" AS "Proba_CLASS_1", orig_cte."Proba_CLASS_2" AS "Proba_CLASS_2", orig_cte."LogProba_CLASS_0" AS "LogProba_CLASS_0", orig_cte."LogProba_CLASS_1" AS "LogProba_CLASS_1", orig_cte."LogProba_CLASS_2" AS "LogProba_CLASS_2", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_CLASS_0" AS "Score_CLASS_0", score_max."Score_CLASS_1" AS "Score_CLASS_1", score_max."Score_CLASS_2" AS "Score_CLASS_2", score_max."Proba_CLASS_0" AS "Proba_CLASS_0", score_max."Proba_CLASS_1" AS "Proba_CLASS_1", score_max."Proba_CLASS_2" AS "Proba_CLASS_2", score_max."LogProba_CLASS_0" AS "LogProba_CLASS_0", score_max."LogProba_CLASS_1" AS "LogProba_CLASS_1", score_max."LogProba_CLASS_2" AS "LogProba_CLASS_2", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_CLASS_0" AS "Score_CLASS_0", score_max."Score_CLASS_1" AS "Score_CLASS_1", score_max."Score_CLASS_2" AS "Score_CLASS_2", score_max."Proba_CLASS_0" AS "Proba_CLASS_0", score_max."Proba_CLASS_1" AS "Proba_CLASS_1", score_max."Proba_CLASS_2" AS "Proba_CLASS_2", score_max."LogProba_CLASS_0" AS "LogProba_CLASS_0", score_max."LogProba_CLASS_1" AS "LogProba_CLASS_1", score_max."LogProba_CLASS_2" AS "LogProba_CLASS_2", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", arg_max_cte."Proba_CLASS_0" AS "Proba_CLASS_0", arg_max_cte."Proba_CLASS_1" AS "Proba_CLASS_1", arg_max_cte."Proba_CLASS_2" AS "Proba_CLASS_2", CASE WHEN (arg_max_cte."Proba_CLASS_0" IS NULL OR arg_max_cte."Proba_CLASS_0" > 0.0) THEN ln(arg_max_cte."Proba_CLASS_0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CASE WHEN (arg_max_cte."Proba_CLASS_1" IS NULL OR arg_max_cte."Proba_CLASS_1" > 0.0) THEN ln(arg_max_cte."Proba_CLASS_1") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CASE WHEN (arg_max_cte."Proba_CLASS_2" IS NULL OR arg_max_cte."Proba_CLASS_2" > 0.0) THEN ln(arg_max_cte."Proba_CLASS_2") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte