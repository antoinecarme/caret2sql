-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretRegressor_nnet
-- Dataset : RandomReg_10
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS FLOAT) AS "Feature_0", CAST("ADS"."Feature_1" AS FLOAT) AS "Feature_1", CAST("ADS"."Feature_2" AS FLOAT) AS "Feature_2", CAST("ADS"."Feature_3" AS FLOAT) AS "Feature_3", CAST("ADS"."Feature_4" AS FLOAT) AS "Feature_4", CAST("ADS"."Feature_5" AS FLOAT) AS "Feature_5", CAST("ADS"."Feature_6" AS FLOAT) AS "Feature_6", CAST("ADS"."Feature_7" AS FLOAT) AS "Feature_7", CAST("ADS"."Feature_8" AS FLOAT) AS "Feature_8", CAST("ADS"."Feature_9" AS FLOAT) AS "Feature_9" 
FROM "RandomReg_10" AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 120.0435 * "IL"."Feature_0" + 229.3758 * "IL"."Feature_1" + 256.3339 * "IL"."Feature_2" + 163.1267 * "IL"."Feature_3" + 140.0383 * "IL"."Feature_4" + 96.92248 * "IL"."Feature_5" + 125.8595 * "IL"."Feature_6" + 125.7595 * "IL"."Feature_7" + 224.9761 * "IL"."Feature_8" + 86.73966 * "IL"."Feature_9" + 10.79208 AS "NEUR_1_1", 53.91789 * "IL"."Feature_0" + -40.7402 * "IL"."Feature_1" + -5.365128 * "IL"."Feature_2" + -66.70094 * "IL"."Feature_3" + -55.81299 * "IL"."Feature_4" + -21.60904 * "IL"."Feature_5" + 17.82619 * "IL"."Feature_6" + -20.85493 * "IL"."Feature_7" + -22.45962 * "IL"."Feature_8" + -26.33467 * "IL"."Feature_9" + 114.5781 AS "NEUR_1_2", 55.5557 * "IL"."Feature_0" + 140.6912 * "IL"."Feature_1" + 135.9683 * "IL"."Feature_2" + 72.31315 * "IL"."Feature_3" + 114.6137 * "IL"."Feature_4" + 102.635 * "IL"."Feature_5" + 112.1124 * "IL"."Feature_6" + 93.96044 * "IL"."Feature_7" + 136.9838 * "IL"."Feature_8" + 6.493225 * "IL"."Feature_9" + 51.222 AS "NEUR_1_3", -6.443423 * "IL"."Feature_0" + 33.64854 * "IL"."Feature_1" + 22.86887 * "IL"."Feature_2" + 7.077528 * "IL"."Feature_3" + 52.8757 * "IL"."Feature_4" + 84.79523 * "IL"."Feature_5" + -5.018447 * "IL"."Feature_6" + 36.02294 * "IL"."Feature_7" + 42.82494 * "IL"."Feature_8" + -8.259979 * "IL"."Feature_9" + -194.3395 AS "NEUR_1_4", 80.19544 * "IL"."Feature_0" + 222.9517 * "IL"."Feature_1" + 178.2416 * "IL"."Feature_2" + 70.83735 * "IL"."Feature_3" + 342.8554 * "IL"."Feature_4" + 138.8746 * "IL"."Feature_5" + 108.9889 * "IL"."Feature_6" + 179.2378 * "IL"."Feature_7" + 161.5893 * "IL"."Feature_8" + 177.9433 * "IL"."Feature_9" + -36.89277 AS "NEUR_1_5", -70.05763 * "IL"."Feature_0" + -153.6308 * "IL"."Feature_1" + -149.9338 * "IL"."Feature_2" + -122.3032 * "IL"."Feature_3" + -106.1231 * "IL"."Feature_4" + -132.2821 * "IL"."Feature_5" + -80.8804 * "IL"."Feature_6" + -94.23741 * "IL"."Feature_7" + -200.7447 * "IL"."Feature_8" + -50.70663 * "IL"."Feature_9" + -19.15646 AS "NEUR_1_6", 71.71039 * "IL"."Feature_0" + 165.6564 * "IL"."Feature_1" + 146.1123 * "IL"."Feature_2" + 81.32044 * "IL"."Feature_3" + 64.92103 * "IL"."Feature_4" + 74.47951 * "IL"."Feature_5" + 42.2603 * "IL"."Feature_6" + 124.367 * "IL"."Feature_7" + 171.5946 * "IL"."Feature_8" + 84.33191 * "IL"."Feature_9" + 27.47002 AS "NEUR_1_7", 82.63408 * "IL"."Feature_0" + 57.71919 * "IL"."Feature_1" + 77.56602 * "IL"."Feature_2" + 49.13992 * "IL"."Feature_3" + 51.65236 * "IL"."Feature_4" + 35.48055 * "IL"."Feature_5" + 56.66943 * "IL"."Feature_6" + -101.4982 * "IL"."Feature_7" + 63.94167 * "IL"."Feature_8" + -34.69766 * "IL"."Feature_9" + -45.21301 AS "NEUR_1_8", -90.00952 * "IL"."Feature_0" + 25.18467 * "IL"."Feature_1" + -123.632 * "IL"."Feature_2" + -82.25249 * "IL"."Feature_3" + -104.8533 * "IL"."Feature_4" + -67.92363 * "IL"."Feature_5" + -54.70418 * "IL"."Feature_6" + -67.58595 * "IL"."Feature_7" + -140.2221 * "IL"."Feature_8" + -108.1457 * "IL"."Feature_9" + -74.94088 AS "NEUR_1_9", -81.25562 * "IL"."Feature_0" + -45.02509 * "IL"."Feature_1" + -92.68289 * "IL"."Feature_2" + -71.59742 * "IL"."Feature_3" + -37.19663 * "IL"."Feature_4" + -124.7842 * "IL"."Feature_5" + -123.8107 * "IL"."Feature_6" + -33.82423 * "IL"."Feature_7" + -133.6306 * "IL"."Feature_8" + -74.63798 * "IL"."Feature_9" + -79.51864 AS "NEUR_1_10", 216.7459 * "IL"."Feature_0" + 45.01274 * "IL"."Feature_1" + 72.53392 * "IL"."Feature_2" + 18.30985 * "IL"."Feature_3" + -9.690258 * "IL"."Feature_4" + 42.81664 * "IL"."Feature_5" + 46.47933 * "IL"."Feature_6" + 59.11244 * "IL"."Feature_7" + 109.4529 * "IL"."Feature_8" + 124.4907 * "IL"."Feature_9" + -105.3536 AS "NEUR_1_11", -128.1926 * "IL"."Feature_0" + -156.2987 * "IL"."Feature_1" + -272.2817 * "IL"."Feature_2" + -160.1737 * "IL"."Feature_3" + -123.998 * "IL"."Feature_4" + -166.8345 * "IL"."Feature_5" + -11.3005 * "IL"."Feature_6" + -99.06249 * "IL"."Feature_7" + -387.041 * "IL"."Feature_8" + -74.73434 * "IL"."Feature_9" + 2.864051 AS "NEUR_1_12" 
FROM "IL"), 
"HL_1_logistic" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_1")))) AS "NEUR_1_1", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_2")))) AS "NEUR_1_2", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_3")))) AS "NEUR_1_3", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_4")))) AS "NEUR_1_4", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_5")))) AS "NEUR_1_5", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_6")))) AS "NEUR_1_6", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_7")))) AS "NEUR_1_7", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_8")))) AS "NEUR_1_8", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_9")))) AS "NEUR_1_9", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_10")))) AS "NEUR_1_10", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_11")))) AS "NEUR_1_11", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"HL_BA_1"."NEUR_1_12")))) AS "NEUR_1_12" 
FROM "HL_BA_1"), 
"HL_1_logistic_1" AS 
(SELECT "HL_1_logistic"."KEY" AS "KEY", "HL_1_logistic"."NEUR_1_1" AS "NEUR_1_1", "HL_1_logistic"."NEUR_1_2" AS "NEUR_1_2", "HL_1_logistic"."NEUR_1_3" AS "NEUR_1_3", "HL_1_logistic"."NEUR_1_4" AS "NEUR_1_4", "HL_1_logistic"."NEUR_1_5" AS "NEUR_1_5", "HL_1_logistic"."NEUR_1_6" AS "NEUR_1_6", "HL_1_logistic"."NEUR_1_7" AS "NEUR_1_7", "HL_1_logistic"."NEUR_1_8" AS "NEUR_1_8", "HL_1_logistic"."NEUR_1_9" AS "NEUR_1_9", "HL_1_logistic"."NEUR_1_10" AS "NEUR_1_10", "HL_1_logistic"."NEUR_1_11" AS "NEUR_1_11", "HL_1_logistic"."NEUR_1_12" AS "NEUR_1_12" 
FROM "HL_1_logistic"), 
"OL_BA" AS 
(SELECT "HL_1_logistic_1"."KEY" AS "KEY", -30.71957 * "HL_1_logistic_1"."NEUR_1_1" + -99.51439 * "HL_1_logistic_1"."NEUR_1_2" + -32.39504 * "HL_1_logistic_1"."NEUR_1_3" + 207.6683 * "HL_1_logistic_1"."NEUR_1_4" + 90.57098 * "HL_1_logistic_1"."NEUR_1_5" + -20.39558 * "HL_1_logistic_1"."NEUR_1_6" + 105.4301 * "HL_1_logistic_1"."NEUR_1_7" + 105.5453 * "HL_1_logistic_1"."NEUR_1_8" + -137.791 * "HL_1_logistic_1"."NEUR_1_9" + -93.43133 * "HL_1_logistic_1"."NEUR_1_10" + 75.65987 * "HL_1_logistic_1"."NEUR_1_11" + 71.28213 * "HL_1_logistic_1"."NEUR_1_12" + 2.956456 AS "NEUR_2_1" 
FROM "HL_1_logistic_1"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_BA"), 
"OL_identity_1" AS 
(SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_identity")
 SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_2_1" AS "Estimator" 
FROM "OL_identity_1"