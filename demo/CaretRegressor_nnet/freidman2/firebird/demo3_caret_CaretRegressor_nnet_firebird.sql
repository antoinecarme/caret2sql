-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretRegressor_nnet
-- Dataset : freidman2
-- Database : firebird


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS DOUBLE PRECISION) AS "Feature_0", CAST("ADS"."Feature_1" AS DOUBLE PRECISION) AS "Feature_1", CAST("ADS"."Feature_2" AS DOUBLE PRECISION) AS "Feature_2", CAST("ADS"."Feature_3" AS DOUBLE PRECISION) AS "Feature_3" 
FROM freidman2 AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.04915784 * "IL"."Feature_0" + 0.01401529 * "IL"."Feature_1" + 18.88929 * "IL"."Feature_2" + -1.145318 * "IL"."Feature_3" + -23.42237 AS "NEUR_1_1", -0.04041981 * "IL"."Feature_0" + -0.1173151 * "IL"."Feature_1" + -0.005086345 * "IL"."Feature_2" + 0.1159735 * "IL"."Feature_3" + -0.07311361 AS "NEUR_1_2", 0.06057736 * "IL"."Feature_0" + -0.113104 * "IL"."Feature_1" + -0.04709538 * "IL"."Feature_2" + -0.1024067 * "IL"."Feature_3" + -0.04742161 AS "NEUR_1_3", 33.71733 * "IL"."Feature_0" + 112.338 * "IL"."Feature_1" + 0.2043032 * "IL"."Feature_2" + 2.005742 * "IL"."Feature_3" + 0.5388162 AS "NEUR_1_4", 320.7452 * "IL"."Feature_0" + -133.8064 * "IL"."Feature_1" + 75.81888 * "IL"."Feature_2" + 2715.274 * "IL"."Feature_3" + 309.0516 AS "NEUR_1_5", -2.146867 * "IL"."Feature_0" + -160.8343 * "IL"."Feature_1" + -0.3136282 * "IL"."Feature_2" + -12.29464 * "IL"."Feature_3" + -1.388396 AS "NEUR_1_6", 50.39897 * "IL"."Feature_0" + -1.164602 * "IL"."Feature_1" + -54.52946 * "IL"."Feature_2" + 241.8579 * "IL"."Feature_3" + 31.10572 AS "NEUR_1_7", -0.1999804 * "IL"."Feature_0" + 0.07867334 * "IL"."Feature_1" + 66.10548 * "IL"."Feature_2" + 6.37235 * "IL"."Feature_3" + -134.4084 AS "NEUR_1_8", -0.04534382 * "IL"."Feature_0" + -0.09998145 * "IL"."Feature_1" + 0.07960498 * "IL"."Feature_2" + 0.008388371 * "IL"."Feature_3" + 0.03280387 AS "NEUR_1_9", -6.809546 * "IL"."Feature_0" + -15.91463 * "IL"."Feature_1" + -0.06840254 * "IL"."Feature_2" + -0.0113444 * "IL"."Feature_3" + -0.1891715 AS "NEUR_1_10", 0.01149968 * "IL"."Feature_0" + -0.1364271 * "IL"."Feature_1" + 0.09866761 * "IL"."Feature_2" + -0.06342437 * "IL"."Feature_3" + -0.0100298 AS "NEUR_1_11", -8.54832 * "IL"."Feature_0" + -4.863386 * "IL"."Feature_1" + 1.461774 * "IL"."Feature_2" + 3.465818 * "IL"."Feature_3" + 1.286659 AS "NEUR_1_12" 
FROM "IL"), 
"HL_1_logistic" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_1")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_1")) ELSE -709.782712893384 END)) AS "NEUR_1_1", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_2")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_2")) ELSE -709.782712893384 END)) AS "NEUR_1_2", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_3")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_3")) ELSE -709.782712893384 END)) AS "NEUR_1_3", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_4")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_4")) ELSE -709.782712893384 END)) AS "NEUR_1_4", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_5")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_5")) ELSE -709.782712893384 END)) AS "NEUR_1_5", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_6")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_6")) ELSE -709.782712893384 END)) AS "NEUR_1_6", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_7")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_7")) ELSE -709.782712893384 END)) AS "NEUR_1_7", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_8")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_8")) ELSE -709.782712893384 END)) AS "NEUR_1_8", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_9")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_9")) ELSE -709.782712893384 END)) AS "NEUR_1_9", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_10")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_10")) ELSE -709.782712893384 END)) AS "NEUR_1_10", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_11")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_11")) ELSE -709.782712893384 END)) AS "NEUR_1_11", 1.0 / (1.0 + exp(CASE WHEN (minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_12")) >= -709.782712893384) THEN minvalue(100.0, maxvalue(-100.0, -"HL_BA_1"."NEUR_1_12")) ELSE -709.782712893384 END)) AS "NEUR_1_12" 
FROM "HL_BA_1"), 
"HL_1_logistic_1" AS 
(SELECT "HL_1_logistic"."KEY" AS "KEY", "HL_1_logistic"."NEUR_1_1" AS "NEUR_1_1", "HL_1_logistic"."NEUR_1_2" AS "NEUR_1_2", "HL_1_logistic"."NEUR_1_3" AS "NEUR_1_3", "HL_1_logistic"."NEUR_1_4" AS "NEUR_1_4", "HL_1_logistic"."NEUR_1_5" AS "NEUR_1_5", "HL_1_logistic"."NEUR_1_6" AS "NEUR_1_6", "HL_1_logistic"."NEUR_1_7" AS "NEUR_1_7", "HL_1_logistic"."NEUR_1_8" AS "NEUR_1_8", "HL_1_logistic"."NEUR_1_9" AS "NEUR_1_9", "HL_1_logistic"."NEUR_1_10" AS "NEUR_1_10", "HL_1_logistic"."NEUR_1_11" AS "NEUR_1_11", "HL_1_logistic"."NEUR_1_12" AS "NEUR_1_12" 
FROM "HL_1_logistic"), 
"OL_BA" AS 
(SELECT "HL_1_logistic_1"."KEY" AS "KEY", 362.915 * "HL_1_logistic_1"."NEUR_1_1" + 0.04651731 * "HL_1_logistic_1"."NEUR_1_2" + 0.1073154 * "HL_1_logistic_1"."NEUR_1_3" + -118.724 * "HL_1_logistic_1"."NEUR_1_4" + -213.1193 * "HL_1_logistic_1"."NEUR_1_5" + -3.185525 * "HL_1_logistic_1"."NEUR_1_6" + 566.1352 * "HL_1_logistic_1"."NEUR_1_7" + 187.1792 * "HL_1_logistic_1"."NEUR_1_8" + 0.03047293 * "HL_1_logistic_1"."NEUR_1_9" + -17.49525 * "HL_1_logistic_1"."NEUR_1_10" + -0.119061 * "HL_1_logistic_1"."NEUR_1_11" + -28.8666 * "HL_1_logistic_1"."NEUR_1_12" + -60.74119 AS "NEUR_2_1" 
FROM "HL_1_logistic_1"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_BA"), 
"OL_identity_1" AS 
(SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_identity")
 SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_2_1" AS "Estimator" 
FROM "OL_identity_1"