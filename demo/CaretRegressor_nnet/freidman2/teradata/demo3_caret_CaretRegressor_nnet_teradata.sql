-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretRegressor_nnet
-- Dataset : freidman2
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS DOUBLE PRECISION) AS "Feature_0", CAST("ADS"."Feature_1" AS DOUBLE PRECISION) AS "Feature_1", CAST("ADS"."Feature_2" AS DOUBLE PRECISION) AS "Feature_2", CAST("ADS"."Feature_3" AS DOUBLE PRECISION) AS "Feature_3" 
FROM freidman2 AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", CAST(0.04915784 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.01401529 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(18.88929 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-1.145318 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-23.42237 AS DOUBLE PRECISION) AS "NEUR_1_1", CAST(-0.04041981 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.1173151 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.005086345 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.1159735 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.07311361 AS DOUBLE PRECISION) AS "NEUR_1_2", CAST(0.06057736 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.113104 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.04709538 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.1024067 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.04742161 AS DOUBLE PRECISION) AS "NEUR_1_3", CAST(33.71733 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(112.338 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.2043032 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(2.005742 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.5388162 AS DOUBLE PRECISION) AS "NEUR_1_4", CAST(320.7452 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-133.8064 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(75.81888 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(2715.274 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(309.0516 AS DOUBLE PRECISION) AS "NEUR_1_5", CAST(-2.146867 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-160.8343 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.3136282 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-12.29464 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-1.388396 AS DOUBLE PRECISION) AS "NEUR_1_6", CAST(50.39897 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-1.164602 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-54.52946 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(241.8579 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(31.10572 AS DOUBLE PRECISION) AS "NEUR_1_7", CAST(-0.1999804 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.07867334 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(66.10548 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(6.37235 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-134.4084 AS DOUBLE PRECISION) AS "NEUR_1_8", CAST(-0.04534382 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.09998145 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.07960498 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.008388371 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.03280387 AS DOUBLE PRECISION) AS "NEUR_1_9", CAST(-6.809546 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-15.91463 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.06840254 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.0113444 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.1891715 AS DOUBLE PRECISION) AS "NEUR_1_10", CAST(0.01149968 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.1364271 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.09866761 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.06342437 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.0100298 AS DOUBLE PRECISION) AS "NEUR_1_11", CAST(-8.54832 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-4.863386 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(1.461774 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(3.465818 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(1.286659 AS DOUBLE PRECISION) AS "NEUR_1_12" 
FROM "IL"), 
"HL_1_logistic" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_1")))) AS "NEUR_1_1", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_2")))) AS "NEUR_1_2", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_3")))) AS "NEUR_1_3", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_4")))) AS "NEUR_1_4", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_5")))) AS "NEUR_1_5", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_6")))) AS "NEUR_1_6", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_7")))) AS "NEUR_1_7", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_8")))) AS "NEUR_1_8", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_9")))) AS "NEUR_1_9", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_10")))) AS "NEUR_1_10", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_11")))) AS "NEUR_1_11", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_12")))) AS "NEUR_1_12" 
FROM "HL_BA_1"), 
"HL_1_logistic_1" AS 
(SELECT "HL_1_logistic"."KEY" AS "KEY", "HL_1_logistic"."NEUR_1_1" AS "NEUR_1_1", "HL_1_logistic"."NEUR_1_2" AS "NEUR_1_2", "HL_1_logistic"."NEUR_1_3" AS "NEUR_1_3", "HL_1_logistic"."NEUR_1_4" AS "NEUR_1_4", "HL_1_logistic"."NEUR_1_5" AS "NEUR_1_5", "HL_1_logistic"."NEUR_1_6" AS "NEUR_1_6", "HL_1_logistic"."NEUR_1_7" AS "NEUR_1_7", "HL_1_logistic"."NEUR_1_8" AS "NEUR_1_8", "HL_1_logistic"."NEUR_1_9" AS "NEUR_1_9", "HL_1_logistic"."NEUR_1_10" AS "NEUR_1_10", "HL_1_logistic"."NEUR_1_11" AS "NEUR_1_11", "HL_1_logistic"."NEUR_1_12" AS "NEUR_1_12" 
FROM "HL_1_logistic"), 
"OL_BA" AS 
(SELECT "HL_1_logistic_1"."KEY" AS "KEY", CAST(362.915 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_1" + CAST(0.04651731 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_2" + CAST(0.1073154 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_3" + CAST(-118.724 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_4" + CAST(-213.1193 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_5" + CAST(-3.185525 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_6" + CAST(566.1352 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_7" + CAST(187.1792 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_8" + CAST(0.03047293 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_9" + CAST(-17.49525 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_10" + CAST(-0.119061 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_11" + CAST(-28.8666 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_12" + CAST(-60.74119 AS DOUBLE PRECISION) AS "NEUR_2_1" 
FROM "HL_1_logistic_1"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_BA"), 
"OL_identity_1" AS 
(SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_identity")
 SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_2_1" AS "Estimator" 
FROM "OL_identity_1"