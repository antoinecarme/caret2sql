-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretRegressor_nnet
-- Dataset : freidman3
-- Database : monetdb


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS DOUBLE) AS "Feature_0", CAST("ADS"."Feature_1" AS DOUBLE) AS "Feature_1", CAST("ADS"."Feature_2" AS DOUBLE) AS "Feature_2", CAST("ADS"."Feature_3" AS DOUBLE) AS "Feature_3" 
FROM freidman3 AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.02861554 * "IL"."Feature_0" + 0.03885911 * "IL"."Feature_1" + 0.05979193 * "IL"."Feature_2" + 0.01546205 * "IL"."Feature_3" + -0.02386708 AS "NEUR_1_1", -0.03061261 * "IL"."Feature_0" + -0.007406619 * "IL"."Feature_1" + -0.003071847 * "IL"."Feature_2" + 0.07951035 * "IL"."Feature_3" + -0.04559018 AS "NEUR_1_2", 0.03584012 * "IL"."Feature_0" + -0.08329653 * "IL"."Feature_1" + -0.0297747 * "IL"."Feature_2" + -0.06467683 * "IL"."Feature_3" + -0.03001831 AS "NEUR_1_3", -0.2394615 * "IL"."Feature_0" + -0.4977668 * "IL"."Feature_1" + -0.07321472 * "IL"."Feature_2" + 0.06740922 * "IL"."Feature_3" + 0.0500267 AS "NEUR_1_4", 0.06092266 * "IL"."Feature_0" + 0.4536085 * "IL"."Feature_1" + 0.06551262 * "IL"."Feature_2" + -0.04765122 * "IL"."Feature_3" + -0.06211855 AS "NEUR_1_5", -0.01714103 * "IL"."Feature_0" + 0.0001530647 * "IL"."Feature_1" + 15.66684 * "IL"."Feature_2" + 0.0342404 * "IL"."Feature_3" + 1.025 AS "NEUR_1_6", 0.02719247 * "IL"."Feature_0" + -0.003205362 * "IL"."Feature_1" + -1.670181 * "IL"."Feature_2" + 0.009142805 * "IL"."Feature_3" + -0.07660863 AS "NEUR_1_7", 0.07290419 * "IL"."Feature_0" + 1.206364e-05 * "IL"."Feature_1" + 0.2015882 * "IL"."Feature_2" + 0.08556305 * "IL"."Feature_3" + -0.08306226 AS "NEUR_1_8", -0.02890602 * "IL"."Feature_0" + -0.05975421 * "IL"."Feature_1" + 0.0502131 * "IL"."Feature_2" + 0.00562535 * "IL"."Feature_3" + 0.02071611 AS "NEUR_1_9", -0.0268861 * "IL"."Feature_0" + 0.09137568 * "IL"."Feature_1" + 0.0007536834 * "IL"."Feature_2" + 0.06128641 * "IL"."Feature_3" + -0.06160358 AS "NEUR_1_10", 0.007431939 * "IL"."Feature_0" + -0.08584164 * "IL"."Feature_1" + 0.06223158 * "IL"."Feature_2" + -0.04002631 * "IL"."Feature_3" + -0.006324546 AS "NEUR_1_11", 0.05839957 * "IL"."Feature_0" + 0.01991569 * "IL"."Feature_1" + -0.06659248 * "IL"."Feature_2" + -0.07189586 * "IL"."Feature_3" + -0.0777797 AS "NEUR_1_12" 
FROM "IL"), 
"HL_1_logistic" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_1") THEN -"HL_BA_1"."NEUR_1_1" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_1") THEN -"HL_BA_1"."NEUR_1_1" ELSE -100.0 END END)) AS "NEUR_1_1", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_2") THEN -"HL_BA_1"."NEUR_1_2" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_2") THEN -"HL_BA_1"."NEUR_1_2" ELSE -100.0 END END)) AS "NEUR_1_2", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_3") THEN -"HL_BA_1"."NEUR_1_3" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_3") THEN -"HL_BA_1"."NEUR_1_3" ELSE -100.0 END END)) AS "NEUR_1_3", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_4") THEN -"HL_BA_1"."NEUR_1_4" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_4") THEN -"HL_BA_1"."NEUR_1_4" ELSE -100.0 END END)) AS "NEUR_1_4", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_5") THEN -"HL_BA_1"."NEUR_1_5" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_5") THEN -"HL_BA_1"."NEUR_1_5" ELSE -100.0 END END)) AS "NEUR_1_5", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_6") THEN -"HL_BA_1"."NEUR_1_6" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_6") THEN -"HL_BA_1"."NEUR_1_6" ELSE -100.0 END END)) AS "NEUR_1_6", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_7") THEN -"HL_BA_1"."NEUR_1_7" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_7") THEN -"HL_BA_1"."NEUR_1_7" ELSE -100.0 END END)) AS "NEUR_1_7", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_8") THEN -"HL_BA_1"."NEUR_1_8" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_8") THEN -"HL_BA_1"."NEUR_1_8" ELSE -100.0 END END)) AS "NEUR_1_8", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_9") THEN -"HL_BA_1"."NEUR_1_9" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_9") THEN -"HL_BA_1"."NEUR_1_9" ELSE -100.0 END END)) AS "NEUR_1_9", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_10") THEN -"HL_BA_1"."NEUR_1_10" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_10") THEN -"HL_BA_1"."NEUR_1_10" ELSE -100.0 END END)) AS "NEUR_1_10", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_11") THEN -"HL_BA_1"."NEUR_1_11" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_11") THEN -"HL_BA_1"."NEUR_1_11" ELSE -100.0 END END)) AS "NEUR_1_11", 1.0 / (1.0 + exp(CASE WHEN (100.0 <= CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_12") THEN -"HL_BA_1"."NEUR_1_12" ELSE -100.0 END) THEN 100.0 ELSE CASE WHEN (-100.0 <= -"HL_BA_1"."NEUR_1_12") THEN -"HL_BA_1"."NEUR_1_12" ELSE -100.0 END END)) AS "NEUR_1_12" 
FROM "HL_BA_1"), 
"HL_1_logistic_1" AS 
(SELECT "HL_1_logistic"."KEY" AS "KEY", "HL_1_logistic"."NEUR_1_1" AS "NEUR_1_1", "HL_1_logistic"."NEUR_1_2" AS "NEUR_1_2", "HL_1_logistic"."NEUR_1_3" AS "NEUR_1_3", "HL_1_logistic"."NEUR_1_4" AS "NEUR_1_4", "HL_1_logistic"."NEUR_1_5" AS "NEUR_1_5", "HL_1_logistic"."NEUR_1_6" AS "NEUR_1_6", "HL_1_logistic"."NEUR_1_7" AS "NEUR_1_7", "HL_1_logistic"."NEUR_1_8" AS "NEUR_1_8", "HL_1_logistic"."NEUR_1_9" AS "NEUR_1_9", "HL_1_logistic"."NEUR_1_10" AS "NEUR_1_10", "HL_1_logistic"."NEUR_1_11" AS "NEUR_1_11", "HL_1_logistic"."NEUR_1_12" AS "NEUR_1_12" 
FROM "HL_1_logistic"), 
"OL_BA" AS 
(SELECT "HL_1_logistic_1"."KEY" AS "KEY", -0.4394798 * "HL_1_logistic_1"."NEUR_1_1" + 0.04345709 * "HL_1_logistic_1"."NEUR_1_2" + 0.0651308 * "HL_1_logistic_1"."NEUR_1_3" + 0.2082565 * "HL_1_logistic_1"."NEUR_1_4" + -0.0896388 * "HL_1_logistic_1"."NEUR_1_5" + 3.454158 * "HL_1_logistic_1"."NEUR_1_6" + -0.7243488 * "HL_1_logistic_1"."NEUR_1_7" + -0.3466358 * "HL_1_logistic_1"."NEUR_1_8" + 0.02046919 * "HL_1_logistic_1"."NEUR_1_9" + -0.3866017 * "HL_1_logistic_1"."NEUR_1_10" + -0.07510818 * "HL_1_logistic_1"."NEUR_1_11" + -0.3205227 * "HL_1_logistic_1"."NEUR_1_12" + -0.3492119 AS "NEUR_2_1" 
FROM "HL_1_logistic_1"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_BA"), 
"OL_identity_1" AS 
(SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_identity")
 SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_2_1" AS "Estimator" 
FROM "OL_identity_1"