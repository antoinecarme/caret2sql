-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretRegressor_nnet
-- Dataset : freidman3
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS DOUBLE PRECISION) AS "Feature_0", CAST("ADS"."Feature_1" AS DOUBLE PRECISION) AS "Feature_1", CAST("ADS"."Feature_2" AS DOUBLE PRECISION) AS "Feature_2", CAST("ADS"."Feature_3" AS DOUBLE PRECISION) AS "Feature_3" 
FROM freidman3 AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", CAST(0.02861554 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.03885911 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.05979193 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.01546205 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.02386708 AS DOUBLE PRECISION) AS "NEUR_1_1", CAST(-0.03061261 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.007406619 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.003071847 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.07951035 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.04559018 AS DOUBLE PRECISION) AS "NEUR_1_2", CAST(0.03584012 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.08329653 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.0297747 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.06467683 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.03001831 AS DOUBLE PRECISION) AS "NEUR_1_3", CAST(-0.2394615 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.4977668 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.07321472 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.06740922 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.0500267 AS DOUBLE PRECISION) AS "NEUR_1_4", CAST(0.06092266 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.4536085 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.06551262 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.04765122 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.06211855 AS DOUBLE PRECISION) AS "NEUR_1_5", CAST(-0.01714103 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.0001530647 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(15.66684 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.0342404 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(1.025 AS DOUBLE PRECISION) AS "NEUR_1_6", CAST(0.02719247 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.003205362 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-1.670181 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.009142805 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.07660863 AS DOUBLE PRECISION) AS "NEUR_1_7", CAST(0.07290419 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(1.206364e-05 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.2015882 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.08556305 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.08306226 AS DOUBLE PRECISION) AS "NEUR_1_8", CAST(-0.02890602 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.05975421 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.0502131 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.00562535 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.02071611 AS DOUBLE PRECISION) AS "NEUR_1_9", CAST(-0.0268861 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.09137568 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.0007536834 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.06128641 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.06160358 AS DOUBLE PRECISION) AS "NEUR_1_10", CAST(0.007431939 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.08584164 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.06223158 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.04002631 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.006324546 AS DOUBLE PRECISION) AS "NEUR_1_11", CAST(0.05839957 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.01991569 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.06659248 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.07189586 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.0777797 AS DOUBLE PRECISION) AS "NEUR_1_12" 
FROM "IL"), 
"HL_1_logistic" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_1")))) AS "NEUR_1_1", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_2")))) AS "NEUR_1_2", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_3")))) AS "NEUR_1_3", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_4")))) AS "NEUR_1_4", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_5")))) AS "NEUR_1_5", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_6")))) AS "NEUR_1_6", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_7")))) AS "NEUR_1_7", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_8")))) AS "NEUR_1_8", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_9")))) AS "NEUR_1_9", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_10")))) AS "NEUR_1_10", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_11")))) AS "NEUR_1_11", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_12")))) AS "NEUR_1_12" 
FROM "HL_BA_1"), 
"HL_1_logistic_1" AS 
(SELECT "HL_1_logistic"."KEY" AS "KEY", "HL_1_logistic"."NEUR_1_1" AS "NEUR_1_1", "HL_1_logistic"."NEUR_1_2" AS "NEUR_1_2", "HL_1_logistic"."NEUR_1_3" AS "NEUR_1_3", "HL_1_logistic"."NEUR_1_4" AS "NEUR_1_4", "HL_1_logistic"."NEUR_1_5" AS "NEUR_1_5", "HL_1_logistic"."NEUR_1_6" AS "NEUR_1_6", "HL_1_logistic"."NEUR_1_7" AS "NEUR_1_7", "HL_1_logistic"."NEUR_1_8" AS "NEUR_1_8", "HL_1_logistic"."NEUR_1_9" AS "NEUR_1_9", "HL_1_logistic"."NEUR_1_10" AS "NEUR_1_10", "HL_1_logistic"."NEUR_1_11" AS "NEUR_1_11", "HL_1_logistic"."NEUR_1_12" AS "NEUR_1_12" 
FROM "HL_1_logistic"), 
"OL_BA" AS 
(SELECT "HL_1_logistic_1"."KEY" AS "KEY", CAST(-0.4394798 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_1" + CAST(0.04345709 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_2" + CAST(0.0651308 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_3" + CAST(0.2082565 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_4" + CAST(-0.0896388 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_5" + CAST(3.454158 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_6" + CAST(-0.7243488 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_7" + CAST(-0.3466358 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_8" + CAST(0.02046919 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_9" + CAST(-0.3866017 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_10" + CAST(-0.07510818 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_11" + CAST(-0.3205227 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_12" + CAST(-0.3492119 AS DOUBLE PRECISION) AS "NEUR_2_1" 
FROM "HL_1_logistic_1"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_BA"), 
"OL_identity_1" AS 
(SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_identity")
 SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_2_1" AS "Estimator" 
FROM "OL_identity_1"