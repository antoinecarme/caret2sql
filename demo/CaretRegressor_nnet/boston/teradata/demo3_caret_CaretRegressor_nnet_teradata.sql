-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CaretRegressor_nnet
-- Dataset : boston
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS DOUBLE PRECISION) AS "Feature_0", CAST("ADS"."Feature_1" AS DOUBLE PRECISION) AS "Feature_1", CAST("ADS"."Feature_2" AS DOUBLE PRECISION) AS "Feature_2", CAST("ADS"."Feature_3" AS DOUBLE PRECISION) AS "Feature_3", CAST("ADS"."Feature_4" AS DOUBLE PRECISION) AS "Feature_4", CAST("ADS"."Feature_5" AS DOUBLE PRECISION) AS "Feature_5", CAST("ADS"."Feature_6" AS DOUBLE PRECISION) AS "Feature_6", CAST("ADS"."Feature_7" AS DOUBLE PRECISION) AS "Feature_7", CAST("ADS"."Feature_8" AS DOUBLE PRECISION) AS "Feature_8", CAST("ADS"."Feature_9" AS DOUBLE PRECISION) AS "Feature_9", CAST("ADS"."Feature_10" AS DOUBLE PRECISION) AS "Feature_10", CAST("ADS"."Feature_11" AS DOUBLE PRECISION) AS "Feature_11", CAST("ADS"."Feature_12" AS DOUBLE PRECISION) AS "Feature_12" 
FROM boston AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", CAST(-0.1351813 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.02143762 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.09721068 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.009305186 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.01397769 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(0.03079222 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(0.2921661 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(0.01690945 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(-0.05263157 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(-0.09234688 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(0.0149016 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(-0.7622842 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(-0.2744261 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(-0.006197264 AS DOUBLE PRECISION) AS "NEUR_1_1", CAST(0.02014699 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.6179534 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.04437742 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.02284549 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.02935823 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(0.0417114 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(0.3148483 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-0.0003156307 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(0.04296511 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(0.5836911 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(-0.01205411 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(1.84664 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(-0.06593712 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(-0.01935552 AS DOUBLE PRECISION) AS "NEUR_1_2", CAST(-2.374975 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.8546931 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-3.647563 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(1.413034 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.09119969 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(4.195611 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(-3.182887 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-0.2243626 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(1.718077 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(0.2398923 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(-1.300518 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(0.698918 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(-4.869611 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(0.06881025 AS DOUBLE PRECISION) AS "NEUR_1_3", CAST(0.01888981 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.003662139 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.02322489 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.01467577 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.02142798 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(0.0007741832 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(0.02803737 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-0.002163595 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(0.002987478 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(-0.01827652 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(0.02442459 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(0.01183094 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(-0.02884906 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(-0.02338468 AS DOUBLE PRECISION) AS "NEUR_1_4", CAST(0.02358981 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.01990417 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.02242251 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.02059028 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.0133024 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(0.0129734 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(0.03297099 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(0.001547034 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(-0.002466041 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(0.05477244 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(-0.01448132 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(0.01715995 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(0.008023614 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(0.01862126 AS DOUBLE PRECISION) AS "NEUR_1_5", CAST(5.035675 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(2.355905 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.4689048 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.2765196 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.6269587 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(-11.30414 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(1.467389 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-4.129247 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(-6.571389 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(-0.3437788 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(2.86081 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(0.6700416 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(-16.89673 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(-0.8161347 AS DOUBLE PRECISION) AS "NEUR_1_6", CAST(0.01537435 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.02618181 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.006509641 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.01363565 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.01415559 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(-0.01409141 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(-0.002043709 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-0.02648619 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(-0.0293079 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(-0.03117244 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(0.03047694 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(-0.02567456 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(0.0267888 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(-0.002280895 AS DOUBLE PRECISION) AS "NEUR_1_7", CAST(0.01669056 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.1003909 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.01991443 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.004837676 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(-0.02259718 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(-0.002960343 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(-0.01003447 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(0.01271595 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(-0.03429068 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(-0.3009182 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(-0.008404199 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(-0.3531412 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(-0.0291831 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(-0.007238326 AS DOUBLE PRECISION) AS "NEUR_1_8", CAST(2.15465 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.01552231 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.1678482 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.03521127 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.02174246 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(-0.1915261 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(0.9150873 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(0.002452169 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(-0.1322021 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(-0.5427202 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(0.07356975 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(1.332741 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(0.1064475 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(0.02726335 AS DOUBLE PRECISION) AS "NEUR_1_9", CAST(-0.02484066 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(-0.005304619 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.0165223 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.01725457 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.0207067 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(0.0339034 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(0.04781904 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(0.007237797 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(0.01695399 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(0.1043466 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(0.03200844 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(0.06177061 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(0.02454189 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(0.02169011 AS DOUBLE PRECISION) AS "NEUR_1_10", CAST(-0.01503247 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.006681374 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(0.03881411 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(-0.03157174 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.007520752 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(0.0122862 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(0.1268908 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-0.009839361 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(-0.01148733 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(0.5613739 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(0.02650241 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(0.5968301 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(0.03491617 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(0.007100828 AS DOUBLE PRECISION) AS "NEUR_1_11", CAST(0.00592356 AS DOUBLE PRECISION) * "IL"."Feature_0" + CAST(0.01220896 AS DOUBLE PRECISION) * "IL"."Feature_1" + CAST(-0.02539924 AS DOUBLE PRECISION) * "IL"."Feature_2" + CAST(0.001335394 AS DOUBLE PRECISION) * "IL"."Feature_3" + CAST(0.003454459 AS DOUBLE PRECISION) * "IL"."Feature_4" + CAST(-0.01316109 AS DOUBLE PRECISION) * "IL"."Feature_5" + CAST(0.02215265 AS DOUBLE PRECISION) * "IL"."Feature_6" + CAST(-0.001631511 AS DOUBLE PRECISION) * "IL"."Feature_7" + CAST(-0.01144526 AS DOUBLE PRECISION) * "IL"."Feature_8" + CAST(0.04978539 AS DOUBLE PRECISION) * "IL"."Feature_9" + CAST(-0.02748036 AS DOUBLE PRECISION) * "IL"."Feature_10" + CAST(0.1343038 AS DOUBLE PRECISION) * "IL"."Feature_11" + CAST(-0.003273613 AS DOUBLE PRECISION) * "IL"."Feature_12" + CAST(-0.004381384 AS DOUBLE PRECISION) AS "NEUR_1_12" 
FROM "IL"), 
"HL_1_logistic" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_1")))) AS "NEUR_1_1", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_2")))) AS "NEUR_1_2", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_3")))) AS "NEUR_1_3", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_4")))) AS "NEUR_1_4", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_5")))) AS "NEUR_1_5", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_6")))) AS "NEUR_1_6", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_7")))) AS "NEUR_1_7", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_8")))) AS "NEUR_1_8", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_9")))) AS "NEUR_1_9", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_10")))) AS "NEUR_1_10", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_11")))) AS "NEUR_1_11", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(CAST(100.0 AS DOUBLE PRECISION), greatest(-CAST(100.0 AS DOUBLE PRECISION), -"HL_BA_1"."NEUR_1_12")))) AS "NEUR_1_12" 
FROM "HL_BA_1"), 
"HL_1_logistic_1" AS 
(SELECT "HL_1_logistic"."KEY" AS "KEY", "HL_1_logistic"."NEUR_1_1" AS "NEUR_1_1", "HL_1_logistic"."NEUR_1_2" AS "NEUR_1_2", "HL_1_logistic"."NEUR_1_3" AS "NEUR_1_3", "HL_1_logistic"."NEUR_1_4" AS "NEUR_1_4", "HL_1_logistic"."NEUR_1_5" AS "NEUR_1_5", "HL_1_logistic"."NEUR_1_6" AS "NEUR_1_6", "HL_1_logistic"."NEUR_1_7" AS "NEUR_1_7", "HL_1_logistic"."NEUR_1_8" AS "NEUR_1_8", "HL_1_logistic"."NEUR_1_9" AS "NEUR_1_9", "HL_1_logistic"."NEUR_1_10" AS "NEUR_1_10", "HL_1_logistic"."NEUR_1_11" AS "NEUR_1_11", "HL_1_logistic"."NEUR_1_12" AS "NEUR_1_12" 
FROM "HL_1_logistic"), 
"OL_BA" AS 
(SELECT "HL_1_logistic_1"."KEY" AS "KEY", CAST(-1.863313 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_1" + CAST(-0.128194 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_2" + CAST(6.474053 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_3" + CAST(0.01813677 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_4" + CAST(2.335336 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_5" + CAST(6.416257 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_6" + CAST(-0.0071284 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_7" + CAST(0.2763816 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_8" + CAST(3.612582 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_9" + CAST(2.345602 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_10" + CAST(2.496434 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_11" + CAST(2.313157 AS DOUBLE PRECISION) * "HL_1_logistic_1"."NEUR_1_12" + CAST(2.594217 AS DOUBLE PRECISION) AS "NEUR_2_1" 
FROM "HL_1_logistic_1"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_BA"), 
"OL_identity_1" AS 
(SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_2_1" AS "NEUR_2_1" 
FROM "OL_identity")
 SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_2_1" AS "Estimator" 
FROM "OL_identity_1"